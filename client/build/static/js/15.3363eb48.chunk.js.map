{"version":3,"sources":["components/FlexibleDialog.js","services/JobService.js","components/TabsComponents.js","hooks/useWindowSize.js","components/Tab01Start.js","components/Tab02Download.js","components/Tab03FillData.js","components/DragNDrop.js","components/Tab04Upload.js","components/Tab05Check.js","components/Tab06Validation.js","components/Tab07Finished.js","components/TabsPanel.js","components/Home.js"],"names":["FlexibleDialog","title","contentText","actions","props","onBackdropClick","onClose","event","reason","map","action","index","onClick","callback","closeModal","variant","autoFocus","style","textTransform","text","defaultProps","React","memo","get","a","TokenService","getUser","api","JobService","set","job","put","upload","file","formData","FormData","append","post","headers","transformXls2Xml","filePath","validateXml","transform","outcomeCheck","anno","codiceFiscaleAmministrazione","outcomeFailureDetails","sanitizeJob","xml","j","getPlans","useStyles","makeStyles","theme","paragraph","fontSize","paragraphSmall","centered","display","justifyContent","alignItems","justified","textAlign","box","boxLeft","boxRight","sup","scrollableContainer","flexDirection","marginTop","minHeight","scrollable","height","overflowY","paddingLeft","paddingRight","TabContainer","children","TabBodyScrollable","classes","size","useState","width","window","innerWidth","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","className","Math","max","TabTitle","TabParagraph","Box","mb","Typography","component","small","class","TabPrevButton","m","Button","color","onPrev","disabled","prevIsEnabled","TabNextButton","onNext","nextIsEnabled","TabTooltip","Tooltip","placement","anchor","Tab01Start","t","useTranslation","href","target","goto","Tab02Download","history","useHistory","download","setNextIsEnabled","showModal","useModal","userIsAuthenticated","AuthService","getCurrentUser","openDialog","tabId","push","link","document","createElement","config","data","templateDownloadName","templateDownloadLink","click","setJob","Grid","container","item","xs","ul","padding","Tab03FillData","baseStyle","flex","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","focusedStyle","acceptStyle","rejectStyle","DragNDrop","onDrop","accept","useDropzone","getRootProps","getInputProps","isFocused","isDragAccept","isDragReject","isDragActive","useMemo","Tab04Upload","fileSet","useCallback","fileReset","fileValidate","type","split","match","fileType","fileUpload","then","result","console","log","error","errorMessage","toast","fileSelect","selectedFile","acceptedFiles","originalname","Tab05Check","user","statusLocal","setStatusLocal","planUpgradeDeclined","code","planName","plan","name","cigCount","planRequired","tabValue","cigNumberAllowed","loading","path","Error","success","response","JSON","stringify","Tab06Validation","outcome","esitoUltimoTentativoAccessoUrl","metadati","annoRiferimento","header","codiceFiscaleStrutturaProponente","message","src","alt","dataUltimoTentativoAccessoUrl","Tab07Finished","TabPanel","value","other","role","hidden","id","p","a11yProps","StyledTab","withStyles","root","opacity","Tab","flexGrow","tab","palette","secondary","light","tabIndicator","dark","TabsPanel","getJob","changeTab","where","toLowerCase","redirect","remove","AppBar","elevation","position","top","Paper","square","Tabs","scrollButtons","onChange","ui","userCanForceTabChange","indicator","label","home","Home"],"mappings":"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","file":"static/js/15.3363eb48.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@mui/material';\n\nconst FlexibleDialog = ({ title, contentText, actions, ...props }) => (\n  <Dialog\n    {...props}\n    onBackdropClick={() => {} /* disable modal close on backdrop click */}\n    //disableScrollLock={false}\n    //disableEnforceFocus={false}\n    aria-labelledby={title}\n    onClose={(event, reason) => { /* console.log(\"REASON:\", reason); */ }}\n  >\n    <DialogTitle>{title}</DialogTitle>\n    <DialogContent>\n      <DialogContentText>{contentText}</DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      {actions.map((action, index) => (\n        <Button\n          key={index}\n          onClick={() => {\n            if (action.callback) action.callback();\n            if (action.closeModal) props.onClose();\n          }}\n          variant={action.variant === \"primary\" ? \"contained\" : action.variant === \"secondary\" ? \"outlined\" : \"contained\"}\n          autoFocus={props}\n          style={{textTransform: \"none\"}} // do not uppercase button text\n        >\n          {action.text}\n        </Button>\n      ))}\n    </DialogActions>\n  </Dialog>\n);\n\nFlexibleDialog.propTypes = {\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      closeModal: PropTypes.bool,\n      callback: PropTypes.func,\n      variant: PropTypes.oneOf([\n        \"primary\", \"secondary\",\n      ]),\n      autoFocus: PropTypes.bool,\n    })\n  ),\n};\n\nFlexibleDialog.defaultProps = {\n  title: \"\",\n  contentText: \"\",\n  actions: [\n    {\n      text: \"Ok\",\n      closeModal: true,\n      callback: () => {},\n      variant: \"primary\",\n      autoFocus: false,\n    }\n  ],\n};\n\nexport default React.memo(FlexibleDialog);","import api from \"./API\";\nimport TokenService from \"./TokenService\";\n\n// get job status\nconst get = async () => {\n  // const user = TokenService.getUser();\n  // if (!user) {\n  //   return null;\n  // }\n  // return api.get(\"/job/get\", {\n  //   userId: user._id,\n  // });\n\n  //const retval = await api.get(\"/job/get\");\n\n  const user = TokenService.getUser();\n  if (!user) {\n    return null;\n  }\n  return await api.get(\"/job/get\");\n};\n\n// set job status\nconst set = (job) => {\n  const user = TokenService.getUser();\n  if (!user) {\n    return null;\n  }\n\n  return api.put(\"/job/set\", {job});\n};\n\n// upload a file\nconst upload = (file) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  \n  return api.post(\"/job/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    }\n  });\n};\n\n// transform XLS to XML\nconst transformXls2Xml = (filePath) => {\n  return api.post(\"/job/transformXls2Xml/:filePath\", {\n    filePath,\n  });\n}\n\n// validate XML syntax\nconst validateXml = (transform) => {\n  return api.post(\"/job/validateXml/:transform\", {\n    transform,\n  });\n  // const retval = api.post(\"/job/validateXml/:transform\", {\n  //   transform,\n  // });\n  // console.log(\"****************** validateXml retval:\", retval);\n  // return retval;\n}\n\n// check ANAC periodic verification outcome\nconst outcomeCheck = (anno, codiceFiscaleAmministrazione) => {\n  return api.post(\"/job/outcomeCheck/:anno/:codiceFiscaleAmministrazione\",\n    {\n      anno,\n      codiceFiscaleAmministrazione,\n    }\n  );\n}\n\n// get ANAC periodic verification failed outcome details\nconst outcomeFailureDetails = (anno, codiceFiscaleAmministrazione) => {\n  return api.post(\n    \"/job/outcomeFailureDetails/anno/codiceFiscaleAmministrazione\",\n    {\n      anno,\n      codiceFiscaleAmministrazione,\n    }\n  );\n}\n\n// just to ignore big xml when debug printing...\nconst sanitizeJob = (job) => {\n  if (!job?.transform?.xml) {\n    return job;\n  }\n  let j = job;\n  j.transform.xml = \"…\";\n  return j;\n}\n\n// get ANAC periodic verification failed outcome details\nconst getPlans = () => {\n  return api.get(\n    \"/job/getPlans\",\n  );\n}\n\nconst JobService = {\n  get,\n  set,\n  upload,\n  transformXls2Xml,\n  validateXml,\n  outcomeCheck,\n  outcomeFailureDetails,\n  sanitizeJob,\n  getPlans,\n};\n\nexport default JobService;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport useWindowSize from \"../hooks/useWindowSize\";\n\n// const height = window.innerHeight;\n// const width = window.innerWidth;\n// const heightScrollable = (\n//   (height >= width) ?\n//     //height - (height *.12) - (height *.12) - (height *.12) // portrait\n//     height * .64 // portrait\n//   :\n//     //height - (height *.16) - (height *.16) - (height*.16) // landscape\n//     height * .52 // landscape\n//   );\n\n//console.log(\"height, width, heightScrollable:\", height, width, heightScrollable);\nconst useStyles = makeStyles(theme => ({\n\tparagraph: {\n    fontSize: \"1.1em\",\n\t},\n\tparagraphSmall: {\n    fontSize: \"0.8em\",\n\t},\n  centered: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  justified: {\n    textAlign: \"justify\",\n  },\n  box: {\n    display: \"flex\",\n  },\n  boxLeft: {\n    justifyContent: \"flex-start\",\n  },\n  boxRight: {\n    justifyContent: \"flex-end\",\n  },\n  sup: {\n    fontSize: \"0.8em\",\n  },\n  scrollableContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"1em\",\n    minHeight: \"5em\",\n    //maxHeight: heightScrollable,\n  },\n  scrollable: {\n    height: \"100%\",\n    overflowY: \"auto\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    minHeight: \"3em\",\n  },\n\n  // scrollableContainer: {\n  //   width: \"100%\",\n  //   height: \"100%\",\n  //   display: \"flex\",\n  //   flexDirection: \"column\",\n  //   flexWrap: \"nowrap\",\n  // },\n  // scrollableHeader: {\n  //   flexShrink: 0,\n  // },\n  // scrollableBody: {\n  //   flexGrow: 1,\n  //   overflow: \"auto\",\n  //   minHeight: \"3em\",\n  // },\n  // scrollableFooter: {\n  //   flexShrink: 0,\n  // },\n}));\n\nconst TabContainer = React.memo(props => {\n  //const classes = useStyles();\n  return (\n    <div>\n      {props.children}\n    </div>\n  );\n});\nTabContainer.propTypes = {\n};\nTabContainer.defaultProps = {\n};\n\nconst TabBodyScrollable = React.memo(props => {\n  const classes = useStyles();\n\n  /**\n   * Note: here we assume fixed sections height...\n   * this is a bad hack to have a scrollable body\n   * and avoid a scrollable container for any\n   * window height and consistent after a resize\n   */\n  const toolbarHeight = 90; // toolbar height\n  const tabbarHeight = 100; // tabbbar height\n  const footerHeight = 60; // footer height (TODO: put this in config.ui. ... ?)\n  const size = useWindowSize();\n\n  return (\n    <div className={classes.scrollableContainer}>\n      <div className={classes.scrollable} style={{height: Math.max(120, size.height - toolbarHeight - tabbarHeight - /*titleHeight - */footerHeight)}}>\n        {props.children}\n      </div>\n    </div>\n  );\n});\nTabBodyScrollable.propTypes = {\n};\nTabBodyScrollable.defaultProps = {\n};\n\nconst TabTitle = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <div className={classes.centered}>\n      <h2>{props.children}</h2>\n    </div>\n  );\n});\nTabTitle.propTypes = {\n};\nTabTitle.defaultProps = {\n};\n\nconst TabParagraph = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box mb={1}>\n      <Typography component=\"div\" className={`${classes.paragraph} ${classes.justified} ${props.small ? classes.paragraphSmall : null} ${props.class}`}>\n        {props.children}\n      </Typography>\n    </Box>\n  );\n});\nTabParagraph.propTypes = {\n  class: PropTypes.string,\n};\nTabParagraph.defaultProps = {\n  class: null,\n};\n\nconst TabPrevButton = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box\n      component=\"span\"\n      m={1} // margin\n      className={`${classes.box} ${classes.boxLeft}`}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={props.onPrev}\n        disabled={!props.prevIsEnabled}\n      >\n        {props.children}\n      </Button>\n    </Box>\n  );\n});\nTabPrevButton.propTypes = {\n  onPrev: PropTypes.func.isRequired,\n  prevIsEnabled: PropTypes.bool.isRequired,\n};\nTabPrevButton.defaultProps = {\n};\n\nconst TabNextButton = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box\n      component=\"span\"\n      m={1} // margin\n      className={`${classes.box} ${classes.boxRight}`}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        // fullWidth={props.fullWidth}\n        // variant={props.variant}\n        // color={props.color}\n        // size={props.size}\n        // className={`${classes.button} ${props.social ? classes.buttonFederated : \"\"} ${props.social ? classes[\"buttonFederated\" + capitalize(props.social)] : \"\"} ${classes[props.className]}`}\n        // startIcon={props.startIcon}\n        onClick={props.onNext}\n        disabled={!props.nextIsEnabled}\n      >\n        {props.children}\n      </Button>\n    </Box>\n  );\n});\nTabNextButton.propTypes = {\n  onNext: PropTypes.func.isRequired,\n  nextIsEnabled: PropTypes.bool.isRequired,\n};\nTabNextButton.defaultProps = {\n};\n\nconst TabTooltip = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Tooltip\n      title={props.title}\n      placement=\"top\"\n    >\n      <sup className={classes.sup}>{props.anchor}</sup>\n    </Tooltip>\n  );\n});\nTabTooltip.propTypes = {\n  title: PropTypes.string.isRequired,\n  anchor: PropTypes.string,\n};\nTabTooltip.defaultProps = {\n  anchor: \"*\",\n};\n\nexport {TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton, TabTooltip};","import { useState, useEffect } from \"react\";\n\nexport default function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n      //console.log(\"useWindowSize - height:\", window.innerHeight);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton, TabTooltip } from \"./TabsComponents\";\n\nfunction Tab01Start(props) {\n  const { t } = useTranslation();\n  const [ nextIsEnabled ] = useState(true);\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Welcome!\")}\n        </TabTitle>\n        <TabParagraph>\n          Questa è la nostra proposta per adempiere i requisiti della {\" \"}\n          <a href=\"https://www.anticorruzione.it/-/adempimenti-legge-190/2012-art.-1-comma-32-7\" target=\"legge190\">\n            Legge 190\n          </a>\n          . Speriamo che sia chiara e semplice da usare.\n          </TabParagraph>\n        <TabParagraph>\n          Questa app ti guiderà passo passo nei pochi passi che occorrono per completare\n          l'adempimento con successo.\n        </TabParagraph>\n        <TabParagraph>\n          Per iniziare dovrai scaricare un modello Excel\n          <TabTooltip\n            title={\"Può essere in formato MicroSoft-Excel, oppure in formato ODS, come preferisci.\"}\n          >\n          </TabTooltip>\n          , che contiene delle regole per guidarti nella compilazione, e minimizzare i possibili errori formali.\n        </TabParagraph>\n        <TabParagraph>\n          Poi dovrai inserire, uno per riga, tutti i beni o servizi che la tua struttura ha appaltato\n          nell'anno in corso.\n        </TabParagraph>\n        <TabParagraph>\n          Alla fine dell'anno, in genere entro la fine di Gennaio dell'anno successivo, sarà sufficiente\n          caricare qui il foglio Excel compilato.\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto il nostro sistema effettuerà il controllo formale dei dati inseriti.\n          Nel caso che venga segnalata qualche anomalia dovrai correggere sul file Excel le anomalie\n          segnalate, e poi ri-caricarlo.\n        </TabParagraph>\n        <TabParagraph>\n          Dopodichè potrai scaricare il documento XML prodotto, che andrà pubblicato sul\n          sito cui fa riferimento la tua struttura.\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto avrai praticamente completato l'adempimento.\n          Se vorrai potrai controllare - sempre su questo sito - l'esito della verifica da parte\n          dell'ANAC.\n        </TabParagraph>\n        <TabParagraph>\n          Tieni presente che siamo sempre disponibili a risponderti per qualsiasi dubbio o\n          incertezza. Le modalità di assistenza sono diverse, dal supporto telefonico a\n          quello per email, e dipendono anche dal piano scelto.\n          I riferimenti sono presenti nel menu, alla voce \"Supporto\".\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <div>\n        <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n          {`${t(\"Start\")}`}\n        </TabNextButton>\n      </div>\n    </TabContainer>\n  );\n}\nTab01Start.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab01Start.defaultProps = {\n};\n\nexport default React.memo(Tab01Start);\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { useModal } from \"mui-modal-provider\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport AuthService from \"../services/AuthService\";\nimport TokenService from \"../services/TokenService\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport FlexibleDialog from \"./FlexibleDialog\";\nimport config from \"../config\";\n\n\n\nfunction Tab02Download(props) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const [ prevIsEnabled, ] = useState(true);\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(() => props.job?.download ? props.job?.download : false);\n  const { showModal } = useModal();\n  const openDialog = (props) => showModal(FlexibleDialog, props);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  const userIsAuthenticated = () => {\n    if (!AuthService.getCurrentUser()) { // user is not authenticated\n      openDialog({\n        title: t(\"Please log in or register\"),\n        contentText: t(\"You need to be authenticated to proceed\"),\n        actions: [\n          {\n            text: t(\"Login\"),\n            closeModal: true,\n            autoFocus: true,\n            callback: () => {\n              TokenService.set(\"redirect\", props.tabId);\n              history.push(\"/signin\");\n            },\n          },\n          {\n            text: t(\"Register\"),\n            closeModal: true,\n            callback: () => {\n              TokenService.set(\"redirect\", props.tabId);\n              history.push(\"/signup\");\n            },\n          },\n          {\n            text: t(\"Cancel\"),\n            closeModal: true,\n            callback: () => props.goto(\"prev\"),\n          }\n        ],\n      });\n      return false;\n    }\n    return true;\n  }\n\n  const onDownload = () => {\n    if (userIsAuthenticated()) {\n      const link = document.createElement(\"a\");\n      link.download = config.data.templateDownloadName;\n      link.href = config.data.templateDownloadLink;\n      link.click();\n      setNextIsEnabled(true);\n      props.setJob({...props.job, download: true});\n    }\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Download\")}\n        </TabTitle>\n        <TabParagraph>\n          Scarica il modello Excel in cui potrai inserire i dati degli appalti, uno per riga.\n        </TabParagraph>\n        <TabParagraph>\n          <Button onClick={onDownload} variant=\"contained\" color=\"tertiary\">\n            {t(\"Download\")} ⬇\n          </Button>\n        </TabParagraph>\n        {/* <br />\n        <TabParagraph small>\n          <input type=\"checkbox\"></input>\n          Clicca qui se preferisci la versione ODS (Open Document Format),\n          nel caso che tu utilizzi LibreOffice anziché Microsoft Office.\n        </TabParagraph> */}\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {`${t(\"Back\")}`}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {`${t(\"Continue\")}`}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab02Download.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab02Download.defaultProps = {\n};\n\nexport default React.memo(Tab02Download);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@mui/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport { useTranslation } from \"react-i18next\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\n\nconst useStyles = makeStyles(theme => ({\n  ul: {\n    padding: 32,\n  }\n}));\n\nfunction Tab03FillData(props) {\n  const classes = useStyles();\n  //const { auth } = useContext(AuthContext);\n  const { t } = useTranslation();\n  const [ prevIsEnabled ] = useState(true);\n  const [ nextIsEnabled ] = useState(true);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Fill your data\")}\n        </TabTitle>\n        <TabParagraph>\n          Adesso puoi aprire il modello scaricato con il tuo programma di gestione fogli di lavoro.\n        </TabParagraph>\n        <TabParagraph>\n          Sono presenti 2 fogli: \"METADATI\" ed \"ELENCO GARE\".\n          Ti consigliamo di iniziare dal primo foglio, \"METADATI\", ed inserire i 4 dati generali richiesti:\n          <ul className={classes.ul}>\n            <li><i>codiceFiscaleStrutturaProponente</i> il codice fiscale della tua struttura</li>\n            <li><i>denominazioneStrutturaProponente</i> la ragione sociale della tua struttura</li>\n            <li><i>annoRiferimento</i> l'anno di riferimento per cui inserirai gli appalti</li>\n            <li><i>urlFile</i> l'indirizzo URL dove sarà pubblicato il documento finale</li>\n          </ul>\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto puoi passare al secondo foglio, \"ELENCO GARE\".\n          Occorre inserire ogni appalto (o \"gara\"), uno per riga.\n        </TabParagraph>\n        <TabParagraph>\n          I campi da compilare sono:\n          <ul className={classes.ul}>\n            <li><i>CIG</i> il Codice Identificativo Gara</li>\n            ... TODO: documentare tutti gli altri campi...\n          </ul>\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {`${t(\"Back\")}`}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {`${t(\"Continue\")}`}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab03FillData.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab03FillData.defaultProps = {\n};\n\nexport default React.memo(Tab03FillData);\n","import React, { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"blue\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#353535\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst focusedStyle = {\n  backgroundColor: \"lightyellow\",\n  borderColor: \"purple\",\n};\n\nconst acceptStyle = {\n  backgroundColor: \"lightgreen\",\n  borderColor: \"darkgreen\",\n};\n\nconst rejectStyle = {\n  backgroundColor: \"lightred\",\n  borderColor: \"darkred\",\n};\n\nconst DragNDrop = ({ onDrop, accept }) => {\n  const { t } = useTranslation();\n  const {\n    getRootProps,\n    getInputProps,\n    isFocused,\n    isDragAccept,\n    isDragReject,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept\n  });\n\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isFocused ? focusedStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isFocused,\n    isDragAccept,\n    isDragReject,\n  ]);\n\n  return (\n    <div className=\"dropzone-div\" {...getRootProps({style})}>\n      <input className=\"dropzone-input\" {...getInputProps()} />\n      <div className=\"text-center\">\n        {isDragActive ? (\n          <p className=\"dropzone-content\">\n            {t(\"Release to drop the files here\")}\n          </p>\n        ) : (\n          <p className=\"dropzone-content\">\n            {t(\"Drag 'n drop some files here, or click to select files\")}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DragNDrop;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport { useModal } from \"mui-modal-provider\";\nimport AuthService from \"../services/AuthService\";\nimport JobService from \"../services/JobService\";\nimport TokenService from \"../services/TokenService\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { toast } from \"./Toast\";\nimport DragNDrop from \"./DragNDrop\";\nimport FlexibleDialog from \"./FlexibleDialog\";\n\n\n\nfunction Tab04Upload(props) {\n  //const classes = useStyles();\n  const { t } = useTranslation();\n  const history = useHistory();\n  const [ prevIsEnabled ] = useState(true);\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(!!props?.job?.file);\n  const { showModal } = useModal();\n  const openDialog = (props) => showModal(FlexibleDialog, props);\n\n  const [ accept ] = useState([\n    \".csv\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    \"application/vnd.ms-excel\",\n  ]);\n\n  useEffect(() => {\n    // check if user is authenticated\n    const user = AuthService.getCurrentUser();\n    if (!user) { // user is not authenticated\n      openDialog({\n        title: t(\"Please log in or register\"),\n        contentText: t(\"You need to be authenticated to proceed\"),\n        actions: [\n          {\n            text: t(\"Login\"),\n            closeModal: true,\n            autoFocus: true,\n            callback: () => {\n              TokenService.set(\"redirect\", props.tabId);\n              history.push(\"/signin\");\n            },\n          },\n          {\n            text: t(\"Register\"),\n            closeModal: true,\n            callback: () => {\n              TokenService.set(\"redirect\", props.tabId);\n              history.push(\"/signup\");\n            },\n          },\n          {\n            text: t(\"Cancel\"),\n            closeModal: true,\n            callback: () => props.goto(\"prev\"),\n          }\n        ],\n      });\n      return false;\n    }\n    return true;\n  /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props]);\n\n  const fileSet = useCallback(async(file) => {\n    props.setJob({...props.job, file});\n  }, [props]);\n\n  const fileReset = useCallback(async() => {\n    /**\n     * When file is reset, we clear the full job! (we only keep tabId)\n     */\n    let job = {};\n    job.tabId = props.job.tabId;\n    //job.file = null;\n    props.setJob(job);\n    setNextIsEnabled(false);\n  }, [props]);\n\n  const fileValidate = useCallback((file) => { // validate file type or name\n    // ods: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n    // xls: application/vnd.ms-excel\n    if (!( // TODO: check if these tests are sufficiently general...\n      file?.type?.split(\"/\")[1]?.match(\"officedocument.spreadsheetml.sheet\") || //* TODO: ignore case... */\n      file?.type?.split(\"/\")[1]?.match(\"ms-excel\")\n    )) {\n      return t(\"Please upload a spreadsheet\") + `.` +\n        (file?.type ? ` ` + t(\"Selected file looks like {{fileType}}\", { fileType: file.type }) : \"\")\n      ;\n    }\n    return null; // validated\n  }, [t]);\n\n  const fileUpload = useCallback(async(file) => {\n    await JobService.upload(file).then(\n      result => {\n        console.log('Upload success, file path', result.data.file);\n        fileSet(result.data.file);\n        //props.setJob({...props.job, file: result.data.file});\n        // TODO: possibly save current job as historycal record\n      },\n      error => {\n        console.error('Upload error:', error);\n        fileReset();\n        props.setJob({...props.job, file: {error: errorMessage(error)}}) // set upload error in job.file.error\n        toast.error(errorMessage(error));\n        return;\n      }\n    );\n  }, [props, fileSet, fileReset]);\n\n  const fileSelect = useCallback(async(selectedFile) => {\n    if (selectedFile) {\n      const error = fileValidate(selectedFile);\n      if (error) {\n        //setFile(null);\n        props.setJob({...props.job, file: null});\n        //fileSet(null);\n        setNextIsEnabled(false);\n      } else {\n        //setFile(selectedFile);\n        //fileSet(selectedFile);\n        props.setJob({...props.job, file: selectedFile});\n        await fileUpload(selectedFile);\n        setNextIsEnabled(true);\n      }\n    } else {\n      toast.error(t(\"No file selected, sorry... Please, repeat...\"));\n      //setFile(null);\n      //fileSet(null);\n      props.setJob({...props.job, file: null});\n      setNextIsEnabled(false);\n    }\n  }, [/*fileSet, */props, fileUpload, fileValidate, t]);\n\n  // on drop callback\n  const onDrop = useCallback(acceptedFiles => {\n    // this callback will be called after files get dropped, we will get the acceptedFiles;\n    // if needed, we can even access the rejected files too\n    console.log(\"accepted files:\", acceptedFiles);\n    fileSelect(acceptedFiles[0]);\n  }, [fileSelect]);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = async () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Upload\")}\n        </TabTitle>\n        <TabParagraph>\n          Carica il foglio Excel compilato:\n        </TabParagraph>\n\n        <div className=\"container\">\n          <DragNDrop\n            onDrop={onDrop}\n            accept={accept}\n          />\n          <br />\n          <TabParagraph>\n            {props?.job?.file?.originalname && t(\"Selected file\") + `: ${props?.job?.file?.originalname}`}\n            <br />\n            {props?.job?.file?.originalname && <Button\n              variant=\"contained\"\n              size=\"small\"\n              onClick={fileReset}\n              title={t(\"Remove file\")}> 🗑 </Button>}\n          </TabParagraph>\n        </div>\n\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {`${t(\"Back\")}`}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {`${t(\"Continue\")}`}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\n\nTab04Upload.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab04Upload.defaultProps = {\n};\n\nexport default React.memo(Tab04Upload);","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useModal } from \"mui-modal-provider\";\nimport Grid from \"@mui/material/Grid\";\nimport { toast } from \"./Toast\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport TokenService from \"../services/TokenService\";\nimport JobService from \"../services/JobService\";\nimport FlexibleDialog from \"./FlexibleDialog\";\n\n\n\nfunction Tab05Check(props) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const user = TokenService.getUser();\n  const [ statusLocal, setStatusLocal ] = useState({});\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(!!props?.job?.transform?.planUpgradeDeclined);\n  const [ prevIsEnabled] = useState(true);\n  const { showModal } = useModal();\n  const openDialog = (props) => showModal(FlexibleDialog, props);\n\n  useEffect(() => {\nconsole.log(\"useeffect 1\");\n    if (props.job?.transform) {\n      if (props.job?.transform?.code === \"TRUNCATED_DUE_TO_PLAN_LIMIT\") {\n        if (!props.job?.transform?.planUpgradeDeclined) { // TODO: when will we reset this flag?\n          openDialog({\n            title: t(\"Please upgrade your plan\"),\n            contentText: \n              t(\"You need to upgrade your plan to proceed.\") + \"\\n\" +\n              t(\"Your current plan is \\\"{{planName}}\\\".\", { planName: user?.plan?.name}) + \"\\n\" +\n              t(\"To elaborate {{cigCount}} CIGs you need at least plan \\\"{{planName}}\\\"\", { cigCount: props.job?.transform?.cigCount, planName: props.job?.transform?.planRequired?.name }),\n            actions: [\n              {\n                text: t(\"Upgrade plan\"),\n                closeModal: true,\n                autoFocus: true,\n                callback: () => {\n                  TokenService.set(\"redirect\", props.tabId);\n                  history.push(\"/profile\", { tabValue: 1 }); // redirect to /profile route, to second tab, where plan can be changed\n                },\n              },\n              {\n                text: t(\"Proceed with the first {{cigNumberAllowed}} CIGs\", { cigNumberAllowed: user?.plan?.cigNumberAllowed }),\n                closeModal: true,\n                callback: () => {\n                  setNextIsEnabled(true);\n                  props.setJob({...props.job, transform: {...props.job?.transform, planUpgradeDeclined: true}});\n                },\n              },\n            ],\n          });\n        }\n      }\n    } else {\n      setNextIsEnabled(true);\n    }\n  /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props.job?.transform]);\n\n  useEffect(() => {\nconsole.log(\"useeffect 2\");\n    if (props.job.file && !props.job.transform) {\n      (async () => {\n        setStatusLocal({loading: true});\n        await JobService.transformXls2Xml(props.job.file.path).then(\n          result => {\n            if (result instanceof Error) {\n              props.setJob({...props.job, transform: result});\n              toast.error(errorMessage(result));\n              return setStatusLocal({ error: errorMessage(result)});\n            }\n            props.setJob({...props.job, transform: result.data.result});\n            setStatusLocal({success: result.data});\n            //setNextIsEnabled(true);\n          },\n        );\n      })();\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, []); //props, props.job]);\n\n  useEffect(() => {\nconsole.log(\"useeffect 3\");\n    if (props.job.file && props.job.transform && !props.job.validateXml) {\n      (async () => {\n        setStatusLocal({loading: true});\n        await JobService.validateXml(props.job.transform).then(\n          response => {\n            if (response instanceof Error) {\n              props.setJob({...props.job, validateXml: response});\n              //console.log(\"validateXml error:\", response);\n              toast.error(errorMessage(response));\n              return setStatusLocal({ error: errorMessage(response)});\n            }\n            //console.log(\"validateXml success:\", response.data);\n            props.setJob({...props.job, validateXml: response.data});\n            setStatusLocal({success: response.data});\n          },\n          error => {\n            props.setJob({...props.job, validateXml: error});\n          },\n        );\n      })();\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [/*props, job.transform, setJob*/]);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  //if (!props.active) return null;\n  \nconsole.log(props.job);\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Check\")}\n        </TabTitle>\n        <TabParagraph>\n          <pre>\n             JOB: {JSON.stringify(props.job, null, 2)}\n          </pre>\n          {statusLocal && \"loading\" in statusLocal && `Elaborazione in corso...`}\n          {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n          {statusLocal && \"success\" in statusLocal && `Elaborazione completata`}\n        </TabParagraph>\n        {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {`${t(\"Back\")}`}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {`${t(\"Continue\")}`}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\n\nTab05Check.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab05Check.defaultProps = {\n};\n\nexport default React.memo(Tab05Check);","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@mui/material/Grid\";\nimport { toast } from \"./Toast\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport JobService from \"../services/JobService\";\n\n\n\nfunction Tab06Validation(props) {\n  const { t } = useTranslation();\n  const [ statusLocal, setStatusLocal ] = useState({});\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(false);\n  const [ prevIsEnabled ] = useState(true);\n\n  useEffect(() => {\n    if (props.job && props.job.transform) {\n      if (props.job.outcome) {\n        setNextIsEnabled(true);\n        setStatusLocal({success: props.job.outcome.esitoUltimoTentativoAccessoUrl === \"successo\"});\n      } else {\n        (async () => {\n          setStatusLocal({loading: true});\n          await JobService.outcomeCheck(\n            props.job?.transform?.metadati?.annoRiferimento,\n            props.job?.transform?.header?.codiceFiscaleStrutturaProponente\n          ).then(\n            result => {\n              if (result instanceof Error) {\n                toast.error(errorMessage(result));\n                return setStatusLocal({ error: errorMessage(result)});\n              }\n              //console.log(\"OUTCOMECHECK result:\", result);\n              props.setJob({...props.job, outcome: result.data});\n              setStatusLocal({success: result.data});\n              setNextIsEnabled(true);\n            },\n            error => {\n              toast.error(errorMessage(error));\n              props.setJob({...props.job, outcome: error.response.data.message});\n              return setStatusLocal({ error: errorMessage(error)});\n            }\n          );\n        })();\n      }\n    }\n  /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props.job.transform, props.job.outcome]);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  //if (!props.active) return null;\n  \n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Wait for ANAC validation\")}\n        </TabTitle>\n        <TabParagraph>\n          {statusLocal && \"success\" in statusLocal && (props.job?.outcome?.esitoUltimoTentativoAccessoUrl === \"successo\") && (\n            <pre>\n              <img src=\"images/success.ico\" width=\"64\" alt=\"success\"></img> {props.job?.outcome?.dataUltimoTentativoAccessoUrl}\n            </pre>\n          )}\n          <pre>\n            JOB: {JSON.stringify(props.job, null, 2)}\n          </pre>\n        </TabParagraph>\n        {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {`${t(\"Back\")}`}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {`${t(\"Continue\")}`}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab06Validation.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab06Validation.defaultProps = {\n};\n\nexport default React.memo(Tab06Validation);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@mui/material/Grid\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton } from \"./TabsComponents\";\n\nfunction Tab07Finished(props) {\n  const { t } = useTranslation();\n  const [ prevIsEnabled ] = useState(true);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Finished\")}!\n        </TabTitle>\n        <TabParagraph>\n          <div style={{fontSize: 128, textAlign: \"center\"}}>\n            🏁\n          </div>\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {`${t(\"Back\")}`}\n          </TabPrevButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab07Finished.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab07Finished.defaultProps = {\n};\n\nexport default React.memo(Tab07Finished);\n","import React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport withStyles from '@mui/styles/withStyles';\nimport AppBar from '@mui/material/AppBar';\nimport Paper from '@mui/material/Paper';\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport TokenService from \"../services/TokenService\";\nimport JobService from \"../services/JobService\";\nimport Tab01Start from \"./Tab01Start\";\nimport Tab02Download from \"./Tab02Download\";\nimport Tab03FillData from \"./Tab03FillData\";\nimport Tab04Upload from \"./Tab04Upload\";\nimport Tab05Check from \"./Tab05Check\";\nimport Tab06Validation from \"./Tab06Validation\";\nimport Tab07Finished from \"./Tab07Finished\";\nimport config from \"../config\";\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>\n        {children}\n      </Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst a11yProps = (index) => {\n  return {\n    id: `nav-tab-${index}`,\n    \"aria-controls\": `nav-tabpanel-${index}`\n  };\n}\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    opacity: 0.8,\n  },\n}))(props => {\n  return (\n    <Tab {...props} />\n  );\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    //backgroundColor: theme.palette.background.paper,\n  },\n  // tabs: {\n  //   \"& .MuiTabs-indicator\": {\n  //     //display: \"none\",\n  //     backgroundColor: \"orange\",\n  //   }\n  // }\n  tab: {\n    backgroundColor: theme.palette.secondary.light,\n  },\n  tabIndicator: {\n    backgroundColor: theme.palette.secondary.dark,\n    height: 1,\n  }\n\n}));\n\nconst TabsPanel = () => {\n  const classes = useStyles();\n  const [ job, setJob ] = useState(() => TokenService.getJob());\n  //const { job, setJob } = useContext(JobContext);\n  //const [ job, setJob ] = useState(JobService.get());\n  //const [ job, setJob ] = useState(TokenService.getJob());\n  //const redirect = TokenService.getRedirect();\n  //const [ tabId, setTabId ] = useState(TokenService.getJob());\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const redirect = TokenService.get(\"redirect\");\n    if (redirect) {\n      setJob({...job, tabId: redirect });\n      TokenService.remove(\"redirect\");\n    }\n  }, [job]);\n  \n  useEffect(() => { // to serialize job\n    TokenService.setJob(job); // serialize locally, on local storage\n    JobService.set(job); // serialize remotely, on server db\n  }, [job]);\n\n  function changeTab(id) {\n    setJob({...job, tabId: id });\n  }\n\n  function forceTab(event, id) {\n    if (config.ui.userCanForceTabChange) { // user can force tab change by clicking on app bar titles\n      changeTab(id);\n    }\n  }\n  \n  function goto(where) {\n    let id = where;\n    if (typeof where === \"string\") {\n      switch (where.toLowerCase()) {\n        case \"start\":\n          break;\n        case \"download\":\n          break;\n        case \"fill your data\":\n          break;\n        case \"upload\":\n          break;\n        case \"check\":\n          break;\n        case \"wait for validation\":\n          break;\n        case \"finish!\":\n          break;\n        case \"next\":\n          id = job ? job.tabId + 1 : 0;\n          break;\n        case \"prev\":\n          id = job ? job.tabId - 1 : 0;\n          break;\n        default:\n          console.error(`Unforeseen where specification in goto: ${where}`);\n          return;\n      }\n    }\n    changeTab(id);\n  }\n\n  if (!job?.tabId) job.tabId = 0;\n  return (\n    <div className={classes.root}>\n      <AppBar elevation={0} position=\"fixed\" style={{/*backgroundColor: \"transparent\",*/ top: 50}}>\n        {/* <Tabs\n          value={job.tabId}\n          onChange={forceTab}\n          indicatorColor=\"primary\"\n          // textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs\"\n          className={classes.tabs}\n        > */}\n        <Paper elevation={1} square>\n          <Tabs\n            value={job?.tabId}\n            //indicatorColor=\"secondary\"\n            //textColor=\"secondary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            onChange={forceTab}\n            aria-label=\"current section\"\n            classes={{\n              indicator: classes.tabIndicator\n            }}\n            className={classes.tab}\n          >\n            <StyledTab label={`${t(\"Start\")} 🪄`} {...a11yProps(0)} />\n            <StyledTab label={`${t(\"Download\")} ⬇`} {...a11yProps(1)} />\n            <StyledTab label={`${t(\"Fill your data\")} 🖋`} {...a11yProps(2)} />\n            <StyledTab label={`${t(\"Upload\")} ⬆`} {...a11yProps(3)} />\n            <StyledTab label={`${t(\"Check\")} ✔`} {...a11yProps(4)} />\n            <StyledTab label={`${t(\"Wait for validation\")} 🎯`} {...a11yProps(5)} />\n            <StyledTab label={`${t(\"Finish!\")} 🏁`} {...a11yProps(6)} />\n          </Tabs>\n        </Paper>\n      </AppBar>\n\n      <>\n        {(job?.tabId === 0) && (\n          <TabPanel index={0} value={job.tabId}>\n            <Tab01Start goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 1) && (\n          <TabPanel index={1} value={job.tabId}>\n            <Tab02Download goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 2) && (\n          <TabPanel index={2} value={job.tabId}>\n            <Tab03FillData goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 3) && (\n          <TabPanel index={3} value={job.tabId}>\n            <Tab04Upload goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 4) && (\n          <TabPanel index={4} value={job.tabId}>\n            <Tab05Check goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 5) && (\n          <TabPanel index={5} value={job.tabId}>\n            <Tab06Validation goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 6) && (\n          <TabPanel index={6} value={job.tabId}>\n            <Tab07Finished goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n      </>\n      {/* <>\n        <Tab01Start active={job?.tabId === 0} tabId={job?.tabId} goto={(where) => goto(where)} />\n        <Tab02Download active={job?.tabId === 1} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n        <Tab03FillData active={job?.tabId === 2} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n        <Tab04Upload active={job?.tabId === 3} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n        <Tab05Check active={job?.tabId === 4} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n        <Tab06Validation active={job?.tabId === 5} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n        <Tab07Finished active={job?.tabId === 6} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </> */}\n\n      {/* <TabPanel value={job?.tabId || 0} index={0}>\n        <Tab01Start active={job?.tabId === 0} tabId={job?.tabId} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={job?.tabId || 0} index={1}>\n        <Tab02Download active={job?.tabId === 1} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={job?.tabId || 0} index={2}>\n        <Tab03FillData active={job?.tabId === 2} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={job?.tabId || 0} index={3}>\n        <Tab04Upload active={job?.tabId === 3} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={job?.tabId || 0} index={4}>\n        <Tab05Check active={job?.tabId === 4} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={job?.tabId || 0} index={5}>\n        <Tab06Validation active={job?.tabId === 5} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={job?.tabId || 0} index={6}>\n        <Tab07Finished active={job?.tabId === 6} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </TabPanel> */}\n    </div>\n  );\n}\n\nexport { TabsPanel };","import React from \"react\";\n// import { useContext } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\n// import { useTranslation } from \"react-i18next\";\n// import { AuthContext } from \"../providers/AuthProvider\";\nimport { TabsPanel } from \"./TabsPanel\";\n\nconst useStyles = makeStyles(theme => ({\n\thome: {\n    fontSize: \"1.5em\",\n\t},\n}));\n\nfunction Home() {\n\tconst classes = useStyles();\n  // const { auth } = useContext(AuthContext);\n  // const { t } = useTranslation();\n\n  return (\n    <div className={classes.home}>\n      {/* {(typeof auth.user !== \"undefined\") && // if auth.user is undefined, we don't know yet about user authentication...\n        `${t(\"Home\")} ${t(\"for\")} ${auth.user ? t(\"authenticated user\") : t(\"guest user\")} ${auth.user ? auth.user.email : \"\"}`\n      } */}\n      <TabsPanel />\n    </div>\n  );\n}\n\nexport default React.memo(Home);"],"sourceRoot":""}