{"version":3,"file":"static/js/970.0e1f5645.chunk.js","mappings":"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","sources":["components/TabsComponents.js","components/Tab01Start.js","components/Tab02Download.js","components/Tab03FillData.js","components/Tab04Upload.js","hooks/useDragAndDrop.js","components/Tab05Check.js","components/TabsPanel.js","components/Home.js","libs/Fetch.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst height = window.innerHeight;\nconst width = window.innerWidth;\nconst heightScrollable = (\n  (height >= width) ?\n    //height - (height *.12) - (height *.12) - (height *.12) // portrait\n    height * .64 // portrait\n  :\n    //height - (height *.16) - (height *.16) - (height*.16) // landscape\n    height * .52 // landscape\n  );\n\n//console.log(\"height, width, heightScrollable:\", height, width, heightScrollable);\nconst useStyles = makeStyles(theme => ({\n\tparagraph: {\n    fontSize: \"1.1em\",\n\t},\n\tparagraphSmall: {\n    fontSize: \"0.8em\",\n\t},\n  centered: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  justified: {\n    textAlign: \"justify\",\n  },\n  box: {\n    display: \"flex\",\n  },\n  boxRight: {\n    justifyContent: \"flex-end\",\n  },\n  sup: {\n    fontSize: \"0.8em\",\n  },\n  scrollableContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"1em\",\n    height: heightScrollable,\n  },\n  scrollable: {\n    height: \"100%\",\n    overflowY: \"auto\",\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n}));\n\nconst TabContainer = React.memo(props => {\n  //const classes = useStyles();\n  return (\n    <div>\n      {props.children}\n    </div>\n  );\n});\nTabContainer.propTypes = {\n};\nTabContainer.defaultProps = {\n};\n\nconst TabBodyScrollable = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <div className={classes.scrollableContainer}>\n      <div className={classes.scrollable}>\n        {props.children}\n      </div>\n    </div>\n  );\n});\nTabBodyScrollable.propTypes = {\n};\nTabBodyScrollable.defaultProps = {\n};\n\nconst TabTitle = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <div className={classes.centered}>\n      <h2>{props.children}</h2>\n    </div>\n  );\n});\nTabTitle.propTypes = {\n};\nTabTitle.defaultProps = {\n};\n\nconst TabParagraph = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box mb={1}>\n      <Typography component=\"div\" className={`${classes.paragraph} ${classes.justified} ${props.small ? classes.paragraphSmall : null} ${props.class}`}>\n        {props.children}\n      </Typography>\n    </Box>\n  );\n});\nTabParagraph.propTypes = {\n  class: PropTypes.string,\n};\nTabParagraph.defaultProps = {\n  class: null,\n};\n\nconst TabNextButton = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box\n      component=\"span\"\n      m={1} // margin\n      className={`${classes.box} ${classes.boxRight}`}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        // fullWidth={props.fullWidth}\n        // variant={props.variant}\n        // color={props.color}\n        // size={props.size}\n        // className={`${classes.button} ${props.social ? classes.buttonFederated : \"\"} ${props.social ? classes[\"buttonFederated\" + capitalize(props.social)] : \"\"} ${classes[props.className]}`}\n        // startIcon={props.startIcon}\n        onClick={props.onNext}\n        disabled={!props.nextIsEnabled}\n      >\n        {props.children}\n      </Button>\n    </Box>\n  );\n});\nTabNextButton.propTypes = {\n  onNext: PropTypes.func.isRequired,\n  nextIsEnabled: PropTypes.bool.isRequired,\n};\nTabNextButton.defaultProps = {\n};\n\nconst TabTooltip = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Tooltip\n      title={props.title}\n      placement=\"top\"\n    >\n      <sup className={classes.sup}>{props.anchor}</sup>\n    </Tooltip>\n  );\n});\nTabTooltip.propTypes = {\n  title: PropTypes.string.isRequired,\n  anchor: PropTypes.string,\n};\nTabTooltip.defaultProps = {\n  anchor: \"*\",\n};\n\nexport {TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton, TabTooltip};","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton, TabTooltip } from \"./TabsComponents\";\n\nfunction Tab01Start(props) {\n  //const { auth } = useContext(AuthContext);\n  const { t } = useTranslation();\n  const [ nextIsEnabled /*, setNextIsEnabled*/ ] = useState(true);\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Welcome!\")}\n        </TabTitle>\n        <TabParagraph>\n          Questa è la nostra proposta per adempiere i requisiti della {\" \"}\n          <a href=\"https://www.anticorruzione.it/-/adempimenti-legge-190/2012-art.-1-comma-32-7\" target=\"legge190\">\n            Legge 190\n          </a>\n          . Speriamo che sia chiara e semplice da usare.\n          </TabParagraph>\n        <TabParagraph>\n          Questa app ti guiderà passo passo nei pochi passi che occorrono per completare\n          l'adempimento con successo.\n        </TabParagraph>\n        <TabParagraph>\n          Per iniziare dovrai scaricare un modello Excel\n          <TabTooltip\n            title={\"Può essere in formato MicroSoft-Excel, oppure in formato ODS, come preferisci.\"}\n          >\n          </TabTooltip>\n          , che contiene delle regole per guidarti nella compilazione, e minimizzare i possibili errori formali.\n        </TabParagraph>\n        <TabParagraph>\n          Poi dovrai inserire, uno per riga, tutti i beni o servizi che la tua struttura ha appaltato\n          nell'anno in corso.\n        </TabParagraph>\n        <TabParagraph>\n          Alla fine dell'anno, in genere entro la fine di Gennaio dell'anno successivo, sarà sufficiente\n          caricare qui il foglio Excel compilato.\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto il nostro sistema effetturà il controllo formale dei dati inseriti.\n          Nel caso che venga segnalato qualche anomalia dovrai correggere i problemi\n          segnalati sul tuo file Excel, e poi ri-caricarlo.\n        </TabParagraph>\n        <TabParagraph>\n          Dopodichè potrai scaricare il documento XML prodotto, che andrà pubblicato sul\n          sito cui fa riferimento la tua struttura.\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto avrai praticamente completato l'adempimento.\n          Se vorrai potrai controllare - sempre su questo sito - l'esito della verifica da parte\n          dell'ANAC.\n        </TabParagraph>\n        <TabParagraph>\n          Tieni presente che siamo sempre disponibili a risponderti per qualsiasi dubbio o\n          incertezza. Le modalità di assistenza sono diverse, dal supporto telefonico a\n          quello per email, e dipendono anche dal piano scelto.\n          I riferimenti sono presenti nel menu in alto a sinistra, in \"Supporto\".\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n        {`${t(\"Start\")}`}\n      </TabNextButton>\n    </TabContainer>\n  );\n}\nTab01Start.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab01Start.defaultProps = {\n};\n\nexport default React.memo(Tab01Start);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"@material-ui/core/Button\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton } from \"./TabsComponents\";\nimport config from \"../config\";\n\nfunction Tab02Download(props) {\n  const { t } = useTranslation();\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(false);\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  const onDownload = () => {\n    const link = document.createElement(\"a\");\n    link.download = config.data.templateDownloadName;\n    link.href = config.data.templateDownloadLink;\n    link.click();\n    setNextIsEnabled(true);\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Download\")}\n        </TabTitle>\n        <TabParagraph>\n          Scarica il modello Excel in cui potrai inserire i dati degli appalti, uno per riga.\n        </TabParagraph>\n        <TabParagraph>\n          <Button onClick={onDownload} variant=\"contained\" color=\"primary\">\n            {t(\"Download\")} ⬇\n          </Button>\n        </TabParagraph>\n        <br />\n        <TabParagraph small>\n          <input type=\"checkbox\"></input>\n          Clicca qui se preferisci la versione ODS (Open Document Format),\n          nel caso che tu utilizzi LibreOffice anziché Microsoft Office.\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n        {`${t(\"Continue\")}`}\n      </TabNextButton>\n    </TabContainer>\n  );\n}\nTab02Download.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab02Download.defaultProps = {\n};\n\nexport default React.memo(Tab02Download);","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useTranslation } from \"react-i18next\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton } from \"./TabsComponents\";\n\nconst useStyles = makeStyles(theme => ({\n  xul: {\n    padding: 15,\n  }\n}));\n\nfunction Tab03FillData(props) {\n  const classes = useStyles();\n  //const { auth } = useContext(AuthContext);\n  const { t } = useTranslation();\nconst [ nextIsEnabled/*, setNextIsEnabled*/ ] = useState(true);\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Fill your data\")}\n        </TabTitle>\n        <TabParagraph>\n          Adesso puoi aprire il modello scaricato con il tuo programma di gestione fogli di lavoro.\n        </TabParagraph>\n        <TabParagraph>\n          Sono presenti 2 fogli: \"METADATI\" ed \"ELENCO GARE\".\n          Ti consigliamo di iniziare dal primo foglio, \"METADATI\", ed inserire i 4 dati generali richiesti:\n          <ul className={classes.ul}>\n            <li><i>codiceFiscaleStrutturaProponente</i> il codice fiscale della tua struttura</li>\n            <li><i>denominazioneStrutturaProponente</i> la ragione sociale della tua struttura</li>\n            <li><i>annoRiferimento</i> l'anno di riferimento per cui inserirai gli appalti</li>\n            <li><i>urlFile</i> l'indirizzo URL dove sarà pubblicato il documento finale</li>\n          </ul>\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto puoi passare al secondo foglio, \"ELENCO GARE\".\n          Occorre inserire ogni apaplto (o \"gara\"), uno per riga.\n        </TabParagraph>\n        <TabParagraph>\n          I campi da compilare sono:\n          <ul className={classes.ul}>\n            <li><i>CIG</i> il Codice Identificativo Gara</li>\n            ... TODO: documentare tutti gli altri campi...\n          </ul>\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n        {`${t(\"Continue\")}`}\n      </TabNextButton>\n    </TabContainer>\n  );\n}\nTab03FillData.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab03FillData.defaultProps = {\n};\n\nexport default React.memo(Tab03FillData);","import React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useTranslation } from \"react-i18next\";\n//import { useDrpzone } from \"react-dropzone\";\nimport Button from \"@material-ui/core/Button\";\n//import Paper from \"@material-ui/core/Paper\";\n//import RootRef from \"@material-ui/core/RootRef\";\nimport useDragAndDrop from \"../hooks/useDragAndDrop\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton } from \"./TabsComponents\";\n//import { ControlPointDuplicateOutlined } from \"@material-ui/icons\";\nimport { ServiceContext } from \"../providers/ServiceProvider\";\n//import { AuthContext } from \"../providers/AuthProvider\"; // TODO: test only\n//import { upload } from \"../libs/Fetch\"; // TODO (use instance.post in libs/Fetch, not a raw fetch ...)\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  fileDropLabel: {\n    display: \"inline-block\",\n    textAlign: \"center\",\n    width: \"100%\",\n    border: \"3px black dashed\",\n    padding: \"3em 1.78em\", /* ??? */\n    cursor: \"pointer\",\n    backgroundColor: \"#f0f0f0\",\n  },\n  fileDropError: {\n    display: \"inline-block\",\n    fontSize: \"1.0em\",\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n    color: \"darkred\",\n    marginTop: \"1em\",\n  }\n}));\n\nfunction Tab04Upload(props) {\n  const classes = useStyles();\n  //const { auth } = useContext(AuthContext);\n  const { t } = useTranslation();\n  const { service, setService } = useContext(ServiceContext);\n  //const { auth, setAuth } = useContext(AuthContext);\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(false);\n  const [ file, setFile ] = useState(null);\n  const {\n    dragOver,\n    setDragOver,\n    onDragOver,\n    onDragLeave,\n    fileDropError,\n    setFileDropError,\n  } = useDragAndDrop();\n\n  const onDrop = (e) => {\n    e.preventDefault();\n    const selectedFile = e?.dataTransfer?.files[0];\n    fileSelect(selectedFile);\n  };\n\n  const onFileSelect = (e) => {\n    e.preventDefault();\n    const selectedFile = e?.target?.files[0];\n    fileSelect(selectedFile);\n  };\n\n  const fileSelect = (selectedFile) => {\n    setDragOver(false);\n    if (selectedFile) {\n      const error = fileValidate(selectedFile);\n      if (error) {\n        setFileDropError(error);\n        setFile(null);\n        setNextIsEnabled(false);\n      } else {\n        setFileDropError(null);\n        setFile(selectedFile);\n        setNextIsEnabled(true);\n      }\n    } else {\n      setFileDropError(t(\"No file selected, sorry... Please, repeat...\"));\n      setFile(null);\n      setNextIsEnabled(false);\n    }\n  };\n\n  const fileValidate = (file) => { // validate file type or name\n    // ods: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n    // xls: application/vnd.ms-excel\n    if (!( // TODO: check if these tests are enough general...\n      file?.type?.split(\"/\")[1]?.match(\"officedocument.spreadsheetml.sheet\") ||\n      file?.type?.split(\"/\")[1]?.match(\"ms-excel\")\n    )) {\n      return t(`Please upload a spreadsheet`) + `.` + file?.type ? ` ` + t(`Selected file looks like {{fileType}}`, {fileType: file.type}) : ``;\n    }\n    return null; // validated\n  };\n\n  const fileReset = (e) => {\n    setFile(null);\n    document.getElementById(\"file\").value = \"\";\n    setFileDropError(\"\");\n    setNextIsEnabled(false);\n    setDragOver(false);\n  };\n\n  const fileUpload = async () => {\n\t\tconst formData = new FormData();\n\t\tformData.append(\"file\", file);\n\n\t\tawait fetch(\"/api/service/upload\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: formData,\n\t\t})\n    .then((response) => response.json())\n    .then((result) => {\n      console.log('Upload success, file path', result.file);\n      //setStatus({...status, service: {}});\n      //setStatus({...status, service: {file: result.file}});\n\n      console.log(\"TTTTT pre, service:\", service)\n      setService({file: result.file});\n      //setAuth({...auth, service: result.file});\n      console.log(\"TTTTT2, service:\", service);\nsetTimeout(() => {console.log(\"TT3:\", service)}, 1000)\n    })\n    // .catch((error) => {\n    //   console.error('Upload error:', error);\n    // });\n\t};\n\n  const onNext = async () => {\n    await fileUpload();\n    console.log(\"GOT NEXT, service\", service);\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Upload\")}\n        </TabTitle>\n        <TabParagraph>\n          Carica il foglio Excel compilato:\n        </TabParagraph>\n\n        <div className=\"container\">\n          <form>\n            <label\n              htmlFor=\"file\"\n              onDragOver={onDragOver}\n              onDragLeave={onDragLeave}\n              onDrop={onDrop}\n              style={{ /* width: \"100%\", textAlign: \"center\",*/ backgroundColor: `${dragOver ? \"#ffdd00\" : \"\"}`}}\n              className={classes.fileDropLabel}\n            >\n              <span style={{ color: `${dragOver ? \"black\" : \"#444\"}` }}>\n                {t(\"Drop the file here or click to select from disk\")}\n              </span>\n            </label>\n            <input type=\"file\" name=\"file\" id=\"file\" onChange={onFileSelect} style={{display: \"none\"}} />\n          </form>\n          {fileDropError && (\n            <div className={classes.fileDropError}>{fileDropError}</div>\n          )}\n          <br />\n          <TabParagraph>\n            {file && t(`File caricato: ${file.name}`)}\n            <br />\n            {file && <Button variant=\"contained\" size=\"small\" color=\"default\" onClick={fileReset} title={t(\"Remove file\")}> 🗑 </Button>}\n          </TabParagraph>\n        </div>\n\n      </TabBodyScrollable>\n\n      <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n        {`${t(\"Continue\")}`}\n      </TabNextButton>\n    </TabContainer>\n  );\n}\nTab04Upload.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab04Upload.defaultProps = {\n};\n\nexport default React.memo(Tab04Upload);","import { useState } from \"react\";\n\nexport default function useDragAndDrop() {\n  const [dragOver, setDragOver] = useState(false);\n  const [fileDropError, setFileDropError] = useState(null);\n\n  const onDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy'; // to avoid occasional drop issues on Chrome pre-100\n    setDragOver(true);\n  };\n\n  const onDragLeave = e => {\n    setDragOver(false);\n  };\n\n  return {\n    dragOver,\n    setDragOver,\n    onDragOver,\n    onDragLeave,\n    fileDropError,\n    setFileDropError,\n  };\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\n//import Button from \"@material-ui/core/Button\";\nimport { toast } from \"./Toast\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton } from \"./TabsComponents\";\nimport { transformXls2Xml } from \"../libs/Fetch\";\nimport { ServiceContext } from \"../providers/ServiceProvider\";\n\n//import config from \"../config\";\n\nfunction Tab05Check(props) { // TODO: we need file here...\n  const { t } = useTranslation();\n  const { service, setService } = useContext(ServiceContext);\n  const [ statusLocal, setStatusLocal ] = useState({});\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(false);\n\n  useEffect(() => {\n    if (props.value === props.index) {\n      //(async () => {\n        setStatusLocal({loading: true});\nconsole.log(\"transformXls2Xml service:\", service);       \n        transformXls2Xml({file: service.file}).then(response => {\n          if (!response.ok) {\n            //console.warn(\"transformXls2Xml error:\", JSON.stringify(data));\n            // TODO: ok?\n            toast.error(t(response.message));\n            setStatusLocal({error: response.message});\n            return;\n          }\n          console.log(\"transformXls2Xml success:\", response);\n          // TODO: tell user, and enable CONTINUE button...\n          setService({...service, transform: response});\n          setStatusLocal({success: response});\n          setNextIsEnabled(true);\n        }/*).catch(err => {\n          console.warn(\"transformXls2Xml error:\", err.message, typeof err.message);\n          setStatusLocal({error: err.message});\n          toast.error(t(err.message));\n        }*/);\n      //})();\n    }\n  }, [props, t, /*service,*/ setService]);\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Check\")}\n        </TabTitle>\n        <TabParagraph>\n         {/* SL:  {JSON.stringify(status.service?.transform)} */}\n          {statusLocal && \"loading\" in statusLocal && `Elaborazione in corso...`}\n          {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n          {statusLocal && \"success\" in statusLocal && `Elaborazione completata`}\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n        {`${t(\"Continue\")}`}\n      </TabNextButton>\n    </TabContainer>\n  );\n}\nTab05Check.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab05Check.defaultProps = {\n};\n\nexport default React.memo(Tab05Check);","import React/*, { useContext }*/ from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n//import { StatusContext } from \"../providers/StatusProvider\";\nimport Tab01Start from \"./Tab01Start\";\nimport Tab02Download from \"./Tab02Download\";\nimport Tab03FillData from \"./Tab03FillData\";\nimport Tab04Upload from \"./Tab04Upload\";\nimport Tab05Check from \"./Tab05Check\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>\n        {children}\n      </Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nconst a11yProps = (index) => {\n  return {\n    id: `nav-tab-${index}`,\n    \"aria-controls\": `nav-tabpanel-${index}`\n  };\n}\n\n// const LinkTab = (props) => {\n//   return (\n//     <Tab\n//       component=\"a\"\n//       onClick={(event) => {\n//         event.preventDefault();\n//       }}\n//       {...props}\n//     />\n//   );\n// };\n\n// const AntTab = withStyles((theme) => ({\n//   root: {\n//     opacity: 0.3  ,\n//     textTransform: 'none',\n//     minWidth: 72,\n//     fontWeight: theme.typography.fontWeightRegular,\n//     marginRight: theme.spacing(4),\n//     fontFamily: [\n//       '-apple-system',\n//       'BlinkMacSystemFont',\n//       '\"Segoe UI\"',\n//       'Roboto',\n//       '\"Helvetica Neue\"',\n//       'Arial',\n//       'sans-serif',\n//       '\"Apple Color Emoji\"',\n//       '\"Segoe UI Emoji\"',\n//       '\"Segoe UI Symbol\"',\n//     ].join(','),\n//     '&:hover': {\n//       color: '#40a9ff',\n//       opacity: 1,\n//     },\n//     '&$selected': {\n//       color: '#1890ff',\n//       fontWeight: theme.typography.fontWeightMedium,\n//     },\n//     '&:focus': {\n//       color: '#40a9ff',\n//     },\n//   },\n//   selected: {},\n// }))((props) => <Tab {...props} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    opacity: 0.8  ,\n    //textTransform: 'none',\n    //color: '#444',\n    //fontWeight: theme.typography.fontWeightRegular,\n    //fontSize: theme.typography.pxToRem(15),\n    //marginRight: theme.spacing(1),\n    // '&:focus': {\n    //   opacity: 1,\n    // },\n  },\n}))((props) => {\n  return (\n    <Tab {...props} />\n  );\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    //width: \"100%\",\n    //backgroundColor: theme.palette.background.paper,\n  },\n  tabs: {\n    \"& .MuiTabs-indicator\": {\n      //display: \"none\",\n      backgroundColor: \"orange\",\n    }\n\n  }\n}));\n\nconst TabsPanel = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  //const { status, setStatus } = useContext(StatusContext);\n  const [tabId, setTabId] = React.useState(0);\n\n  function handleChangeTab(event, id) {\n    console.log(\"handleChangeTab id:\", id);\n    setTabId(id); // comment to disable the possibility to change tab by clicking on app bar titles\n  }\n  \n  function goto(where) {\n    let id = where;\n    if (typeof where === \"string\") {\n      switch (where.toLowerCase()) {\n        case \"start\":\n          break;\n        case \"download\":\n          break;\n        case \"fill your data\":\n          break;\n        case \"upload\":\n          break;\n        case \"check\":\n          break;\n        case \"wait for validation\":\n          break;\n        case \"finish!\":\n          break;\n        case \"next\":\n          id = tabId + 1; // TODO: handle ring\n          break;\n        case \"prev\":\n          id = tabId - 1; // TODO: handle ring\n          break;\n        default:\n          console.error(`Unforeseen where specification in goto: ${where}`);\n          return;\n      }\n    }\n    setTabId(id);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" elevation={0} style={{/*backgroundColor: \"transparent\",*/ top: 50}}>\n        {/* <Tabs\n          value={tabId}\n          onChange={handleChangeTab}\n          indicatorColor=\"primary\"\n          // textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs\"\n          className={classes.tabs}\n        > */}\n        <Paper elevation={0} square>\n          <Tabs\n            value={tabId}\n            indicatorColor=\"secondary\"\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            onChange={handleChangeTab}\n            aria-label=\"disabled tabs example\"\n          >\n            <StyledTab label={`${t(\"Start\")} 🪄`} {...a11yProps(0)} />\n            <StyledTab label={`${t(\"Download\")} ⬇`} {...a11yProps(1)} />\n            <StyledTab label={`${t(\"Fill your data\")} 🖋`} {...a11yProps(2)} />\n            <StyledTab label={`${t(\"Upload\")} ⬆`} {...a11yProps(3)} />\n            <StyledTab label={`${t(\"Check\")} ✔`} {...a11yProps(4)} />\n            <StyledTab label={`${t(\"Wait for validation\")} 🎯`} {...a11yProps(5)} />\n            <StyledTab label={`${t(\"Finish!\")} 🏁`} {...a11yProps(6)} />\n          </Tabs>\n        </Paper>\n      </AppBar>\n\n      <TabPanel value={tabId} index={0}>\n        <Tab01Start goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={tabId} index={1}>\n        <Tab02Download goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={tabId} index={2}>\n        <Tab03FillData goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={tabId} index={3}>\n        <Tab04Upload goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={tabId} index={4}>\n        <Tab05Check value={tabId} index={4} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={tabId} index={5}>\n        attendi la validazione da parte dell'ANAC...\n      </TabPanel>\n      <TabPanel value={tabId} index={6}>\n        Finito!\n      </TabPanel>\n    </div>\n  );\n}\n\nexport { TabsPanel };","import React from \"react\";\n// import { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n// import { useTranslation } from \"react-i18next\";\n// import { AuthContext } from \"../providers/AuthProvider\";\nimport { TabsPanel } from \"./TabsPanel\";\n\nconst useStyles = makeStyles(theme => ({\n\thome: {\n    fontSize: \"1.5em\",\n\t},\n}));\n\nfunction Home() {\n\tconst classes = useStyles();\n  // const { auth } = useContext(AuthContext);\n  // const { t } = useTranslation();\n\n  return (\n    <div className={classes.home}>\n      {/* {(typeof auth.user !== \"undefined\") && // if auth.user is undefined, we don't know yet about user authentication...\n        `${t(\"Home\")} ${t(\"for\")} ${auth.user ? t(\"authenticated user\") : t(\"guest user\")} ${auth.user ? auth.user.email : \"\"}`\n      } */}\n      <TabsPanel />\n    </div>\n  );\n}\n\nexport default React.memo(Home);","import instance from \"../middlewares/Interceptors\";\n\nexport const signIn = (params) => {\n  return instance.post(\"/auth/login\", params).then(response => {\n    return { ok: true, ...response.data };\n  }).catch(err => {\n    return { ok: false, ...err.response.data };\n  });\n};\n\nexport const getUsers = (params) => {\n  return instance.post(\"/user\", params).then(response => {\n    return { ok: true, ...response.data };\n  }).catch(err => {\n    return { ok: false, ...err.response.data };\n  });\n};\n\nexport const forgotPassword = (params) => {\nconsole.log(\"FETCH forgotPassword /auth/recover - params:\", params);\n  return instance.post(\"/auth/recover\", params).then(response => {\n    return { ok: true, ...response.data };\n  }).catch(err => {\nconsole.error(\"ERR:\", err);\n    return { ok: false, ...err.response.data };\n  });\n};\n\nexport const forgotPasswordSubmit = (params) => {\nconsole.log(\"FETCH forgotPasswordSubmit /auth/reset - params:\", params);\n  return instance.post(\"/auth/reset\", params).then(response => {\n    return { ok: true, ...response.data };\n  }).catch(err => {\n    return { ok: false, ...err.response.data };\n  });\n};\n\nexport const resendResetPasswordCode = (params) => {\n  return instance.post(\"/auth/resend\", params).then(response => {\n    return { ok: true, ...response.data };\n  }).catch(err => {\n    return { ok: false, ...err.response.data };\n  });\n};\n\n\nexport const upload = (params) => {\n  console.log(\"upload params:\", params);\n    return instance.post(\"/service/upload\").then(response => {\n  console.log(\"upload response:\", response);\n      return { ok: true, ...response.data };\n    }).catch(err => {\n  console.warn(\"err.message\", err.message, err.reason)\n      return { ok: false, message: err.message };\n    });\n  };\n  \nexport const transformXls2Xml = (params) => { // TODO: we don't need params.file.path (???)\nconsole.log(\"transformXls2Xml params:\", params);\n  return instance.post(\"/service/transformXls2Xml/filePath\", {filePath: params.file.path}).then(response => {\nconsole.log(\"transformXls2Xml response:\", response);\n    return { ok: true, ...response.data };\n  }).catch(err => {\nconsole.warn(\"err.message\", err.message, err.reason)\n    return { ok: false, message: err.message };\n  });\n};\n\n// export const federatedSignIn = (params) => {\n// console.log(currentFunctionName(), params);\n//   //return fetcher(\"/api/auth/login\", \"POST\", params);\n//   //return instance.post(\"/auth/login\", params);PromiseRejectionEvent\n//   return instance.get(\"http://localhost:5000/api/auth/loginGoogle\", params).then(response => {\n//     console.log(\"response status:\", response.status);\n//     console.log(\"response data:\", JSON.stringify(response.data));\n//     return response.data;\n//   }).catch(err => {\n//     console.error(`Error fetching data: ${err}`, err); // TODO...\n//     return err;\n//   });\n// };\n\n// const Auth = {\n//   signUp: (params) => {\n//     //console.log(currentFunctionName(), params);\n//     return fetcher(\"/api/auth/register\", \"POST\", params);\n//   },\n//   confirmSignUp: (params) => {\n//     //console.log(currentFunctionName(), params);\n//     // TODO: props = props.filter(key => key === \"code\");\n//     return fetcher(`/api/auth/verify/${params.code}`, \"GET\", params); // TODO: change the name: choose verify or confirmSignUp, and code or token (better code) ...\n//   },\n//   signIn: (params) => {\n// console.log(currentFunctionName(), params);\n//     //return fetcher(\"/api/auth/login\", \"POST\", params);\n//     return instance.post(\"/api/auth/login\", params);\n//   },\n//   signOut: (params) => { // TODO: test me...\n//     return new Promise((resolve, reject) => {\n//       resolve();\n//     });\n//   },\n// };\n//\n// const fetcher = (url, method, params) => {\n//     return new Promise((resolve, reject) => {\n//       if (method === \"GET\" && params) {\n//         url += \"?\" + Object.keys(params).map((key) => {\n//           return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key])\n//         }).join(\"&\");\n//       }\n//       fetch(url, {\n//         method,\n//         headers: new Headers(config.api.headers),\n//         ...(params && method !== \"GET\" && { body: JSON.stringify(params) }),\n//         redirect: config.api.redirect,\n//       })\n//         .then(res => {\n//           try {\n//             res.json().then(data => {\n//               if (!res.ok) reject({status: res.status, statusText: res.statusText, message: data.message ? data.message : res.statusText})\n//               resolve(data);\n//             });\n//           } catch (err) {\n//             console.error(`fetch ${url} error:`, err); // TODO: !!!\n//             reject(err);\n//           }\n//         })\n//         .catch(err => {\n//           console.error(`fetch ${url} error:`, err); // TODO: !!!\n//           reject(err);\n//         })\n//       ;\n//     });\n//   }"],"names":["height","window","innerHeight","heightScrollable","innerWidth","useStyles","makeStyles","theme","paragraph","fontSize","paragraphSmall","centered","display","justifyContent","alignItems","justified","textAlign","box","boxRight","sup","scrollableContainer","flexDirection","marginTop","scrollable","overflowY","paddingLeft","paddingRight","TabContainer","React","props","children","defaultProps","TabBodyScrollable","classes","className","TabTitle","TabParagraph","Box","mb","Typography","component","small","class","TabNextButton","m","Button","variant","color","onClick","onNext","disabled","nextIsEnabled","TabTooltip","Tooltip","title","placement","anchor","Tab01Start","t","useTranslation","useState","href","target","goto","Tab02Download","setNextIsEnabled","link","document","createElement","download","config","click","type","xul","padding","Tab03FillData","ul","fileDropLabel","width","border","cursor","backgroundColor","fileDropError","fontStyle","fontWeight","Tab04Upload","useContext","ServiceContext","service","setService","file","setFile","dragOver","setDragOver","setFileDropError","onDragOver","e","preventDefault","dataTransfer","dropEffect","onDragLeave","useDragAndDrop","fileSelect","selectedFile","error","fileValidate","split","match","fileType","fileUpload","formData","FormData","append","fetch","method","body","then","response","json","result","console","log","setTimeout","htmlFor","onDrop","files","style","name","id","onChange","size","getElementById","value","Tab05Check","statusLocal","setStatusLocal","useEffect","index","loading","transformXls2Xml","ok","toast","message","transform","success","TabPanel","other","role","hidden","p","a11yProps","StyledTab","withStyles","root","opacity","Tab","flexGrow","tabs","TabsPanel","tabId","setTabId","where","toLowerCase","AppBar","position","elevation","top","Paper","square","Tabs","indicatorColor","textColor","scrollButtons","event","label","home","Home","signIn","params","instance","data","catch","err","getUsers","forgotPassword","forgotPasswordSubmit","resendResetPasswordCode","filePath","path","warn","reason"],"sourceRoot":""}