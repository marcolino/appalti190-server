{"version":3,"sources":["libs/Styling.js","components/FormElements.js","components/Dialog.js","services/JobService.js","components/TabsComponents.js","hooks/useWindowSize.js","components/Tab01Start.js","components/Tab02Download.js","components/Tab03FillData.js","components/DragNDrop.js","components/Tab04Upload.js","components/Tab05Check.js","components/Tab06Validation.js","components/Tab07Finished.js","components/TabsPanel.js","components/Home.js"],"names":["shadeColor","color","amount","replace","Math","min","max","parseInt","toString","substr","FormInput","React","memo","props","classes","makeStyles","theme","startAdornment","backgroundColor","height","maxHeight","marginLeft","marginRight","paddingLeft","paddingRight","borderRight","endAdornment","borderLeft","useStyles","TextField","id","type","value","required","autoFocus","autoComplete","variant","fullWidth","label","size","margin","className","textField","placeholder","onChange","e","target","disabled","error","isEmptyObject","InputProps","startAdornmentIcon","InputAdornment","startAdornmentClass","position","endAdornmentIcon","endAdornmentClass","input","defaultProps","FormButton","button","spacing","textTransform","fontSize","palette","success","main","buttonSecondary","secondary","dark","buttonFederated","justifyContent","buttonFederatedFacebook","socialButtons","facebook","buttonFederatedGoogle","google","styles","Button","social","capitalize","startIcon","onClick","children","cursor","textDecoration","classNameDisabled","FormControlLabel","control","Checkbox","checked","FormText","Typography","component","align","FormLink","normal","decoration","Link","href","FormDividerWithText","container","display","alignItems","marginTop","marginVertical","marginBottom","divider","width","borderBottom","primary","text","paddingHorizontal","Dialog","open","dialogOpen","onClose","dialogSetOpen","dialogTitle","style","whiteSpace","dialogContent","dialogButtons","map","index","callback","close","get","a","TokenService","getUser","api","JobService","set","job","put","upload","file","formData","FormData","append","post","headers","transformXls2Xml","filePath","validateXml","transform","outcomeCheck","anno","codiceFiscaleAmministrazione","outcomeFailureDetails","sanitizeJob","xml","j","paragraph","paragraphSmall","centered","justified","textAlign","box","boxLeft","boxRight","sup","scrollableContainer","flexDirection","minHeight","scrollable","overflowY","TabContainer","TabBodyScrollable","useState","window","innerWidth","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","TabTitle","TabParagraph","Box","mb","small","class","TabPrevButton","m","onPrev","prevIsEnabled","TabNextButton","onNext","nextIsEnabled","TabTooltip","Tooltip","title","placement","anchor","Tab01Start","t","useTranslation","goto","Tab02Download","history","useHistory","download","setNextIsEnabled","setDialogTitle","setDialogContent","setDialogButtons","setDialogOpen","userIsAuthenticated","AuthService","getCurrentUser","content","buttons","tabId","push","link","document","createElement","config","data","templateDownloadName","templateDownloadLink","click","setJob","Grid","item","xs","ul","padding","Tab03FillData","baseStyle","flex","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","focusedStyle","acceptStyle","rejectStyle","DragNDrop","onDrop","accept","useDropzone","getRootProps","getInputProps","isFocused","isDragAccept","isDragReject","isDragActive","useMemo","Tab04Upload","fileSet","useCallback","fileReset","fileValidate","split","match","fileType","fileUpload","then","result","console","log","errorMessage","toast","fileSelect","selectedFile","acceptedFiles","originalname","Tab05Check","user","statusLocal","setStatusLocal","planUpgradeDeclined","plan","name","cigCount","planRequired","cigNumberAllowed","code","loading","path","Error","response","JSON","stringify","Tab06Validation","outcome","esitoUltimoTentativoAccessoUrl","metadati","annoRiferimento","header","codiceFiscaleStrutturaProponente","message","src","alt","dataUltimoTentativoAccessoUrl","Tab07Finished","TabPanel","other","role","hidden","p","a11yProps","StyledTab","withStyles","root","opacity","Tab","flexGrow","tabs","TabsPanel","getJob","changeTab","where","toLowerCase","redirect","remove","AppBar","elevation","top","Paper","square","Tabs","scrollButtons","event","ui","userCanForceTabChange","home","Home"],"mappings":"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","file":"static/js/12.f0dfef25.chunk.js","sourcesContent":["/**\n * Shade a color by an amount [-100 - 100] (negative is darker, positive is ligher).\n */\nexport const shadeColor = (color, amount) => {\n  return \"#\" + color.replace(/^#/, \"\").replace(/../g, color => (\"0\" + Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)).substr(-2));\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { shadeColor } from \"../libs/Styling\";\nimport { capitalize, isEmptyObject } from \"../libs/Misc\";\n\n\n\nconst FormInput = React.memo((props) => {\n  const styles = theme => ({\n    startAdornment: {\n      backgroundColor: \"#eaedf0\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: -15,\n      marginRight: 5,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRight: \"1px solid #c5c5c5\",\n    },\n    endAdornment: {\n      backgroundColor: \"#eaedf0\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: 5,\n      marginRight: -15,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderLeft: \"1px solid #c5c5c5\",\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <TextField\n      id={props.id}\n      type={props.type}\n      value={props.value}\n      required={props.required}\n      autoFocus={props.autoFocus}\n      autoComplete={props.autoComplete.toString()}\n      variant={props.variant}\n      fullWidth={props.fullWidth}\n      label={props.label}\n      size={props.size}\n      margin={props.margin}\n      className={props.className ? props.className : classes.textField}\n      placeholder={props.placeholder}\n      onChange={e => props.onChange(e.target.value)}\n      disabled={props.disabled}\n      error={!isEmptyObject(props.error)}\n      InputProps={{\n        startAdornment: props.startAdornmentIcon ? (\n          <InputAdornment\n            className={props.startAdornmentClass ? props.startAdornmentClass : classes.startAdornment}\n            position=\"start\"\n          >\n            {props.startAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        endAdornment: props.endAdornmentIcon ? (\n          <InputAdornment\n            className={props.endAdornmentClass ? props.endAdornmentClass : classes.endAdornment}\n            position=\"end\"\n          >\n            {props.endAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        className: classes.input,\n      }}\n    />\n  );\n});\n\nFormInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  startAdornmentClass: PropTypes.string,\n  startAdornmentIcon: PropTypes.object,\n  endAdornmentClass: PropTypes.string,\n  endAdornmentIcon: PropTypes.object,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n};\n\nFormInput.defaultProps = {\n  type: \"text\",\n  required: false,\n  autoFocus: false,\n  autoComplete: false,\n  variant: \"outlined\",\n  fullWidth: true,\n  label: \"\",\n  size: \"small\",\n  margin: \"dense\",\n  className: null,\n  placeholder: \"\",\n  startAdornmentClass: null,\n  endAdornmentClass: null,\n  disabled: false,\n  error: \"\",\n};\n\n\n\nconst FormButton = React.memo((props) => {\n  const styles = theme => ({\n    button: {\n      margin: theme.spacing(1, 0, 0, 0),\n      textTransform: \"none\",\n      fontSize: \"1.3em\",\n      color: \"white\",\n      backgroundColor: theme.palette.success.main,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.success.main, -25),\n      },\n    },\n    buttonSecondary: {\n      margin: theme.spacing(1, 0, 0, 0),\n      textTransform: \"none\",\n      fontSize: \"1em !important\",\n      color: \"white\",\n      backgroundColor: theme.palette.secondary.dark + \" !important\",\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.secondary.dark, -25)  + \" !important\",\n      },\n    },\n    buttonFederated: {\n      margin: theme.spacing(1, 0, 0, 0),\n      justifyContent: \"flex-start\",\n      paddingLeft: theme.spacing(5),\n      fontSize: \"1.3em\",\n    },  \n    buttonFederatedFacebook: {\n      backgroundColor: theme.palette.socialButtons.facebook.backgroundColor,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.socialButtons.facebook.backgroundColor, -25),\n      },\n    },\n    buttonFederatedGoogle: {\n      backgroundColor: theme.palette.socialButtons.google.backgroundColor,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.socialButtons.google.backgroundColor, -25),\n      },\n    },\n  \n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <Button\n      fullWidth={props.fullWidth}\n      variant={props.variant}\n      color={props.color}\n      size={props.size}\n      className={`${classes.button} ${props.social ? classes.buttonFederated : \"\"} ${props.social ? classes[\"buttonFederated\" + capitalize(props.social)] : \"\"} ${classes[props.className]}`}\n      startIcon={props.startIcon}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </Button>\n  );\n});\n\nFormButton.propTypes = {\n  social: PropTypes.oneOf([\n    \"Facebook\",\n    \"Google\",\n  ]),\n}\n\nFormButton.defaultProps = {\n  fullWidth: true,\n  variant: \"contained\",\n  color: \"primary\",\n  social: null,\n};\n\n\n\nconst FormCheckbox = React.memo((props) => {\n  const styles = theme => ({\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const classNameDisabled = props.disabled ? classes.disabled : \"\";\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={props.checked}\n          onChange={(e) => props.onChange(e.target.checked)}\n          className={`${props.className} ${classNameDisabled}`}\n          color={props.color}\n          size={props.size}\n          disabled={props.disabled}\n        />\n      }\n      label={\n        <FormText\n          className={`${props.className} ${classNameDisabled}`}\n        >\n          {props.children}\n        </FormText>\n      }\n    />\n  );\n});\n\nFormCheckbox.propTypes = {\n};\n\nFormCheckbox.defaultProps = {\n  checked: false,\n  color: \"primary\",\n  size: \"small\",\n};\n\n\n\nconst FormText = React.memo((props) => {\n  return (\n    <Typography\n      component={props.component}\n      variant={props.variant}\n      color={props.color}\n      align={props.align}\n      {...props}\n    >\n      {props.children}\n    </Typography>\n  );\n});\n\nFormText.propTypes = {\n};\n\nFormText.defaultProps = {\n  component: \"h1\",\n  variant: \"body2\",\n  color: \"textPrimary\",\n};\n\n\n\nconst FormLink = React.memo((props) => {\n  const styles = theme => ({\n    normal: {\n      cursor: \"pointer\",\n      textDecoration: props.decoration ? props.decoration : \"none\",\n    },\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n        color: \"grey\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const className = props.disabled ? classes.disabled : classes.normal;\n\n  return (\n    <Link\n      href={props.href}\n      className={`${props.className} ${className}`}\n      color={props.color}\n      {...props}\n    >\n      {props.children}\n    </Link>\n  );\n});\n\nFormLink.propTypes = {\n};\n\nFormLink.defaultProps = {\n  color: \"textPrimary\",\n};\n\n\n\nconst FormDividerWithText = React.memo((props) => {\n  const styles = theme => ({\n    container: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginTop: theme.spacing(props.marginVertical),\n      marginBottom: theme.spacing(props.marginVertical),\n    },\n    divider: {\n      width: \"100%\",\n      borderBottom: \"1px solid \" + (props.color ? props.color : theme.palette.primary.dark),\n      paddingLeft: theme.spacing(1),\n    },\n    text: {\n      paddingLeft: theme.spacing(props.paddingHorizontal),\n      paddingRight: theme.spacing(props.paddingHorizontal),\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.divider} />\n      {props.children && <span className={classes.text}>\n        {props.children}\n      </span>}\n      <div className={classes.divider} />\n    </div>\n  );\n});\n\nFormDividerWithText.propTypes = {\n  color: PropTypes.string,\n  marginVertical: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n  paddingHorizontal: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n};\n\nFormDividerWithText.defaultProps = {\n  marginVertical: 1,\n  paddingHorizontal: 1,\n};\n\nexport {FormInput, FormButton, FormCheckbox, FormText, FormLink, FormDividerWithText};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogMui from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { FormButton } from \"../components/FormElements\";\n\nconst Dialog = (props) => {\n  return (\n    <DialogMui\n      open={props.dialogOpen}\n      onClose={() => props.dialogSetOpen(false)}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        {props.dialogTitle}\n      </DialogTitle>\n      <DialogContent id=\"alert-dialog-description\">\n        <Typography variant=\"body1\" style={{whiteSpace: \"pre-line\"}}>\n          {props.dialogContent}\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        {props.dialogButtons.map((button, index) => (\n          <FormButton\n            key={index}\n            onClick={() => {\n              button.callback && button.callback();\n              if (button.close) {\n                props.dialogSetOpen(false);\n              }\n            }}\n            fullWidth={false}\n            className={\"buttonSecondary\"}\n            autoFocus={index === 0}\n          >\n            {button.text}\n          </FormButton>\n        ))}\n      </DialogActions>\n    </DialogMui>\n  );\n}\n\nDialog.propTypes = {\n  dialogId: PropTypes.string,\n  dialogOpen: PropTypes.bool,\n  dialogSetOpen: PropTypes.func,\n  dialogTitle: PropTypes.string,\n  dialogContent: PropTypes.string,\n  dialogButtons: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      close: PropTypes.bool,\n      callback: PropTypes.func,\n    })\n  ),\n};\n\nDialog.defaultProps = {\n  dialogOpen: false,\n  dialogButtons: [\n    {\n      text: \"Ok\",\n      close: true,\n      callback: () => {},\n    }\n  ],\n};\n\nexport default React.memo(Dialog);","import api from \"./API\";\nimport TokenService from \"./TokenService\";\n\n// get job status\nconst get = async () => {\n  // const user = TokenService.getUser();\n  // if (!user) {\n  //   return null;\n  // }\n  // return api.get(\"/job/get\", {\n  //   userId: user._id,\n  // });\n\n  //const retval = await api.get(\"/job/get\");\n\n  const user = TokenService.getUser();\n  if (!user) {\n    return null;\n  }\n  return await api.get(\"/job/get\");\n};\n\n// set job status\nconst set = (job) => {\n  const user = TokenService.getUser();\n  if (!user) {\n    return null;\n  }\n\n  return api.put(\"/job/set\", {job});\n};\n\n// upload a file\nconst upload = (file) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  \n  return api.post(\"/job/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    }\n  });\n};\n\n// transform XLS to XML\nconst transformXls2Xml = (filePath) => {\n  return api.post(\"/job/transformXls2Xml/:filePath\", {\n    filePath,\n  });\n}\n\n// validate XML syntax\nconst validateXml = (transform) => {\n  return api.post(\"/job/validateXml/:transform\", {\n    transform,\n  });\n  // const retval = api.post(\"/job/validateXml/:transform\", {\n  //   transform,\n  // });\n  // console.log(\"****************** validateXml retval:\", retval);\n  // return retval;\n}\n\n// check ANAC periodic verification outcome\nconst outcomeCheck = (anno, codiceFiscaleAmministrazione) => {\n  return api.post(\"/job/outcomeCheck/:anno/:codiceFiscaleAmministrazione\",\n    {\n      anno,\n      codiceFiscaleAmministrazione,\n    }\n  );\n}\n\n// get ANAC periodic verification failed outcome details\nconst outcomeFailureDetails = (anno, codiceFiscaleAmministrazione) => {\n  return api.post(\n    \"/job/outcomeFailureDetails/anno/codiceFiscaleAmministrazione\",\n    {\n      anno,\n      codiceFiscaleAmministrazione,\n    }\n  );\n}\n\n// just to ignore big xml when debug printing...\nconst sanitizeJob = (job) => {\n  if (!job?.transform?.xml) {\n    return job;\n  }\n  let j = job;\n  j.transform.xml = \"…\";\n  return j;\n}\n\nconst JobService = {\n  get,\n  set,\n  upload,\n  transformXls2Xml,\n  validateXml,\n  outcomeCheck,\n  outcomeFailureDetails,\n  sanitizeJob,\n};\n\nexport default JobService;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport useWindowSize from \"../hooks/useWindowSize\";\n\n// const height = window.innerHeight;\n// const width = window.innerWidth;\n// const heightScrollable = (\n//   (height >= width) ?\n//     //height - (height *.12) - (height *.12) - (height *.12) // portrait\n//     height * .64 // portrait\n//   :\n//     //height - (height *.16) - (height *.16) - (height*.16) // landscape\n//     height * .52 // landscape\n//   );\n\n//console.log(\"height, width, heightScrollable:\", height, width, heightScrollable);\nconst useStyles = makeStyles(theme => ({\n\tparagraph: {\n    fontSize: \"1.1em\",\n\t},\n\tparagraphSmall: {\n    fontSize: \"0.8em\",\n\t},\n  centered: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  justified: {\n    textAlign: \"justify\",\n  },\n  box: {\n    display: \"flex\",\n  },\n  boxLeft: {\n    justifyContent: \"flex-start\",\n  },\n  boxRight: {\n    justifyContent: \"flex-end\",\n  },\n  sup: {\n    fontSize: \"0.8em\",\n  },\n  scrollableContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"1em\",\n    minHeight: \"5em\",\n    //maxHeight: heightScrollable,\n  },\n  scrollable: {\n    height: \"100%\",\n    overflowY: \"auto\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    minHeight: \"3em\",\n  },\n\n  // scrollableContainer: {\n  //   width: \"100%\",\n  //   height: \"100%\",\n  //   display: \"flex\",\n  //   flexDirection: \"column\",\n  //   flexWrap: \"nowrap\",\n  // },\n  // scrollableHeader: {\n  //   flexShrink: 0,\n  // },\n  // scrollableBody: {\n  //   flexGrow: 1,\n  //   overflow: \"auto\",\n  //   minHeight: \"3em\",\n  // },\n  // scrollableFooter: {\n  //   flexShrink: 0,\n  // },\n}));\n\nconst TabContainer = React.memo(props => {\n  //const classes = useStyles();\n  return (\n    <div>\n      {props.children}\n    </div>\n  );\n});\nTabContainer.propTypes = {\n};\nTabContainer.defaultProps = {\n};\n\nconst TabBodyScrollable = React.memo(props => {\n  const classes = useStyles();\n\n  /**\n   * Note: here we assume fixed sections height...\n   * this is a bad hack to have a scrollable body\n   * and avoid a scrollable container for any\n   * window height and consistent after a resize\n   */\n  const toolbarHeight = 90; // toolbar height\n  const tabbarHeight = 100; // tabbbar height\n  const footerHeight = 60; // footer height\n  const size = useWindowSize();\n\n  return (\n    <div className={classes.scrollableContainer}>\n      <div className={classes.scrollable} style={{height: Math.max(120, size.height - toolbarHeight - tabbarHeight - /*titleHeight - */footerHeight)}}>\n        {props.children}\n      </div>\n    </div>\n  );\n});\nTabBodyScrollable.propTypes = {\n};\nTabBodyScrollable.defaultProps = {\n};\n\nconst TabTitle = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <div className={classes.centered}>\n      <h2>{props.children}</h2>\n    </div>\n  );\n});\nTabTitle.propTypes = {\n};\nTabTitle.defaultProps = {\n};\n\nconst TabParagraph = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box mb={1}>\n      <Typography component=\"div\" className={`${classes.paragraph} ${classes.justified} ${props.small ? classes.paragraphSmall : null} ${props.class}`}>\n        {props.children}\n      </Typography>\n    </Box>\n  );\n});\nTabParagraph.propTypes = {\n  class: PropTypes.string,\n};\nTabParagraph.defaultProps = {\n  class: null,\n};\n\nconst TabPrevButton = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box\n      component=\"span\"\n      m={1} // margin\n      className={`${classes.box} ${classes.boxLeft}`}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={props.onPrev}\n        disabled={!props.prevIsEnabled}\n      >\n        {props.children}\n      </Button>\n    </Box>\n  );\n});\nTabPrevButton.propTypes = {\n  onPrev: PropTypes.func.isRequired,\n  prevIsEnabled: PropTypes.bool.isRequired,\n};\nTabPrevButton.defaultProps = {\n};\n\nconst TabNextButton = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box\n      component=\"span\"\n      m={1} // margin\n      className={`${classes.box} ${classes.boxRight}`}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        // fullWidth={props.fullWidth}\n        // variant={props.variant}\n        // color={props.color}\n        // size={props.size}\n        // className={`${classes.button} ${props.social ? classes.buttonFederated : \"\"} ${props.social ? classes[\"buttonFederated\" + capitalize(props.social)] : \"\"} ${classes[props.className]}`}\n        // startIcon={props.startIcon}\n        onClick={props.onNext}\n        disabled={!props.nextIsEnabled}\n      >\n        {props.children}\n      </Button>\n    </Box>\n  );\n});\nTabNextButton.propTypes = {\n  onNext: PropTypes.func.isRequired,\n  nextIsEnabled: PropTypes.bool.isRequired,\n};\nTabNextButton.defaultProps = {\n};\n\nconst TabTooltip = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Tooltip\n      title={props.title}\n      placement=\"top\"\n    >\n      <sup className={classes.sup}>{props.anchor}</sup>\n    </Tooltip>\n  );\n});\nTabTooltip.propTypes = {\n  title: PropTypes.string.isRequired,\n  anchor: PropTypes.string,\n};\nTabTooltip.defaultProps = {\n  anchor: \"*\",\n};\n\nexport {TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton, TabTooltip};","import { useState, useEffect } from \"react\";\n\nexport default function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n      //console.log(\"useWindowSize - height:\", window.innerHeight);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton, TabTooltip } from \"./TabsComponents\";\n\nfunction Tab01Start(props) {\n  const { t } = useTranslation();\n  const [ nextIsEnabled ] = useState(true);\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Welcome!\")}\n        </TabTitle>\n        <TabParagraph>\n          Questa è la nostra proposta per adempiere i requisiti della {\" \"}\n          <a href=\"https://www.anticorruzione.it/-/adempimenti-legge-190/2012-art.-1-comma-32-7\" target=\"legge190\">\n            Legge 190\n          </a>\n          . Speriamo che sia chiara e semplice da usare.\n          </TabParagraph>\n        <TabParagraph>\n          Questa app ti guiderà passo passo nei pochi steps che occorrono per completare\n          l'adempimento con successo.\n        </TabParagraph>\n        <TabParagraph>\n          Per iniziare dovrai scaricare un modello Excel\n          <TabTooltip\n            title={\"Può essere in formato MicroSoft-Excel, oppure in formato ODS, come preferisci.\"}\n          >\n          </TabTooltip>\n          , che contiene delle regole per guidarti nella compilazione, e minimizzare i possibili errori formali.\n        </TabParagraph>\n        <TabParagraph>\n          Poi dovrai inserire, uno per riga, tutti i beni o servizi che la tua struttura ha appaltato\n          nell'anno in corso.\n        </TabParagraph>\n        <TabParagraph>\n          Alla fine dell'anno, in genere entro la fine di Gennaio dell'anno successivo, sarà sufficiente\n          caricare qui il foglio Excel compilato.\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto il nostro sistema effettuerà il controllo formale dei dati inseriti.\n          Nel caso che venga segnalato qualche anomalia dovrai correggere sul file Excel le anomalie\n          segnalate, e poi ri-caricarlo.\n        </TabParagraph>\n        <TabParagraph>\n          Dopodichè potrai scaricare il documento XML prodotto, che andrà pubblicato sul\n          sito cui fa riferimento la tua struttura.\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto avrai praticamente completato l'adempimento.\n          Se vorrai potrai controllare - sempre su questo sito - l'esito della verifica da parte\n          dell'ANAC.\n        </TabParagraph>\n        <TabParagraph>\n          Tieni presente che siamo sempre disponibili a risponderti per qualsiasi dubbio o\n          incertezza. Le modalità di assistenza sono diverse, dal supporto telefonico a\n          quello per email, e dipendono anche dal piano scelto.\n          I riferimenti sono presenti nel menu, alla voce \"Supporto\".\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <div>\n        <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n          {`${t(\"Start\")}`}\n        </TabNextButton>\n      </div>\n    </TabContainer>\n  );\n}\nTab01Start.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab01Start.defaultProps = {\n};\n\nexport default React.memo(Tab01Start);\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AuthService from \"../services/AuthService\";\nimport TokenService from \"../services/TokenService\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport Dialog from \"./Dialog\";\nimport config from \"../config\";\n\n\n\nfunction Tab02Download(props) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const [ prevIsEnabled, ] = useState(true);\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(() => props.job?.download ? props.job?.download : false);\n  const [ dialogTitle, setDialogTitle ] = useState(null);\n  const [ dialogContent, setDialogContent ] = useState(null);\n  const [ dialogButtons, setDialogButtons ] = useState([]);\n  const [ dialogOpen, setDialogOpen ] = useState(false);\n\n  const openDialog = (title, content, buttons) => {\n    setDialogTitle(title);\n    setDialogContent(content);\n    setDialogButtons(buttons);\n    setDialogOpen(true);    \n  }\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  const userIsAuthenticated = () => {\n    if (!AuthService.getCurrentUser()) { // user is not authenticated\n      openDialog(\n        t(\"Please log in or register\"),\n        t(\"You need to be authenticated to proceed\"),\n        [\n          {\n            text: t(\"Login\"),\n            close: true,\n            callback: () => {\n              TokenService.set(\"redirect\", props.tabId);\n              history.push(\"/signin\");\n            },\n          },\n          {\n            text: t(\"Register\"),\n            close: true,\n            callback: () => history.push(\"/signup\"),\n          },\n          {\n            text: t(\"Cancel\"),\n            close: true,\n          }\n        ],\n      );\n      return false;\n    }\n    return true;\n  }\n\n  const onDownload = () => {\n    if (userIsAuthenticated()) {\n      const link = document.createElement(\"a\");\n      link.download = config.data.templateDownloadName;\n      link.href = config.data.templateDownloadLink;\n      link.click();\n      setNextIsEnabled(true);\n      props.setJob({...props.job, download: true});\n    }\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Download\")}\n        </TabTitle>\n        <TabParagraph>\n          Scarica il modello Excel in cui potrai inserire i dati degli appalti, uno per riga.\n        </TabParagraph>\n        <TabParagraph>\n          <Button onClick={onDownload} variant=\"contained\" color=\"primary\">\n            {t(\"Download\")} ⬇\n          </Button>\n        </TabParagraph>\n        {/* <br />\n        <TabParagraph small>\n          <input type=\"checkbox\"></input>\n          Clicca qui se preferisci la versione ODS (Open Document Format),\n          nel caso che tu utilizzi LibreOffice anziché Microsoft Office.\n        </TabParagraph> */}\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {`${t(\"Back\")}`}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {`${t(\"Continue\")}`}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        dialogOpen={dialogOpen}\n        dialogSetOpen={setDialogOpen}\n        dialogTitle={dialogTitle}\n        dialogContent={dialogContent}\n        dialogButtons={dialogButtons}\n      />\n\n    </TabContainer>\n  );\n}\nTab02Download.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab02Download.defaultProps = {\n};\n\nexport default React.memo(Tab02Download);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useTranslation } from \"react-i18next\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\n\nconst useStyles = makeStyles(theme => ({\n  ul: {\n    padding: 32,\n  }\n}));\n\nfunction Tab03FillData(props) {\n  const classes = useStyles();\n  //const { auth } = useContext(AuthContext);\n  const { t } = useTranslation();\n  const [ prevIsEnabled ] = useState(true);\n  const [ nextIsEnabled ] = useState(true);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Fill your data\")}\n        </TabTitle>\n        <TabParagraph>\n          Adesso puoi aprire il modello scaricato con il tuo programma di gestione fogli di lavoro.\n        </TabParagraph>\n        <TabParagraph>\n          Sono presenti 2 fogli: \"METADATI\" ed \"ELENCO GARE\".\n          Ti consigliamo di iniziare dal primo foglio, \"METADATI\", ed inserire i 4 dati generali richiesti:\n          <ul className={classes.ul}>\n            <li><i>codiceFiscaleStrutturaProponente</i> il codice fiscale della tua struttura</li>\n            <li><i>denominazioneStrutturaProponente</i> la ragione sociale della tua struttura</li>\n            <li><i>annoRiferimento</i> l'anno di riferimento per cui inserirai gli appalti</li>\n            <li><i>urlFile</i> l'indirizzo URL dove sarà pubblicato il documento finale</li>\n          </ul>\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto puoi passare al secondo foglio, \"ELENCO GARE\".\n          Occorre inserire ogni appalto (o \"gara\"), uno per riga.\n        </TabParagraph>\n        <TabParagraph>\n          I campi da compilare sono:\n          <ul className={classes.ul}>\n            <li><i>CIG</i> il Codice Identificativo Gara</li>\n            ... TODO: documentare tutti gli altri campi...\n          </ul>\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {`${t(\"Back\")}`}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {`${t(\"Continue\")}`}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab03FillData.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab03FillData.defaultProps = {\n};\n\nexport default React.memo(Tab03FillData);\n","import React, { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"blue\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#353535\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst focusedStyle = {\n  backgroundColor: \"lightyellow\",\n  borderColor: \"purple\",\n};\n\nconst acceptStyle = {\n  backgroundColor: \"lightgreen\",\n  borderColor: \"darkgreen\",\n};\n\nconst rejectStyle = {\n  backgroundColor: \"lightred\",\n  borderColor: \"darkred\",\n};\n\nconst DragNDrop = ({ onDrop, accept }) => {\n  const { t } = useTranslation();\n  const {\n    getRootProps,\n    getInputProps,\n    isFocused,\n    isDragAccept,\n    isDragReject,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept\n  });\n\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isFocused ? focusedStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isFocused,\n    isDragAccept,\n    isDragReject,\n  ]);\n\n  return (\n    <div className=\"dropzone-div\" {...getRootProps({style})}>\n      <input className=\"dropzone-input\" {...getInputProps()} />\n      <div className=\"text-center\">\n        {isDragActive ? (\n          <p className=\"dropzone-content\">\n            {t(\"Release to drop the files here\")}\n          </p>\n        ) : (\n          <p className=\"dropzone-content\">\n            {t(\"Drag 'n drop some files here, or click to select files\")}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DragNDrop;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AuthService from \"../services/AuthService\";\nimport JobService from \"../services/JobService\";\nimport TokenService from \"../services/TokenService\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { toast } from \"./Toast\";\nimport Dialog from \"./Dialog\";\nimport DragNDrop from \"./DragNDrop\";\n\n\n\nfunction Tab04Upload(props) {\n  //const classes = useStyles();\n  const { t } = useTranslation();\n  const history = useHistory();\n  const [ prevIsEnabled ] = useState(true);\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(!!props?.job?.file);\n  const [ dialogTitle, setDialogTitle ] = useState(null);\n  const [ dialogContent, setDialogContent ] = useState(null);\n  const [ dialogButtons, setDialogButtons ] = useState([]);\n  const [ dialogOpen, setDialogOpen ] = useState(false);\n//  const [ file, setFile ] = useState(null);\n\n  const [ accept ] = useState([\n    \".csv\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    \"application/vnd.ms-excel\",\n  ]);\n\n  const openDialog = (title, content, buttons) => {\n    setDialogTitle(title);\n    setDialogContent(content);\n    setDialogButtons(buttons);\n    setDialogOpen(true);    \n  }\n\n  useEffect(() => {\n    // check if user is authenticated\n    const user = AuthService.getCurrentUser();\n    if (!user) { // user is not authenticated\n      openDialog(\n        t(\"Please log in or register\"),\n        t(\"You need to be authenticated to proceed\"),\n        [\n          {\n            text: t(\"Login\"),\n            close: true,\n            callback: () => {\n              TokenService.set(\"redirect\", props.job.tabId);\n              history.push(\"/signin\");\n            },\n          },\n          {\n            text: t(\"Register\"),\n            close: true,\n            callback: () => history.push(\"/signup\"),\n          },\n          {\n            text: t(\"Cancel\"),\n            close: true,\n            callback: () => props.goto(\"prev\"),\n          }\n        ],\n      );\n      return false;\n    }\n    return true;\n  }, [props, history, t]);\n\n  const fileSet = useCallback(async(file) => {\n    props.setJob({...props.job, file});\n  }, [props]);\n\n  const fileReset = useCallback(async() => {\n    /**\n     * When file is reset, we clear the full job! (we only keep tabId)\n     */\n    let job = {};\n    job.tabId = props.job.tabId;\n    //job.file = null;\n    props.setJob(job);\n  }, [props]);\n\n  const fileValidate = useCallback((file) => { // validate file type or name\n    // ods: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n    // xls: application/vnd.ms-excel\n    if (!( // TODO: check if these tests are sufficiently general...\n      file?.type?.split(\"/\")[1]?.match(\"officedocument.spreadsheetml.sheet\") ||\n      file?.type?.split(\"/\")[1]?.match(\"ms-excel\")\n    )) {\n      return t(`Please upload a spreadsheet`) + `.` +\n        (file?.type ? ` ` + t(`Selected file looks like {{fileType}}`, {fileType: file.type}) : ``)\n      ;\n    }\n    return null; // validated\n  }, [t]);\n\n  const fileUpload = useCallback(async(file) => {\n    await JobService.upload(file).then(\n      result => {\n        console.log('Upload success, file path', result.data.file);\n        fileSet(result.data.file);\n        //props.setJob({...props.job, file: result.data.file});\n        // TODO: possibly save current job as historycal record\n      },\n      error => {\n        console.error('Upload error:', error);\n        fileReset();\n        props.setJob({...props.job, file: {error: errorMessage(error)}}) // set upload error in job.file.error\n        toast.error(errorMessage(error));\n        return;\n      }\n    );\n  }, [props, fileSet, fileReset]);\n\n  const fileSelect = useCallback(async(selectedFile) => {\n    if (selectedFile) {\n      const error = fileValidate(selectedFile);\n      if (error) {\n        //setFile(null);\n        props.setJob({...props.job, file: null});\n        //fileSet(null);\n        setNextIsEnabled(false);\n      } else {\n        //setFile(selectedFile);\n        //fileSet(selectedFile);\n        props.setJob({...props.job, file: selectedFile});\n        await fileUpload(selectedFile);\n        setNextIsEnabled(true);\n      }\n    } else {\n      toast.error(t(\"No file selected, sorry... Please, repeat...\"));\n      //setFile(null);\n      //fileSet(null);\n      props.setJob({...props.job, file: null});\n      setNextIsEnabled(false);\n    }\n  }, [/*fileSet, */props, fileUpload, fileValidate, t]);\n\n  // on drop callback\n  const onDrop = useCallback(acceptedFiles => {\n    // this callback will be called after files get dropped, we will get the acceptedFiles;\n    // if needed, we can even access the rejected files too\n    console.log(\"accepted files:\", acceptedFiles);\n    fileSelect(acceptedFiles[0]);\n  }, [fileSelect]);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = async () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Upload\")}\n        </TabTitle>\n        <TabParagraph>\n          Carica il foglio Excel compilato:\n        </TabParagraph>\n\n        <div className=\"container\">\n          <DragNDrop\n            onDrop={onDrop}\n            accept={accept}\n          />\n          <br />\n          <TabParagraph>\n            {props?.job?.file?.originalname && t(\"Selected file\") + `: ${props?.job?.file?.originalname}`}\n            <br />\n            {props?.job?.file?.originalname && <Button variant=\"contained\" size=\"small\" color=\"default\" onClick={fileReset} title={t(\"Remove file\")}> 🗑 </Button>}\n          </TabParagraph>\n        </div>\n\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {`${t(\"Back\")}`}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {`${t(\"Continue\")}`}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        dialogOpen={dialogOpen}\n        dialogSetOpen={setDialogOpen}\n        dialogTitle={dialogTitle}\n        dialogContent={dialogContent}\n        dialogButtons={dialogButtons}\n      />\n\n    </TabContainer>\n  );\n}\n\nTab04Upload.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab04Upload.defaultProps = {\n};\n\nexport default React.memo(Tab04Upload);","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { toast } from \"./Toast\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport TokenService from \"../services/TokenService\";\nimport JobService from \"../services/JobService\";\nimport Dialog from \"./Dialog\";\n\n\n\nfunction Tab05Check(props) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const user = TokenService.getUser();\n  //const { job, setJob } = useContext(JobContext);\n  //const job = JobService.get();\n  //const [ job, setJob ] = useState(TokenService.getJob());\n  const [ statusLocal, setStatusLocal ] = useState({});\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(!!props?.job?.transform?.planUpgradeDeclined);\n  const [ prevIsEnabled] = useState(true);\n  const [ dialogTitle, setDialogTitle ] = useState(null);\n  const [ dialogContent, setDialogContent ] = useState(null);\n  const [ dialogButtons, setDialogButtons ] = useState([]);\n  const [ dialogOpen, setDialogOpen ] = useState(false);\n\n  const configDialog = (title, content, buttons) => {\n    setDialogTitle(title);\n    setDialogContent(content);\n    setDialogButtons(buttons);\n    //setDialogOpen(true);\n  }\n\n  // check user plan\n  useEffect(() => {\n    configDialog(\n      t(\"Please upgrade your plan\"),\n      t(\"You need to upgrade your plan to proceed.\") + \"\\n\" +\n      t(`Your current plan is \"${user?.plan?.name}\".`) + \"\\n\" +\n      t(`To elaborate ${props.job?.transform?.cigCount} CIGs you need at least plan \"${props.job?.transform?.planRequired?.name}\"`),\n      [\n        {\n          text: t(\"Upgrade plan\"),\n          close: true,\n          callback: () => {\n            //TokenService.setRedirect(props.tabId);\n            TokenService.set(\"redirect\", props.tabId);\n            history.push(\"/profile\"); // redirect to /profile route, where plan can be changed\n          },\n        },\n        {\n          text: t(`Proceed with the first ${user?.plan?.cigNumberAllowed} CIGs`),\n          callback: () => {\n            setNextIsEnabled(true);\n            props.setJob({...props.job, transform: {...props.job?.transform, planUpgradeDeclined: true}});\n          },\n          close: true,\n        }\n      ],\n    );\n  /* eslint-disable react-hooks/exhaustive-deps */\n  }, [history, props, t/*, user?.plan*/]);\n\n  useEffect(() => {\n    if (props.job?.transform) {\n      if (props.job?.transform?.code === \"TRUNCATED_DUE_TO_PLAN_LIMIT\") {\n        if (!props.job?.transform?.planUpgradeDeclined) { // TODO: when will we reset this flas?\n          return setDialogOpen(true);\n        }\n      }\n    } else {\n      setNextIsEnabled(true);\n    }\n  }, [props.job?.transform]);\n\n  useEffect(() => {\n    if (props.job.file && !props.job.transform) {\n      (async () => {\n        setStatusLocal({loading: true});\n        await JobService.transformXls2Xml(props.job.file.path).then(\n          result => {\n            if (result instanceof Error) {\n              props.setJob({...props.job, transform: result});\n              toast.error(errorMessage(result));\n              return setStatusLocal({ error: errorMessage(result)});\n            }\n            props.setJob({...props.job, transform: result.data.result});\n            setStatusLocal({success: result.data});\n            //setNextIsEnabled(true);\n          },\n        );\n      })();\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props, props.job]);\n\n  useEffect(() => {\n    if (props.job.file && props.job.transform && !props.job.validateXml) {\n      (async () => {\n        setStatusLocal({loading: true});\n        await JobService.validateXml(props.job.transform).then(\n          response => {\n            if (response instanceof Error) {\n              props.setJob({...props.job, validateXml: response});\n              //console.log(\"validateXml error:\", response);\n              toast.error(errorMessage(response));\n              return setStatusLocal({ error: errorMessage(response)});\n            }\n            //console.log(\"validateXml success:\", response.data);\n            props.setJob({...props.job, validateXml: response.data});\n            setStatusLocal({success: response.data});\n          },\n          error => {\n            props.setJob({...props.job, validateXml: error});\n          },\n        );\n      })();\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props, /*job.transform, setJob*/]);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  //if (!props.active) return null;\n  \n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Check\")}\n        </TabTitle>\n        <TabParagraph>\n          <pre>\n             JOB: {JSON.stringify(props.job, null, 2)}\n          </pre>\n          {statusLocal && \"loading\" in statusLocal && `Elaborazione in corso...`}\n          {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n          {statusLocal && \"success\" in statusLocal && `Elaborazione completata`}\n        </TabParagraph>\n        {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {`${t(\"Back\")}`}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {`${t(\"Continue\")}`}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        dialogOpen={dialogOpen}\n        dialogSetOpen={setDialogOpen}\n        dialogTitle={dialogTitle}\n        dialogContent={dialogContent}\n        dialogButtons={dialogButtons}\n      />\n\n    </TabContainer>\n  );\n}\nTab05Check.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab05Check.defaultProps = {\n};\n\nexport default React.memo(Tab05Check);","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { toast } from \"./Toast\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport JobService from \"../services/JobService\";\n\n\n\nfunction Tab06Validation(props) {\n  const { t } = useTranslation();\n  const [ statusLocal, setStatusLocal ] = useState({});\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(false);\n  const [ prevIsEnabled ] = useState(true);\n\n  useEffect(() => {\n    if (props.job && props.job.transform) {\n      if (props.job.outcome) {\n        setNextIsEnabled(true);\n        setStatusLocal({success: props.job.outcome.esitoUltimoTentativoAccessoUrl === \"successo\"});\n      } else {\n        (async () => {\n          setStatusLocal({loading: true});\n          await JobService.outcomeCheck(\n            props.job?.transform?.metadati?.annoRiferimento,\n            props.job?.transform?.header?.codiceFiscaleStrutturaProponente\n          ).then(\n            result => {\n              if (result instanceof Error) {\n                toast.error(errorMessage(result));\n                return setStatusLocal({ error: errorMessage(result)});\n              }\n              //console.log(\"OUTCOMECHECK result:\", result);\n              props.setJob({...props.job, outcome: result.data});\n              setStatusLocal({success: result.data});\n              setNextIsEnabled(true);\n            },\n            error => {\n              toast.error(errorMessage(error));\n              props.setJob({...props.job, outcome: error.response.data.message});\n              return setStatusLocal({ error: errorMessage(error)});\n            }\n          );\n        })();\n      }\n    }\n  /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props.job.transform, props.job.outcome]);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  //if (!props.active) return null;\n  \n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Attendi la validazione da parte dell'ANAC\")}\n        </TabTitle>\n        <TabParagraph>\n          {statusLocal && \"success\" in statusLocal && (props.job?.outcome?.esitoUltimoTentativoAccessoUrl === \"successo\") && (\n            <pre>\n              <img src=\"images/success.ico\" width=\"64\" alt=\"success\"></img> {props.job?.outcome?.dataUltimoTentativoAccessoUrl}\n            </pre>\n          )}\n          <pre>\n            JOB: {JSON.stringify(props.job, null, 2)}\n          </pre>\n        </TabParagraph>\n        {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {`${t(\"Back\")}`}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {`${t(\"Continue\")}`}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab06Validation.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab06Validation.defaultProps = {\n};\n\nexport default React.memo(Tab06Validation);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton } from \"./TabsComponents\";\n\nfunction Tab07Finished(props) {\n  const { t } = useTranslation();\n  const [ prevIsEnabled ] = useState(true);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Finished\")}!\n        </TabTitle>\n        <TabParagraph>\n          <div style={{fontSize: 128, textAlign: \"center\"}}>\n            🏁\n          </div>\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {`${t(\"Back\")}`}\n          </TabPrevButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab07Finished.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab07Finished.defaultProps = {\n};\n\nexport default React.memo(Tab07Finished);\n","import React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TokenService from \"../services/TokenService\";\nimport JobService from \"../services/JobService\";\nimport Tab01Start from \"./Tab01Start\";\nimport Tab02Download from \"./Tab02Download\";\nimport Tab03FillData from \"./Tab03FillData\";\nimport Tab04Upload from \"./Tab04Upload\";\nimport Tab05Check from \"./Tab05Check\";\nimport Tab06Validation from \"./Tab06Validation\";\nimport Tab07Finished from \"./Tab07Finished\";\nimport config from \"../config\";\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>\n        {children}\n      </Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst a11yProps = (index) => {\n  return {\n    id: `nav-tab-${index}`,\n    \"aria-controls\": `nav-tabpanel-${index}`\n  };\n}\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    opacity: 0.8,\n  },\n}))(props => {\n  return (\n    <Tab {...props} />\n  );\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    //backgroundColor: theme.palette.background.paper,\n  },\n  tabs: {\n    \"& .MuiTabs-indicator\": {\n      //display: \"none\",\n      backgroundColor: \"orange\",\n    }\n  }\n}));\n\nconst TabsPanel = () => {\n  const classes = useStyles();\n  const [ job, setJob ] = useState(() => TokenService.getJob());\n  //const { job, setJob } = useContext(JobContext);\n  //const [ job, setJob ] = useState(JobService.get());\n  //const [ job, setJob ] = useState(TokenService.getJob());\n  //const redirect = TokenService.getRedirect();\n  //const [ tabId, setTabId ] = useState(TokenService.getJob());\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const redirect = TokenService.get(\"redirect\");\n    console.log(\"REDIRECT:\", redirect);\n    if (redirect) {\n      setJob({...job, tabId: redirect });\n      TokenService.remove(\"redirect\");\n    }\n  }, [job]);\n  \n  useEffect(() => { // to serialize job\nconsole.log(\"--------------- TabsPanel useEffect setjob, job:\", job);\n    TokenService.setJob(job); // serialize locally, on local storage\n    JobService.set(job); // serialize remotely, on server db\n  }, [job]);\n\n  function changeTab(id) {\n    setJob({...job, tabId: id });\n  }\n\n  function forceTab(event, id) {\n    if (config.ui.userCanForceTabChange) { // user can force tab change by clicking on app bar titles\n      changeTab(id);\n    }\n  }\n  \n  function goto(where) {\n    let id = where;\n    if (typeof where === \"string\") {\n      switch (where.toLowerCase()) {\n        case \"start\":\n          break;\n        case \"download\":\n          break;\n        case \"fill your data\":\n          break;\n        case \"upload\":\n          break;\n        case \"check\":\n          break;\n        case \"wait for validation\":\n          break;\n        case \"finish!\":\n          break;\n        case \"next\":\n          id = job ? job.tabId + 1 : 0;\n          break;\n        case \"prev\":\n          id = job ? job.tabId - 1 : 0;\n          break;\n        default:\n          console.error(`Unforeseen where specification in goto: ${where}`);\n          return;\n      }\n    }\n    changeTab(id);\n  }\n\n  if (!job?.tabId) job.tabId = 0;\n  console.log(\"TabsPanel render - job.tabId:\", job?.tabId, \"job:\", job);\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" elevation={0} style={{/*backgroundColor: \"transparent\",*/ top: 50}}>\n        {/* <Tabs\n          value={job.tabId}\n          onChange={forceTab}\n          indicatorColor=\"primary\"\n          // textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs\"\n          className={classes.tabs}\n        > */}\n        <Paper elevation={0} square>\n          <Tabs\n            value={job?.tabId}\n            //indicatorColor=\"secondary\"\n            //textColor=\"secondary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            onChange={forceTab}\n            aria-label=\"current section\"\n          >\n            <StyledTab label={`${t(\"Start\")} 🪄`} {...a11yProps(0)} />\n            <StyledTab label={`${t(\"Download\")} ⬇`} {...a11yProps(1)} />\n            <StyledTab label={`${t(\"Fill your data\")} 🖋`} {...a11yProps(2)} />\n            <StyledTab label={`${t(\"Upload\")} ⬆`} {...a11yProps(3)} />\n            <StyledTab label={`${t(\"Check\")} ✔`} {...a11yProps(4)} />\n            <StyledTab label={`${t(\"Wait for validation\")} 🎯`} {...a11yProps(5)} />\n            <StyledTab label={`${t(\"Finish!\")} 🏁`} {...a11yProps(6)} />\n          </Tabs>\n        </Paper>\n      </AppBar>\n\n      <>\n        {(job?.tabId === 0) && (\n          <TabPanel index={0} value={job.tabId}>\n            <Tab01Start goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 1) && (\n          <TabPanel index={1} value={job.tabId}>\n            <Tab02Download goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 2) && (\n          <TabPanel index={2} value={job.tabId}>\n            <Tab03FillData goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 3) && (\n          <TabPanel index={3} value={job.tabId}>\n            <Tab04Upload goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 4) && (\n          <TabPanel index={4} value={job.tabId}>\n            <Tab05Check goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 5) && (\n          <TabPanel index={5} value={job.tabId}>\n            <Tab06Validation goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 6) && (\n          <TabPanel index={6} value={job.tabId}>\n            <Tab07Finished goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n      </>\n      {/* <>\n        <Tab01Start active={job?.tabId === 0} tabId={job?.tabId} goto={(where) => goto(where)} />\n        <Tab02Download active={job?.tabId === 1} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n        <Tab03FillData active={job?.tabId === 2} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n        <Tab04Upload active={job?.tabId === 3} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n        <Tab05Check active={job?.tabId === 4} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n        <Tab06Validation active={job?.tabId === 5} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n        <Tab07Finished active={job?.tabId === 6} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </> */}\n\n      {/* <TabPanel value={job?.tabId || 0} index={0}>\n        <Tab01Start active={job?.tabId === 0} tabId={job?.tabId} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={job?.tabId || 0} index={1}>\n        <Tab02Download active={job?.tabId === 1} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={job?.tabId || 0} index={2}>\n        <Tab03FillData active={job?.tabId === 2} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={job?.tabId || 0} index={3}>\n        <Tab04Upload active={job?.tabId === 3} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={job?.tabId || 0} index={4}>\n        <Tab05Check active={job?.tabId === 4} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={job?.tabId || 0} index={5}>\n        <Tab06Validation active={job?.tabId === 5} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={job?.tabId || 0} index={6}>\n        <Tab07Finished active={job?.tabId === 6} tabId={job?.tabId || 0} goto={(where) => goto(where)} />\n      </TabPanel> */}\n    </div>\n  );\n}\n\nexport { TabsPanel };","import React from \"react\";\n// import { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n// import { useTranslation } from \"react-i18next\";\n// import { AuthContext } from \"../providers/AuthProvider\";\nimport { TabsPanel } from \"./TabsPanel\";\n\nconst useStyles = makeStyles(theme => ({\n\thome: {\n    fontSize: \"1.5em\",\n\t},\n}));\n\nfunction Home() {\n\tconst classes = useStyles();\n  // const { auth } = useContext(AuthContext);\n  // const { t } = useTranslation();\n\n  return (\n    <div className={classes.home}>\n      {/* {(typeof auth.user !== \"undefined\") && // if auth.user is undefined, we don't know yet about user authentication...\n        `${t(\"Home\")} ${t(\"for\")} ${auth.user ? t(\"authenticated user\") : t(\"guest user\")} ${auth.user ? auth.user.email : \"\"}`\n      } */}\n      <TabsPanel />\n    </div>\n  );\n}\n\nexport default React.memo(Home);"],"sourceRoot":""}