{"version":3,"file":"static/js/257.f7613ecb.chunk.js","mappings":"gPA8BA,EARoB,CAClBA,iBArBuB,WACvB,OAAOC,EAAAA,EAAAA,IAAQ,cAqBfC,aAlBmB,WACnB,OAAOD,EAAAA,EAAAA,IAAQ,eAkBfE,kBAfwB,WACxB,OAAOF,EAAAA,EAAAA,IAAQ,cAefG,cAZoB,WACpB,OAAOH,EAAAA,EAAAA,IAAQ,gBAYfI,cAToB,WACpB,OAAOJ,EAAAA,EAAAA,IAAQ,0B,sCCDXK,GAAYC,EAAAA,EAAAA,IAAW,SAAAC,GAAK,MAAK,CACtCC,WAAY,CACTC,SAAU,aAMd,SAASC,IACR,IAAMC,EAAUN,IAEPO,GAAMC,EAAAA,EAAAA,KAAND,EAGR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAmDA,OAjDAC,IAAAA,OAAc,OAEdC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,gBAA4BC,MAC1B,SAACC,GACCL,EAAWK,EAASC,SAEtB,SAACC,GACCP,GAAWQ,EAAAA,EAAAA,IAAaD,SAM3B,KAoCD,iBAAKE,UAAWd,EAAQH,WAAxB,oBACMI,EAAE,iBACN,4BACE,2BAAQA,EAAE,aACV,SAACc,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,UAAU,MACVC,eAAe,aACfC,WAAW,aALb,UAOE,yBAEIC,KAAKC,UAAUlB,EAAS,KAAM,aA4C5C,MAAemB,EAAAA,KAAWxB","sources":["services/UserService.js","components/AdminPanel.js"],"sourcesContent":["import api from \"./API\";\n\nconst getPublicContent = () => {\n  return api.get(\"/test/all\");\n};\n\nconst getUserBoard = () => {\n  return api.get(\"/test/user\");\n};\n\nconst getModeratorBoard = () => {\n  return api.get(\"/test/mod\");\n};\n\nconst getAdminBoard = () => {\n  return api.get(\"/test/admin\");\n};\n\nconst getAdminPanel = () => {\n  return api.get(\"/admin/getAdminPanel\");\n};\n\nconst UserService = {\n  getPublicContent,\n  getUserBoard,\n  getModeratorBoard,\n  getAdminBoard,\n  getAdminPanel,\n};\n\nexport default UserService;\n","import React, { useState, useEffect/*, useContext*/ } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n//import Card from \"@material-ui/core/Card\";\n//import CardHeader from \"@material-ui/core/CardHeader\";\n//import CardContent from \"@material-ui/core/CardContent\";\n//import Typography from \"@material-ui/core/Typography\";\nimport { useTranslation } from \"react-i18next\";\n//import axios from \"axios\";\n//import { getUsers } from \"../libs/Fetch\";\n//import EventBus from \"../libs/EventBus\";\nimport { errorMessage } from \"../libs/Misc\";\nimport UserService from \"../services/UserService\";\nimport moment from \"moment\";\nimport \"moment/locale/it\"; // TODO: import all needed locales... (!!!)\n//import { toast } from \"./Toast\";\n//import { AuthContext } from \"../providers/AuthProvider\";\n\nconst useStyles = makeStyles(theme => ({\n\tadminPanel: {\n    fontSize: \"1.1em\",\n\t},\n}));\n\n\n\nfunction AdminPanel() {\n\tconst classes = useStyles();\n  //const { auth } = useContext(AuthContext);\n  const { t } = useTranslation();\n\n  //const [data/*, setData*/] = useState({});\n  const [content, setContent] = useState({});\n\n  moment.locale(\"it\");\n\n  useEffect(() => {\n    UserService.getAdminPanel().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        setContent(errorMessage(error));\n        // if (error.response && error.response.status === 403) {\n        //   EventBus.dispatch(\"logout\");\n        // }\n      }\n    );\n  }, []);\n  \n  // useEffect(() => {\n  //   (async () => {\n  //     await getUsers({}).then(data => {\n  //       if (!data.ok) {\n  //         console.warn(\"getUsers error:\", data);\n  //         toast.error(t(data.message));\n  //         return;\n  //       }\n  //       console.log(\"getUsers success:\", data);\n  //     }).catch(err => {\n  //       console.error(\"getUsers error catched:\", err);\n  //       toast.error(t(err.message));\n  //     });\n  //   })();\n\n//     try {\n//       const config = {\n//         headers: { Authorization: `Bearer ${auth.user.accessToken}` }\n//       };\n// console.log('auth.user.accessToken:', auth.user.accessToken);\n//       const result = await axios.get(\n//         \"/api/user/\",\n//         config\n//         );\n//       //const res = await result.json();\n// console.log(\"result:\", result);\n//       setData(result.data);\n//     } catch(err) {\n//       console.log(\"Fetch error:\", err); // TODO...\n//       toast.error(t(err.message));\n//     }\n//   }, [t]);\n\n  return (\n    <div className={classes.adminPanel}>\n      {`${t(\"Admin Panel\")}`}\n      <div>\n        <label>{t(\"Users:\")}</label>\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justifyContent=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <pre>\n            {\n              JSON.stringify(content, null, 2)\n            }\n          </pre>\n          {/* {\n            data.users ? data.users.map(user => (\n              <Grid item xs={12} key={user._id}>\n                <Card>\n                  <CardContent style={{ fontSize: \"0.9em\" }}>\n                    <Typography color=\"text.primary\">\n                      {`${user.firstName} ${user.lastName}`}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {user.email}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {t(\"Roles\") + \":\"} {user.roles.length ? user.roles.join(\", \") : \"user\"}{// \"user\" is default role}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {t(\"Verified\") + \":\"} {user.isVerified ? t(\"yes\") : t(\"no\")}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {// TODO: localize according current language... possibly in a much more outer level}\n                      {t(\"Created on\") + \":\"} {moment(user.createdAt).locale(\"it\").format(\"YYYY-MM-DD\")}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {t(\"Updated on\") + \":\"} {moment(user.updatedAt).locale(\"it\").format(\"YYYY-MM-DD\")}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {t(\"Access token\") + \":\"} {user.accessToken}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {\"Content:\"} {content}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            )) : \"...\"\n          } */}\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(AdminPanel);"],"names":["getPublicContent","api","getUserBoard","getModeratorBoard","getAdminBoard","getAdminPanel","useStyles","makeStyles","theme","adminPanel","fontSize","AdminPanel","classes","t","useTranslation","useState","content","setContent","moment","useEffect","UserService","then","response","data","error","errorMessage","className","Grid","container","spacing","direction","justifyContent","alignItems","JSON","stringify","React"],"sourceRoot":""}