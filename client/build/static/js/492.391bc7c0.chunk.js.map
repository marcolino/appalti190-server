{"version":3,"file":"static/js/492.391bc7c0.chunk.js","mappings":"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","sources":["components/TabsComponents.js","hooks/useWindowSize.js","components/Tab01Start.js","components/Tab02Download.js","components/Tab03FillData.js","services/JobService.js","components/Tab04Upload.js","hooks/useDragAndDrop.js","components/Tab05Check.js","components/Tab06Validation.js","components/Tab07Finished.js","components/TabsPanel.js","components/Home.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport useWindowSize from \"../hooks/useWindowSize\";\n\n// const height = window.innerHeight;\n// const width = window.innerWidth;\n// const heightScrollable = (\n//   (height >= width) ?\n//     //height - (height *.12) - (height *.12) - (height *.12) // portrait\n//     height * .64 // portrait\n//   :\n//     //height - (height *.16) - (height *.16) - (height*.16) // landscape\n//     height * .52 // landscape\n//   );\n\n//console.log(\"height, width, heightScrollable:\", height, width, heightScrollable);\nconst useStyles = makeStyles(theme => ({\n\tparagraph: {\n    fontSize: \"1.1em\",\n\t},\n\tparagraphSmall: {\n    fontSize: \"0.8em\",\n\t},\n  centered: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  justified: {\n    textAlign: \"justify\",\n  },\n  box: {\n    display: \"flex\",\n  },\n  boxRight: {\n    justifyContent: \"flex-end\",\n  },\n  sup: {\n    fontSize: \"0.8em\",\n  },\n  scrollableContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"1em\",\n    minHeight: \"5em\",\n    //maxHeight: heightScrollable,\n  },\n  scrollable: {\n    height: \"100%\",\n    overflowY: \"auto\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    minHeight: \"3em\",\n  },\n\n  // scrollableContainer: {\n  //   width: \"100%\",\n  //   height: \"100%\",\n  //   display: \"flex\",\n  //   flexDirection: \"column\",\n  //   flexWrap: \"nowrap\",\n  // },\n  // scrollableHeader: {\n  //   flexShrink: 0,\n  // },\n  // scrollableBody: {\n  //   flexGrow: 1,\n  //   overflow: \"auto\",\n  //   minHeight: \"3em\",\n  // },\n  // scrollableFooter: {\n  //   flexShrink: 0,\n  // },\n}));\n\nconst TabContainer = React.memo(props => {\n  //const classes = useStyles();\n  return (\n    <div>\n      {props.children}\n    </div>\n  );\n});\nTabContainer.propTypes = {\n};\nTabContainer.defaultProps = {\n};\n\nconst TabBodyScrollable = React.memo(props => {\n  const classes = useStyles();\n\n  /**\n   * Note: here we assume fixed sections height...\n   * this is a bad hack to have a scrollable body\n   * and avoid a scrollable container for any\n   * window height and consistent after a resize\n   */\n  const toolbarHeight = 90; // toolbar height\n  const tabbarHeight = 100; // tabbbar height\n  const footerHeight = 60; // footer height\n  const size = useWindowSize();\n\n  return (\n    <div className={classes.scrollableContainer}>\n      <div className={classes.scrollable} style={{height: Math.max(120, size.height - toolbarHeight - tabbarHeight - /*titleHeight - */footerHeight)}}>\n        {props.children}\n      </div>\n    </div>\n  );\n});\nTabBodyScrollable.propTypes = {\n};\nTabBodyScrollable.defaultProps = {\n};\n\nconst TabTitle = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <div className={classes.centered}>\n      <h2>{props.children}</h2>\n    </div>\n  );\n});\nTabTitle.propTypes = {\n};\nTabTitle.defaultProps = {\n};\n\nconst TabParagraph = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box mb={1}>\n      <Typography component=\"div\" className={`${classes.paragraph} ${classes.justified} ${props.small ? classes.paragraphSmall : null} ${props.class}`}>\n        {props.children}\n      </Typography>\n    </Box>\n  );\n});\nTabParagraph.propTypes = {\n  class: PropTypes.string,\n};\nTabParagraph.defaultProps = {\n  class: null,\n};\n\nconst TabNextButton = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box\n      component=\"span\"\n      m={1} // margin\n      className={`${classes.box} ${classes.boxRight}`}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        // fullWidth={props.fullWidth}\n        // variant={props.variant}\n        // color={props.color}\n        // size={props.size}\n        // className={`${classes.button} ${props.social ? classes.buttonFederated : \"\"} ${props.social ? classes[\"buttonFederated\" + capitalize(props.social)] : \"\"} ${classes[props.className]}`}\n        // startIcon={props.startIcon}\n        onClick={props.onNext}\n        disabled={!props.nextIsEnabled}\n      >\n        {props.children}\n      </Button>\n    </Box>\n  );\n});\nTabNextButton.propTypes = {\n  onNext: PropTypes.func.isRequired,\n  nextIsEnabled: PropTypes.bool.isRequired,\n};\nTabNextButton.defaultProps = {\n};\n\nconst TabTooltip = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Tooltip\n      title={props.title}\n      placement=\"top\"\n    >\n      <sup className={classes.sup}>{props.anchor}</sup>\n    </Tooltip>\n  );\n});\nTabTooltip.propTypes = {\n  title: PropTypes.string.isRequired,\n  anchor: PropTypes.string,\n};\nTabTooltip.defaultProps = {\n  anchor: \"*\",\n};\n\nexport {TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton, TabTooltip};","import { useState, useEffect } from \"react\";\n\nexport default function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\nconsole.log(\"useWindowSize - height:\", window.innerHeight);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton, TabTooltip } from \"./TabsComponents\";\nfunction Tab01Start(props) {\n  //const { auth } = useContext(AuthContext);\n  const { t } = useTranslation();\n  const [ nextIsEnabled /*, setNextIsEnabled*/ ] = useState(true);\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Welcome!\")}\n        </TabTitle>\n        <TabParagraph>\n          Questa è la nostra proposta per adempiere i requisiti della {\" \"}\n          <a href=\"https://www.anticorruzione.it/-/adempimenti-legge-190/2012-art.-1-comma-32-7\" target=\"legge190\">\n            Legge 190\n          </a>\n          . Speriamo che sia chiara e semplice da usare.\n          </TabParagraph>\n        <TabParagraph>\n          Questa app ti guiderà passo passo nei pochi steps che occorrono per completare\n          l'adempimento con successo.\n        </TabParagraph>\n        <TabParagraph>\n          Per iniziare dovrai scaricare un modello Excel\n          <TabTooltip\n            title={\"Può essere in formato MicroSoft-Excel, oppure in formato ODS, come preferisci.\"}\n          >\n          </TabTooltip>\n          , che contiene delle regole per guidarti nella compilazione, e minimizzare i possibili errori formali.\n        </TabParagraph>\n        <TabParagraph>\n          Poi dovrai inserire, uno per riga, tutti i beni o servizi che la tua struttura ha appaltato\n          nell'anno in corso.\n        </TabParagraph>\n        <TabParagraph>\n          Alla fine dell'anno, in genere entro la fine di Gennaio dell'anno successivo, sarà sufficiente\n          caricare qui il foglio Excel compilato.\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto il nostro sistema effettuerà il controllo formale dei dati inseriti.\n          Nel caso che venga segnalato qualche anomalia dovrai correggere sul file Excel le anomalie\n          segnalate, e poi ri-caricarlo.\n        </TabParagraph>\n        <TabParagraph>\n          Dopodichè potrai scaricare il documento XML prodotto, che andrà pubblicato sul\n          sito cui fa riferimento la tua struttura.\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto avrai praticamente completato l'adempimento.\n          Se vorrai potrai controllare - sempre su questo sito - l'esito della verifica da parte\n          dell'ANAC.\n        </TabParagraph>\n        <TabParagraph>\n          Tieni presente che siamo sempre disponibili a risponderti per qualsiasi dubbio o\n          incertezza. Le modalità di assistenza sono diverse, dal supporto telefonico a\n          quello per email, e dipendono anche dal piano scelto.\n          I riferimenti sono presenti nel menu, alla voce \"Supporto\".\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <div>\n        <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n          {`${t(\"Start\")}`}\n        </TabNextButton>\n      </div>\n    </TabContainer>\n  );\n}\nTab01Start.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab01Start.defaultProps = {\n};\n\nexport default React.memo(Tab01Start);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"@material-ui/core/Button\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton } from \"./TabsComponents\";\nimport config from \"../config\";\n\nfunction Tab02Download(props) {\n  const { t } = useTranslation();\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(false);\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  const onDownload = () => {\n    const link = document.createElement(\"a\");\n    link.download = config.data.templateDownloadName;\n    link.href = config.data.templateDownloadLink;\n    link.click();\n    setNextIsEnabled(true);\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Download\")}\n        </TabTitle>\n        <TabParagraph>\n          Scarica il modello Excel in cui potrai inserire i dati degli appalti, uno per riga.\n        </TabParagraph>\n        <TabParagraph>\n          <Button onClick={onDownload} variant=\"contained\" color=\"primary\">\n            {t(\"Download\")} ⬇\n          </Button>\n        </TabParagraph>\n        {/* <br />\n        <TabParagraph small>\n          <input type=\"checkbox\"></input>\n          Clicca qui se preferisci la versione ODS (Open Document Format),\n          nel caso che tu utilizzi LibreOffice anziché Microsoft Office.\n        </TabParagraph> */}\n      </TabBodyScrollable>\n\n      <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n        {`${t(\"Continue\")}`}\n      </TabNextButton>\n    </TabContainer>\n  );\n}\nTab02Download.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab02Download.defaultProps = {\n};\n\nexport default React.memo(Tab02Download);","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useTranslation } from \"react-i18next\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton } from \"./TabsComponents\";\n\nconst useStyles = makeStyles(theme => ({\n  xul: {\n    padding: 15,\n  }\n}));\n\nfunction Tab03FillData(props) {\n  const classes = useStyles();\n  //const { auth } = useContext(AuthContext);\n  const { t } = useTranslation();\nconst [ nextIsEnabled/*, setNextIsEnabled*/ ] = useState(true);\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Fill your data\")}\n        </TabTitle>\n        <TabParagraph>\n          Adesso puoi aprire il modello scaricato con il tuo programma di gestione fogli di lavoro.\n        </TabParagraph>\n        <TabParagraph>\n          Sono presenti 2 fogli: \"METADATI\" ed \"ELENCO GARE\".\n          Ti consigliamo di iniziare dal primo foglio, \"METADATI\", ed inserire i 4 dati generali richiesti:\n          <ul className={classes.ul}>\n            <li><i>codiceFiscaleStrutturaProponente</i> il codice fiscale della tua struttura</li>\n            <li><i>denominazioneStrutturaProponente</i> la ragione sociale della tua struttura</li>\n            <li><i>annoRiferimento</i> l'anno di riferimento per cui inserirai gli appalti</li>\n            <li><i>urlFile</i> l'indirizzo URL dove sarà pubblicato il documento finale</li>\n          </ul>\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto puoi passare al secondo foglio, \"ELENCO GARE\".\n          Occorre inserire ogni appalto (o \"gara\"), uno per riga.\n        </TabParagraph>\n        <TabParagraph>\n          I campi da compilare sono:\n          <ul className={classes.ul}>\n            <li><i>CIG</i> il Codice Identificativo Gara</li>\n            ... TODO: documentare tutti gli altri campi...\n          </ul>\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n        {`${t(\"Continue\")}`}\n      </TabNextButton>\n    </TabContainer>\n  );\n}\nTab03FillData.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab03FillData.defaultProps = {\n};\n\nexport default React.memo(Tab03FillData);","import api from \"./API\";\n\nconst upload = (file) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  \n  return api.post(\n    \"/job/upload\", \n    formData,\n    {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      }\n    }\n  );\n};\n\nconst transformXls2Xml = (filePath) => {\n  return api.post(\n    \"/job/transformXls2Xml/filePath\",\n    {\n      filePath,\n    }\n  );\n}\n\nconst validateXml = (transform) => {\n  return api.post(\n    \"/job/validateXml/transform\",\n    {\n      transform,\n    }\n  );\n}\n\nconst outcomeCheck = (/*anno, codiceFiscaleAmministrazione*/) => {\n  return api.post(\n    \"/job/outcomeCheck\"/*/anno/codiceFiscaleAmministrazione\"*/,\n    {/*\n      anno,\n      codiceFiscaleAmministrazione,\n    */}\n  );\n}\n\nconst outcomeFailureDetails = (anno, codiceFiscaleAmministrazione) => {\n  return api.post(\n    \"/job/outcomeFailureDetails/anno/codiceFiscaleAmministrazione\",\n    {\n      anno,\n      codiceFiscaleAmministrazione,\n    }\n  );\n}\n\nconst JobService = {\n  upload,\n  transformXls2Xml,\n  validateXml,\n  outcomeCheck,\n  outcomeFailureDetails,\n};\n\nexport default JobService;\n","import React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useTranslation } from \"react-i18next\";\n//import { useDrpzone } from \"react-dropzone\";\nimport Button from \"@material-ui/core/Button\";\n//import Paper from \"@material-ui/core/Paper\";\n//import RootRef from \"@material-ui/core/RootRef\";\nimport useDragAndDrop from \"../hooks/useDragAndDrop\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton } from \"./TabsComponents\";\n//import { ControlPointDuplicateOutlined } from \"@material-ui/icons\";\nimport { ServiceContext } from \"../providers/ServiceProvider\";\n//import { AuthContext } from \"../providers/AuthProvider\"; // TODO: test only\n//import { upload } from \"../libs/Fetch\"; // TODO (use instance.post in libs/Fetch, not a raw fetch ...)\nimport JobService from \"../services/JobService\";\n\n\n\nconst useStyles = makeStyles(theme => ({\n  fileDropLabel: {\n    display: \"inline-block\",\n    textAlign: \"center\",\n    width: \"100%\",\n    border: \"3px black dashed\",\n    padding: \"3em 1.78em\", /* ??? */\n    cursor: \"pointer\",\n    backgroundColor: \"#f0f0f0\",\n  },\n  fileDropError: {\n    display: \"inline-block\",\n    fontSize: \"1.0em\",\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n    color: \"darkred\",\n    marginTop: \"1em\",\n  }\n}));\n\nfunction Tab04Upload(props) {\n  const classes = useStyles();\n  //const { auth } = useContext(AuthContext);\n  const { t } = useTranslation();\n  const { service, setService } = useContext(ServiceContext);\n  //const { auth, setAuth } = useContext(AuthContext);\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(false);\n  const [ file, setFile ] = useState(null);\n  const {\n    dragOver,\n    setDragOver,\n    onDragOver,\n    onDragLeave,\n    fileDropError,\n    setFileDropError,\n  } = useDragAndDrop();\n\n  const onDrop = (e) => {\n    e.preventDefault();\n    const selectedFile = e?.dataTransfer?.files[0];\n    fileSelect(selectedFile);\n  };\n\n  const onFileSelect = (e) => {\n    e.preventDefault();\n    const selectedFile = e?.target?.files[0];\n    fileSelect(selectedFile);\n  };\n\n  const fileSelect = (selectedFile) => {\n    setDragOver(false);\n    if (selectedFile) {\n      const error = fileValidate(selectedFile);\n      if (error) {\n        setFileDropError(error);\n        setFile(null);\n        setNextIsEnabled(false);\n      } else {\n        setFileDropError(null);\n        setFile(selectedFile);\n        setNextIsEnabled(true);\n      }\n    } else {\n      setFileDropError(t(\"No file selected, sorry... Please, repeat...\"));\n      setFile(null);\n      setNextIsEnabled(false);\n    }\n  };\n\n  const fileValidate = (file) => { // validate file type or name\n    // ods: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n    // xls: application/vnd.ms-excel\n    if (!( // TODO: check if these tests are enough general...\n      file?.type?.split(\"/\")[1]?.match(\"officedocument.spreadsheetml.sheet\") ||\n      file?.type?.split(\"/\")[1]?.match(\"ms-excel\")\n    )) {\nconsole.log(\"FILE:\", file);\nconsole.log(\"FILE.TYPE:\", file?.type);\n      return t(`Please upload a spreadsheet`) + `.` + (file?.type ? ` ` + t(`Selected file looks like {{fileType}}`, {fileType: file.type}) : ``);\n    }\n    return null; // validated\n  };\n\n  const fileReset = (e) => {\n    setFile(null);\n    document.getElementById(\"file\").value = \"\";\n    setFileDropError(\"\");\n    setNextIsEnabled(false);\n    setDragOver(false);\n  };\n\n  const fileUpload = async () => {\n    await JobService.upload(file).then(\n      (response) => {\n        console.log('Upload success, file path', response.data.file);\n        setService({file: response.data.file});\n        console.log(\"service:\", service);\n      },\n      (error) => { // TODO...\n        console.error('Upload error:', error);\n      }\n    );\n  };\n\n  const onNext = async () => {\n    await fileUpload();\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Upload\")}\n        </TabTitle>\n        <TabParagraph>\n          Carica il foglio Excel compilato:\n        </TabParagraph>\n\n        <div className=\"container\">\n          <form>\n            <label\n              htmlFor=\"file\"\n              onDragOver={onDragOver}\n              onDragLeave={onDragLeave}\n              onDrop={onDrop}\n              style={{ /* width: \"100%\", textAlign: \"center\",*/ backgroundColor: `${dragOver ? \"#ffdd00\" : \"\"}`}}\n              className={classes.fileDropLabel}\n            >\n              <span style={{ color: `${dragOver ? \"black\" : \"#444\"}` }}>\n                {t(\"Drop the file here or click to select from disk\")}\n              </span>\n            </label>\n            <input type=\"file\" name=\"file\" id=\"file\" onChange={onFileSelect} style={{display: \"none\"}} />\n          </form>\n          {fileDropError && (\n            <div className={classes.fileDropError}>{fileDropError}</div>\n          )}\n          <br />\n          <TabParagraph>\n            {file && t(`File caricato: ${file.name}`)}\n            <br />\n            {file && <Button variant=\"contained\" size=\"small\" color=\"default\" onClick={fileReset} title={t(\"Remove file\")}> 🗑 </Button>}\n          </TabParagraph>\n        </div>\n\n      </TabBodyScrollable>\n\n      <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n        {`${t(\"Continue\")}`}\n      </TabNextButton>\n    </TabContainer>\n  );\n}\nTab04Upload.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab04Upload.defaultProps = {\n};\n\nexport default React.memo(Tab04Upload);","import { useState } from \"react\";\n\nexport default function useDragAndDrop() {\n  const [dragOver, setDragOver] = useState(false);\n  const [fileDropError, setFileDropError] = useState(null);\n\n  const onDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy'; // to avoid occasional drop issues on Chrome pre-100\n    setDragOver(true);\n  };\n\n  const onDragLeave = e => {\n    setDragOver(false);\n  };\n\n  return {\n    dragOver,\n    setDragOver,\n    onDragOver,\n    onDragLeave,\n    fileDropError,\n    setFileDropError,\n  };\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"./Toast\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton } from \"./TabsComponents\";\nimport { ServiceContext } from \"../providers/ServiceProvider\";\nimport JobService from \"../services/JobService\";\n\nfunction Tab05Check(props) { // TODO: we need file here...\n  const { t } = useTranslation();\n  const { service, setService } = useContext(ServiceContext);\n  const [ statusLocal, setStatusLocal ] = useState({});\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(false);\n  \n  useEffect(() => {\nconsole.log(\"Tab05Check 1 props, service:\", props, service);\n    if (props.active) {\nconsole.log(\"Tab05Check 1 props active\");\n      if (service.file && !service.transform) {\nconsole.log(\"Tab05Check 1 file && !transform: calling transform\");\n        (async () => {\n          setStatusLocal({loading: true});\n          await JobService.transformXls2Xml(service.file.path).then(\n            async response => {\nconsole.log(\"transform response:\", response);\n              if (!response) { // TODO: response.ok ? ...\n                //console.warn(\"transformXls2Xml error:\", JSON.stringify(data));\n                // TODO: ok?\n                toast.error(errorMessage(response.message));\n                setStatusLocal({error: response.message});\n                return;\n              }\nconsole.log(\"transform success:\", response.data);\n              setService({...service, transform: response.data.result});\n              setStatusLocal({success: response.data});\n              //setNextIsEnabled(true);\n            },\n            error => {\n              console.error('transformXls2Xml error:', error);\n              setService({...service, transform: error}); // to stop repeated calls...\n              toast.error(errorMessage(error));\n            }\n          );\n        })();\n      }\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props, service/*, setService*/]);\n\n  useEffect(() => {\nconsole.log(\"Tab05Check 2 props, service:\", props, service);\n    if (props.active) {\nconsole.log(\"Tab05Check 2 props active\");\n      if (service.file && service.transform && !service.validateXml) {\nconsole.log(\"Tab05Check 2 file && transform !validate: calling validate\");\n        (async () => {\n          setStatusLocal({loading: true});\n          await JobService.validateXml(service.transform).then(\n            response => {\nconsole.log(\"validate response:\", response);\n              if (!response) { // TODO: response.ok ? ...\n                //console.warn(\"transformXls2Xml error:\", JSON.stringify(data));\n                // TODO: ok?\nsetService({...service, validateXml: \"no response\"});\n                toast.error(errorMessage(response.message));\n                setStatusLocal({error: response.message});\n                return;\n              }\nconsole.log(\"validate success:\", response.data);\n              setService({...service, validateXml: response.data.result});\n              setStatusLocal({success: response.data});\n              setNextIsEnabled(true);\n            },\n            error => {\n              setService({...service, validateXml: error}); // to stop repeated calls...\n              // console.error('validateXml errors:', error, error.message, error.status, Object.keys(error), Object.values(error));\n              // console.error('validateXml error:', error);\n              // console.error('validateXml error.message:', error.message);\n              // console.error('validateXml error.request:', error.request);\n              // console.error('validateXml error.request.status:', error.request.status);\n              // console.error('validateXml error.request.statusText:', error.request.statusText);\n              // console.error('validateXml error keys:', Object.keys(error));\n              // console.error('validateXml error values:', Object.values(error));\n              toast.error(errorMessage(error));\n            }\n          );\n        })();\n      }\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props, service/*, setService*/]);\n\n  //             await JobService.validateXml(service.transform).then(\n  //               response => {\n  //   console.log(\"validateXml XXX:\", response);\n  //                 if (!response) { // TODO: response.ok ? ...\n  //                   //console.warn(\"transformXls2Xml error:\", JSON.stringify(data));\n  //                   // TODO: ok?\n  //                   toast.error(errorMessage(response.message));\n  //                   setStatusLocal({error: response.message});\n  //                   return;\n  //                 }\n  //                 console.log(\"validateXml success:\", response.data);\n  //                 setService({...service, validateXml: response.data.result});\n  //                 setStatusLocal({success: response.data});\n  //                 setNextIsEnabled(true);\n  //               },\n  //               error => {\n  //   setService({...service, validateXml: error}); // TO AVOID LOOPS... (TODO: use better logic...)\n  //                 console.error('validateXml error:', error);\n  //                 toast.error(errorMessage(error));\n  //               }\n  //             );\n\n\n\n\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Check\")}\n        </TabTitle>\n        <TabParagraph>\n         {/* SL:  {JSON.stringify(status.service?.transform)} */}\n          {statusLocal && \"loading\" in statusLocal && `Elaborazione in corso...`}\n          {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n          {statusLocal && \"success\" in statusLocal && `Elaborazione completata`}\n        </TabParagraph>\n        {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n        {((statusLocal && \"success\" in statusLocal) || (statusLocal && \"error\" in statusLocal)) && (\n          <pre>\n            {\n              JSON.stringify(service, null, 2)\n            }\n          </pre>\n        )}\n      </TabBodyScrollable>\n\n      <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n        {`${t(\"Continue\")}`}\n      </TabNextButton>\n    </TabContainer>\n  );\n}\nTab05Check.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab05Check.defaultProps = {\n};\n\nexport default React.memo(Tab05Check);","import React, { useState, useEffect, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"./Toast\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton } from \"./TabsComponents\";\n//import { transformXls2Xml } from \"../libs/Fetch\";\nimport { ServiceContext } from \"../providers/ServiceProvider\";\nimport JobService from \"../services/JobService\";\n\nfunction Tab06Validation(props) { // TODO: we need file here...\n  const { t } = useTranslation();\n  //const { service, setService } = useContext(ServiceContext);\n  const { service, setService } = useContext(ServiceContext);\n  const [ statusLocal, setStatusLocal ] = useState({});\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(false);\n\n  useEffect(() => {\n    console.log(\"PROPS:\", props);\n    if (props.value === props.index) {\n      if (!service.outcome) {\n        (async () => {\n          setStatusLocal({loading: true});\n          await JobService.outcomeCheck().then(\n            response => {\n    console.log(\"outcomeCheck XXX:\", response);\n              if (!response) { // TODO: response.ok ? ...\n                toast.error(errorMessage(response.message));\n                setStatusLocal({error: response.message});\n                return;\n              }\n              console.log(\"outcomeCheck success:\", response.data);\n              // TODO: tell user, and enable CONTINUE button...\n              setService({...service, outcome: response.data.result});\n              setStatusLocal({success: response.data});\n              setNextIsEnabled(true);\n            },\n            error => { // TODO...\n              console.error('outcome check error:', error);\n              toast.error(errorMessage(error));\n            }\n          );\n        })();\n      }\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props/*, service, setService*/]);\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Attendi la validazione da parte dell'ANAC\")}\n        </TabTitle>\n        <TabParagraph>\n        </TabParagraph>\n        {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n        {statusLocal && \"success\" in statusLocal && (service.outcome.esitoUltimoTentativoAccessoUrl === \"successo\") && (\n          <pre>\n            <img src=\"images/success.ico\" width=\"64\" alt=\"success\"></img> {service.outcome.dataUltimoTentativoAccessoUrl}\n          </pre>\n        )}\n        {((statusLocal && \"success\" in statusLocal) || (statusLocal && \"error\" in statusLocal)) && (\n          <pre>\n            {\n              JSON.stringify(service, null, 2)\n            }\n          </pre>\n        )}\n      </TabBodyScrollable>\n\n      <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n        {`${t(\"Continue\")}`}\n      </TabNextButton>\n    </TabContainer>\n  );\n}\nTab06Validation.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab06Validation.defaultProps = {\n};\n\nexport default React.memo(Tab06Validation);","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\n//import Button from \"@material-ui/core/Button\";\n// import { toast } from \"./Toast\";\n// import { errorMessage } from \"../libs/Misc\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph } from \"./TabsComponents\";\n//import { transformXls2Xml } from \"../libs/Fetch\";\n//import { ServiceContext } from \"../providers/ServiceProvider\";\n// import JobService from \"../services/JobService\";\n\nfunction Tab07Finished(props) { // TODO: we need file here...\n  const { t } = useTranslation();\n  //const { service, setService } = useContext(ServiceContext);\n  const [ statusLocal, setStatusLocal ] = useState({});\n  //const [ nextIsEnabled, setNextIsEnabled ] = useState(false);\n\n  useEffect(() => {\n    console.log(\"PROPS:\", props);\n    if (props.value === props.index) {\n      (async () => {\n        setStatusLocal({loading: true});\n      })();\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props/*, service, setService*/]);\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Finished! 🏁\")}\n        </TabTitle>\n        <TabParagraph>\n        </TabParagraph>\n        {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n      </TabBodyScrollable>\n    </TabContainer>\n  );\n}\nTab07Finished.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab07Finished.defaultProps = {\n};\n\nexport default React.memo(Tab07Finished);","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n//import { StatusContext } from \"../providers/StatusProvider\";\nimport Tab01Start from \"./Tab01Start\";\nimport Tab02Download from \"./Tab02Download\";\nimport Tab03FillData from \"./Tab03FillData\";\nimport Tab04Upload from \"./Tab04Upload\";\nimport Tab05Check from \"./Tab05Check\";\nimport Tab06Validation from \"./Tab06Validation\";\nimport Tab07Finished from \"./Tab07Finished\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>\n        {children}\n      </Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nconst a11yProps = (index) => {\n  return {\n    id: `nav-tab-${index}`,\n    \"aria-controls\": `nav-tabpanel-${index}`\n  };\n}\n\n// const LinkTab = (props) => {\n//   return (\n//     <Tab\n//       component=\"a\"\n//       onClick={(event) => {\n//         event.preventDefault();\n//       }}\n//       {...props}\n//     />\n//   );\n// };\n\n// const AntTab = withStyles((theme) => ({\n//   root: {\n//     opacity: 0.3  ,\n//     textTransform: 'none',\n//     minWidth: 72,\n//     fontWeight: theme.typography.fontWeightRegular,\n//     marginRight: theme.spacing(4),\n//     fontFamily: [\n//       '-apple-system',\n//       'BlinkMacSystemFont',\n//       '\"Segoe UI\"',\n//       'Roboto',\n//       '\"Helvetica Neue\"',\n//       'Arial',\n//       'sans-serif',\n//       '\"Apple Color Emoji\"',\n//       '\"Segoe UI Emoji\"',\n//       '\"Segoe UI Symbol\"',\n//     ].join(','),\n//     '&:hover': {\n//       color: '#40a9ff',\n//       opacity: 1,\n//     },\n//     '&$selected': {\n//       color: '#1890ff',\n//       fontWeight: theme.typography.fontWeightMedium,\n//     },\n//     '&:focus': {\n//       color: '#40a9ff',\n//     },\n//   },\n//   selected: {},\n// }))((props) => <Tab {...props} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    opacity: 0.8, //0.8,\n    //textTransform: 'none',\n    //color: '#444',\n    //fontWeight: theme.typography.fontWeightRegular,\n    //fontSize: theme.typography.pxToRem(15),\n    //marginRight: theme.spacing(1),\n    // '&:focus': {\n    //   opacity: 1,\n    // },\n    // backgroundColor: \"blue\",\n    // \n    // \"&$selected\": {\n    //   color: \"red\",\n    // }\n  },\n}))((props) => {\n  return (\n    <Tab {...props} />\n  );\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    //width: \"100%\",\n    //backgroundColor: theme.palette.background.paper,\n  },\n  // tabs: {\n  //   \"& .MuiTabs-indicator\": {\n  //     //display: \"none\",\n  //     backgroundColor: \"orange\",\n  //   }\n  // }\n}));\n\nconst TabsPanel = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  //const { status, setStatus } = useContext(StatusContext);\n  const [tabId, setTabId] = useState(0);\n\n  function handleChangeTab(event, id) {\n    console.log(\"handleChangeTab id:\", id);\n    setTabId(id); // comment to disable the possibility to change tab by clicking on app bar titles\n  }\n  \n  function goto(where) {\n    let id = where;\n    if (typeof where === \"string\") {\n      switch (where.toLowerCase()) {\n        case \"start\":\n          break;\n        case \"download\":\n          break;\n        case \"fill your data\":\n          break;\n        case \"upload\":\n          break;\n        case \"check\":\n          break;\n        case \"wait for validation\":\n          break;\n        case \"finish!\":\n          break;\n        case \"next\":\n          id = tabId + 1; // TODO: handle ring\n          break;\n        case \"prev\":\n          id = tabId - 1; // TODO: handle ring\n          break;\n        default:\n          console.error(`Unforeseen where specification in goto: ${where}`);\n          return;\n      }\n    }\n    setTabId(id);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" elevation={0} style={{/*backgroundColor: \"transparent\",*/ top: 50}}>\n        {/* <Tabs\n          value={tabId}\n          onChange={handleChangeTab}\n          indicatorColor=\"primary\"\n          // textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs\"\n          className={classes.tabs}\n        > */}\n        <Paper elevation={0} square>\n          <Tabs\n            value={tabId}\n            //indicatorColor=\"secondary\"\n            //textColor=\"secondary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            onChange={handleChangeTab}\n            aria-label=\"current section\"\n          >\n            <StyledTab label={`${t(\"Start\")} 🪄`} {...a11yProps(0)} />\n            <StyledTab label={`${t(\"Download\")} ⬇`} {...a11yProps(1)} />\n            <StyledTab label={`${t(\"Fill your data\")} 🖋`} {...a11yProps(2)} />\n            <StyledTab label={`${t(\"Upload\")} ⬆`} {...a11yProps(3)} />\n            <StyledTab label={`${t(\"Check\")} ✔`} {...a11yProps(4)} />\n            <StyledTab label={`${t(\"Wait for validation\")} 🎯`} {...a11yProps(5)} />\n            <StyledTab label={`${t(\"Finish!\")} 🏁`} {...a11yProps(6)} />\n          </Tabs>\n        </Paper>\n      </AppBar>\n\n      <TabPanel value={tabId} index={0}>\n        <Tab01Start active={tabId === 0} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={tabId} index={1}>\n        <Tab02Download active={tabId === 1} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={tabId} index={2}>\n        <Tab03FillData active={tabId === 2} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={tabId} index={3}>\n        <Tab04Upload active={tabId === 3} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={tabId} index={4}>\n        <Tab05Check active={tabId === 4} _value={tabId} _index={4} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={tabId} index={5}>\n        <Tab06Validation active={tabId === 5} value={tabId} index={5} goto={(where) => goto(where)} />\n      </TabPanel>\n      <TabPanel value={tabId} index={6}>\n        <Tab07Finished active={tabId === 6} value={tabId} index={6} goto={(where) => goto(where)} />\n      </TabPanel>\n    </div>\n  );\n}\n\nexport { TabsPanel };","import React from \"react\";\n// import { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n// import { useTranslation } from \"react-i18next\";\n// import { AuthContext } from \"../providers/AuthProvider\";\nimport { TabsPanel } from \"./TabsPanel\";\n\nconst useStyles = makeStyles(theme => ({\n\thome: {\n    fontSize: \"1.5em\",\n\t},\n}));\n\nfunction Home() {\n\tconst classes = useStyles();\n  // const { auth } = useContext(AuthContext);\n  // const { t } = useTranslation();\n\n  return (\n    <div className={classes.home}>\n      {/* {(typeof auth.user !== \"undefined\") && // if auth.user is undefined, we don't know yet about user authentication...\n        `${t(\"Home\")} ${t(\"for\")} ${auth.user ? t(\"authenticated user\") : t(\"guest user\")} ${auth.user ? auth.user.email : \"\"}`\n      } */}\n      <TabsPanel />\n    </div>\n  );\n}\n\nexport default React.memo(Home);"],"names":["useStyles","makeStyles","theme","paragraph","fontSize","paragraphSmall","centered","display","justifyContent","alignItems","justified","textAlign","box","boxRight","sup","scrollableContainer","flexDirection","marginTop","minHeight","scrollable","height","overflowY","paddingLeft","paddingRight","TabContainer","React","props","children","defaultProps","TabBodyScrollable","classes","size","useState","width","window","innerWidth","innerHeight","windowSize","setWindowSize","useEffect","handleResize","console","log","addEventListener","removeEventListener","useWindowSize","className","style","Math","max","TabTitle","TabParagraph","Box","mb","Typography","component","small","class","TabNextButton","m","Button","variant","color","onClick","onNext","disabled","nextIsEnabled","TabTooltip","Tooltip","title","placement","anchor","Tab01Start","t","useTranslation","href","target","goto","Tab02Download","setNextIsEnabled","link","document","createElement","download","config","click","xul","padding","Tab03FillData","ul","upload","file","formData","FormData","append","api","headers","transformXls2Xml","filePath","validateXml","transform","outcomeCheck","outcomeFailureDetails","anno","codiceFiscaleAmministrazione","fileDropLabel","border","cursor","backgroundColor","fileDropError","fontStyle","fontWeight","Tab04Upload","useContext","ServiceContext","service","setService","setFile","dragOver","setDragOver","setFileDropError","onDragOver","e","preventDefault","dataTransfer","dropEffect","onDragLeave","useDragAndDrop","fileSelect","selectedFile","error","fileValidate","type","split","match","fileType","fileUpload","JobService","then","response","data","htmlFor","onDrop","files","name","id","onChange","getElementById","value","Tab05Check","statusLocal","setStatusLocal","active","loading","path","toast","errorMessage","message","result","success","JSON","stringify","Tab06Validation","index","outcome","esitoUltimoTentativoAccessoUrl","src","alt","dataUltimoTentativoAccessoUrl","Tab07Finished","TabPanel","other","role","hidden","p","a11yProps","StyledTab","withStyles","root","opacity","Tab","flexGrow","TabsPanel","tabId","setTabId","where","toLowerCase","AppBar","position","elevation","top","Paper","square","Tabs","scrollButtons","event","label","_value","_index","home","Home"],"sourceRoot":""}