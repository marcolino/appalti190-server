{"version":3,"sources":["components/FlexibleDialog.js","services/JobService.js","components/TabsComponents.js","hooks/useWindowSize.js","components/Tab01Start.js","components/Tab02DownloadTemplate.js","components/Tab03FillData.js","components/DragNDrop.js","components/Tab04Upload.js","components/Tab05Check.js","components/Tab06DownloadDataset.js","components/Tab07Publish.js","components/Tab08Validation.js","components/Tab09Finished.js","components/TabsPanel.js","components/Home.js"],"names":["FlexibleDialog","title","contentText","actions","props","onBackdropClick","onClose","event","reason","map","action","index","onClick","callback","closeModal","variant","autoFocus","style","textTransform","text","defaultProps","React","memo","get","a","TokenService","getUser","api","JobService","set","job","put","upload","file","formData","FormData","append","post","headers","transformXls2Xml","filePath","validateXml","transform","outcomeCheck","anno","codiceFiscaleAmministrazione","outcomeFailureDetails","urlExistenceCheck","url","sanitizeJob","xml","j","getPlans","useStyles","makeStyles","theme","paragraph","fontSize","paragraphSmall","centered","display","justifyContent","alignItems","justified","textAlign","box","boxLeft","boxRight","sup","scrollableContainer","flexDirection","marginTop","minHeight","scrollable","height","overflowY","paddingLeft","paddingRight","TabContainer","children","TabBodyScrollable","classes","size","useState","width","window","innerWidth","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","className","Math","max","TabTitle","TabParagraph","Box","mb","Typography","component","small","class","TabPrevButton","m","Button","color","onPrev","disabled","prevIsEnabled","TabNextButton","onNext","nextIsEnabled","TabTooltip","Tooltip","placement","anchor","Tab01Start","t","useTranslation","href","target","goto","Tab02DownloadTemplate","history","useHistory","download","setNextIsEnabled","showModal","useModal","userIsAuthenticated","AuthService","getCurrentUser","openDialog","tabId","push","downloadLocalUrl","config","data","templateDownloadUrl","setJob","Grid","container","item","xs","ul","padding","Tab03FillData","baseStyle","flex","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","focusedStyle","acceptStyle","rejectStyle","DragNDrop","onDrop","accept","useDropzone","getRootProps","getInputProps","isFocused","isDragAccept","isDragReject","isDragActive","useMemo","Tab04Upload","fileSet","useCallback","fileReset","fileValidate","type","split","match","fileType","fileUpload","then","result","console","log","error","errorMessage","toast","fileSelect","selectedFile","acceptedFiles","originalname","Tab05Check","user","statusLocal","setStatusLocal","planUpgradeDeclined","code","planName","plan","name","cigCount","planRequired","tabValue","cigNumberAllowed","loading","path","Error","success","response","JSON","stringify","Tab07DownloadDataset","downloadDataset","outputUrl","downloadRemoteUrl","Tab07Publish","forceVerifyPublished","setForceVerifyPublished","publishUrlFile","datasetIsPublished","outcome","message","datasetStatusContents","undefined","Tab08Validation","esitoUltimoTentativoAccessoUrl","metadati","annoRiferimento","header","codiceFiscaleStrutturaProponente","dataUltimoTentativoAccessoUrl","Tab09Finished","TabPanel","value","other","role","hidden","id","p","a11yProps","StyledTab","withStyles","root","opacity","Tab","flexGrow","tab","palette","secondary","light","tabIndicator","TabsPanel","getJob","changeTab","where","toLowerCase","redirect","remove","AppBar","elevation","position","top","Paper","square","Tabs","scrollButtons","onChange","ui","userCanForceTabChange","indicator","label","Tab06DownloadDataset","home","Home"],"mappings":"qQAKMA,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,QAAYC,EAAnC,wBACrB,eAAC,IAAD,2BACMA,GADN,IAEEC,gBAAiB,aAGjB,kBAAiBJ,EACjBK,QAAS,SAACC,EAAOC,KANnB,UAQE,cAAC,IAAD,UAAcP,IACd,cAAC,IAAD,UACE,cAAC,IAAD,UAAoBC,MAEtB,cAAC,IAAD,UACGC,EAAQM,KAAI,SAACC,EAAQC,GAAT,OACX,cAAC,IAAD,CAEEC,QAAS,WACHF,EAAOG,UAAUH,EAAOG,WACxBH,EAAOI,YAAYV,EAAME,WAE/BS,QAA4B,YAAnBL,EAAOK,QAAwB,YAAiC,cAAnBL,EAAOK,QAA0B,WAAa,YACpGC,UAAWZ,EACXa,MAAO,CAACC,cAAe,QARzB,SAUGR,EAAOS,MATHR,aAgCfX,EAAeoB,aAAe,CAC5BnB,MAAO,GACPC,YAAa,GACbC,QAAS,CACP,CACEgB,KAAM,KACNL,YAAY,EACZD,SAAU,aACVE,QAAS,UACTC,WAAW,KAKFK,QAAMC,KAAKtB,I,+EC/DpBuB,EAAG,uCAAG,sBAAAC,EAAA,yDAWGC,IAAaC,UAXhB,yCAaD,MAbC,uBAeGC,IAAIJ,IAAI,YAfX,mFAAH,qDAsGHK,EAAa,CACjBL,MACAM,IArFU,SAACC,GAEX,OADaL,IAAaC,UAKnBC,IAAII,IAAI,WAAY,CAACD,QAHnB,MAmFTE,OA5Ea,SAACC,GACd,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,OAAQH,GAEjBN,IAAIU,KAAK,cAAeH,EAAU,CACvCI,QAAS,CACP,eAAgB,0BAuEpBC,iBAjEuB,SAACC,GACxB,OAAOb,IAAIU,KAAK,kCAAmC,CACjDG,cAgEFC,YA3DkB,SAACC,GACnB,OAAOf,IAAIU,KAAK,8BAA+B,CAC7CK,eA0DFC,aAhDmB,SAACC,EAAMC,GAC1B,OAAOlB,IAAIU,KAAK,wDACd,CACEO,OACAC,kCA6CJC,sBAvC4B,SAACF,EAAMC,GACnC,OAAOlB,IAAIU,KACT,+DACA,CACEO,OACAC,kCAmCJE,kBA7BwB,SAACC,GACzB,OAAOrB,IAAIU,KAAK,6BAA8BW,IA6B9CC,YAzBkB,SAACnB,GAAS,IAAD,EAC3B,GAAI,OAACA,QAAD,IAACA,GAAD,UAACA,EAAKY,iBAAN,QAAC,EAAgBQ,IACnB,OAAOpB,EAET,IAAIqB,EAAIrB,EAER,OADAqB,EAAET,UAAUQ,IAAM,SACXC,GAoBPC,SAhBe,WACf,OAAOzB,IAAIJ,IACT,mBAiBWK,O,oNClGTyB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCC,UAAW,CACRC,SAAU,SAEbC,eAAgB,CACbD,SAAU,SAEZE,SAAU,CACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdC,UAAW,CACTC,UAAW,WAEbC,IAAK,CACHL,QAAS,QAEXM,QAAS,CACPL,eAAgB,cAElBM,SAAU,CACRN,eAAgB,YAElBO,IAAK,CACHX,SAAU,SAEZY,oBAAqB,CACnBT,QAAS,OACTU,cAAe,SACfC,UAAW,MACXC,UAAW,OAGbC,WAAY,CACVC,OAAQ,OACRC,UAAW,OACXC,YAAa,GACbC,aAAc,GACdL,UAAW,WAuBTM,EAAezD,IAAMC,MAAK,SAAAlB,GAE9B,OACE,8BACGA,EAAM2E,cAMbD,EAAa1D,aAAe,GAG5B,IAAM4D,EAAoB3D,IAAMC,MAAK,SAAAlB,GACnC,IAAM6E,EAAU5B,IAWV6B,EC1GO,WACb,MAAoCC,mBAAS,CAC3CC,MAAOC,OAAOC,WACdZ,OAAQW,OAAOE,cAFjB,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAZAC,qBAAU,WACR,SAASC,IACPF,EAAc,CACZL,MAAOC,OAAOC,WACdZ,OAAQW,OAAOE,cAMnB,OAFAF,OAAOO,iBAAiB,SAAUD,GAClCA,IACO,kBAAMN,OAAOQ,oBAAoB,SAAUF,MACjD,IACIH,EDyFMM,GAEb,OACE,qBAAKC,UAAWd,EAAQZ,oBAAxB,SACE,qBAAK0B,UAAWd,EAAQR,WAAYxD,MAAO,CAACyD,OAAQsB,KAAKC,IAAI,IAAKf,EAAKR,OAPrD,GACD,IACA,KAKjB,SACGtE,EAAM2E,gBAOfC,EAAkB5D,aAAe,GAGjC,IAAM8E,EAAW7E,IAAMC,MAAK,SAAAlB,GAC1B,IAAM6E,EAAU5B,IAChB,OACE,qBAAK0C,UAAWd,EAAQtB,SAAxB,SACE,6BAAKvD,EAAM2E,gBAMjBmB,EAAS9E,aAAe,GAGxB,IAAM+E,EAAe9E,IAAMC,MAAK,SAAAlB,GAC9B,IAAM6E,EAAU5B,IAChB,OACE,cAAC+C,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CAAYC,UAAU,MAAMR,UAAS,UAAKd,EAAQzB,UAAb,YAA0ByB,EAAQlB,UAAlC,YAA+C3D,EAAMoG,MAAQvB,EAAQvB,eAAiB,KAAtF,YAA8FtD,EAAMqG,OAAzI,SACGrG,EAAM2E,gBAQfoB,EAAa/E,aAAe,CAC1BqF,MAAO,MAGT,IAAMC,EAAgBrF,IAAMC,MAAK,SAAAlB,GAC/B,IAAM6E,EAAU5B,IAChB,OACE,cAAC+C,EAAA,EAAD,CACEG,UAAU,OACVI,EAAG,EACHZ,UAAS,UAAKd,EAAQhB,IAAb,YAAoBgB,EAAQf,SAHvC,SAKE,cAAC0C,EAAA,EAAD,CACE7F,QAAQ,YACR8F,MAAM,YACNjG,QAASR,EAAM0G,OACfC,UAAW3G,EAAM4G,cAJnB,SAMG5G,EAAM2E,gBASf2B,EAActF,aAAe,GAG7B,IAAM6F,EAAgB5F,IAAMC,MAAK,SAAAlB,GAC/B,IAAM6E,EAAU5B,IAChB,OACE,cAAC+C,EAAA,EAAD,CACEG,UAAU,OACVI,EAAG,EACHZ,UAAS,UAAKd,EAAQhB,IAAb,YAAoBgB,EAAQd,UAHvC,SAKE,cAACyC,EAAA,EAAD,CACE7F,QAAQ,YACR8F,MAAM,YAONjG,QAASR,EAAM8G,OACfH,UAAW3G,EAAM+G,cAVnB,SAYG/G,EAAM2E,gBASfkC,EAAc7F,aAAe,GAG7B,IAAMgG,EAAa/F,IAAMC,MAAK,SAAAlB,GAC5B,IAAM6E,EAAU5B,IAChB,OACE,cAACgE,EAAA,EAAD,CACEpH,MAAOG,EAAMH,MACbqH,UAAU,MAFZ,SAIE,qBAAKvB,UAAWd,EAAQb,IAAxB,SAA8BhE,EAAMmH,cErN1C,SAASC,EAAWpH,GAClB,IAAQqH,EAAMC,cAAND,EACR,EAA0BtC,oBAAS,GAA3BgC,EAAR,oBAMA,OACE,eAACrC,EAAD,WACE,eAACE,EAAD,WACE,cAACkB,EAAD,UACGuB,EAAE,cAEL,eAACtB,EAAD,6EAC+D,IAC7D,mBAAGwB,KAAK,+EAA+EC,OAAO,WAA9F,uBAFF,oDAOA,cAACzB,EAAD,4HAIA,eAACA,EAAD,4DAEE,cAACiB,EAAD,CACEnH,MAAO,sFAHX,4GAQA,cAACkG,EAAD,8HAIA,cAACA,EAAD,wJAIA,cAACA,EAAD,+NAKA,cAACA,EAAD,6IAIA,cAACA,EAAD,4KAKA,cAACA,EAAD,qSAQF,8BACE,cAACc,EAAD,CAAeC,OA5DN,WACb9G,EAAMyH,KAAK,SA2DwBV,cAAeA,EAA9C,SACGM,EAAE,gBF4JbL,EAAWhG,aAAe,CACxBmG,OAAQ,KEpJVC,EAAWpG,aAAe,GAGXC,UAAMC,KAAKkG,G,oEClE1B,SAASM,EAAsB1H,GAC7B,IAAQqH,EAAMC,cAAND,EACFM,EAAUC,cAChB,EAA2B7C,oBAAS,GAA5B6B,EAAR,oBACA,EAA4C7B,oBAAS,2BAAM,UAAA/E,EAAM0B,WAAN,UAAWmG,YAAX,UAAsB7H,EAAM0B,WAA5B,aAAsB,EAAWmG,aAA5F,mBAAQd,EAAR,KAAuBe,EAAvB,KACQC,EAAcC,cAAdD,UAWFE,EAAsB,WAC1B,QAAKC,IAAYC,mBAXA,SAACnI,GAAU+H,EAAUnI,IAAgBI,GAYpDoI,CAAW,CACTvI,MAAOwH,EAAE,6BACTvH,YAAauH,EAAE,2CACftH,QAAS,CACP,CACEgB,KAAMsG,EAAE,SACR3G,YAAY,EACZE,WAAW,EACXH,SAAU,WACRY,IAAaI,IAAI,WAAYzB,EAAMqI,OACnCV,EAAQW,KAAK,aAGjB,CACEvH,KAAMsG,EAAE,YACR3G,YAAY,EACZD,SAAU,WACRY,IAAaI,IAAI,WAAYzB,EAAMqI,OACnCV,EAAQW,KAAK,aAGjB,CACEvH,KAAMsG,EAAE,UACR3G,YAAY,EACZD,SAAU,kBAAMT,EAAMyH,KAAK,cAI1B,IAaX,OACE,eAAC/C,EAAD,WACE,eAACE,EAAD,WACE,cAACkB,EAAD,UACGuB,EAAE,cAEL,cAACtB,EAAD,kGAGA,cAACA,EAAD,UACE,eAACS,EAAA,EAAD,CAAQhG,QAlBG,WACbyH,MACFM,YAAiBC,IAAOC,KAAKC,qBAC7BZ,GAAiB,GACjB9H,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BmG,UAAU,OAcLlH,QAAQ,YAAY8F,MAAM,WAAvD,UACGY,EAAE,YADL,kBAYJ,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACzC,EAAD,CAAeI,OA3ER,WACb1G,EAAMyH,KAAK,SA0E0Bb,cAAeA,EAA9C,SACGS,EAAE,YAGP,cAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAClC,EAAD,CAAeC,OA5ER,WACb9G,EAAMyH,KAAK,SA2E0BV,cAAeA,EAA9C,SACGM,EAAE,sBAWfK,EAAsB1G,aAAe,GAGtBC,UAAMC,KAAKwG,GChHpBzE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC6F,GAAI,CACFC,QAAS,QAIb,SAASC,EAAclJ,GACrB,IAAM6E,EAAU5B,IAERoE,EAAMC,cAAND,EACR,EAA0BtC,oBAAS,GAA3B6B,EAAR,oBACA,EAA0B7B,oBAAS,GAA3BgC,EAAR,oBAUA,OACE,eAACrC,EAAD,WACE,eAACE,EAAD,WACE,cAACkB,EAAD,UACGuB,EAAE,oBAEL,cAACtB,EAAD,wGAGA,eAACA,EAAD,iEAEE,uBAFF,oGAIE,qBAAIJ,UAAWd,EAAQmE,GAAvB,UACE,+BAAI,iEAAJ,4CACA,+BAAI,iEAAJ,6CACA,+BAAI,gDAAJ,0DACA,+BAAI,wCAAJ,wEAGJ,cAACjD,EAAD,oIAIA,eAACA,EAAD,wCAEE,qBAAIJ,UAAWd,EAAQmE,GAAvB,UACE,+BAAI,oCAAJ,oCADF,0DAOJ,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACzC,EAAD,CAAeI,OA3CR,WACb1G,EAAMyH,KAAK,SA0C0Bb,cAAeA,EAA9C,SACGS,EAAE,YAGP,cAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAClC,EAAD,CAAeC,OA5CR,WACb9G,EAAMyH,KAAK,SA2C0BV,cAAeA,EAA9C,SACGM,EAAE,sBAWf6B,EAAclI,aAAe,GAGdC,UAAMC,KAAKgI,G,2CC/EpBC,EAAY,CAChBC,KAAM,EACN5F,QAAS,OACTU,cAAe,SACfR,WAAY,SACZuF,QAAS,OACTI,YAAa,EACbC,aAAc,EACdC,YAAa,OACbC,YAAa,SACbC,gBAAiB,UACjBhD,MAAO,UACPiD,QAAS,OACTC,WAAY,2BAGRC,EAAe,CACnBH,gBAAiB,cACjBF,YAAa,UAGTM,EAAc,CAClBJ,gBAAiB,aACjBF,YAAa,aAGTO,EAAc,CAClBL,gBAAiB,WACjBF,YAAa,WA8CAQ,GA3CG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACnB5C,EAAMC,cAAND,EACR,EAOI6C,YAAY,CACdF,SACAC,WARAE,EADF,EACEA,aACAC,EAFF,EAEEA,cACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,aACAC,EANF,EAMEA,aAMI3J,EAAQ4J,mBAAQ,8BAAC,uCAClBtB,GACCkB,EAAYT,EAAe,IAC3BU,EAAeT,EAAc,IAC7BU,EAAeT,EAAc,MAC/B,CACFO,EACAC,EACAC,IAGF,OACE,8CAAK5E,UAAU,gBAAmBwE,EAAa,CAACtJ,WAAhD,cACE,mCAAO8E,UAAU,kBAAqByE,MACtC,qBAAKzE,UAAU,cAAf,SACG6E,EACC,mBAAG7E,UAAU,mBAAb,SACG0B,EAAE,oCAGL,mBAAG1B,UAAU,mBAAb,SACG0B,EAAE,mECpDf,SAASqD,GAAY1K,GAAQ,IAAD,cAElBqH,EAAMC,cAAND,EACFM,EAAUC,cAChB,EAA0B7C,oBAAS,GAA3B6B,EAAR,oBACA,EAA4C7B,qBAAU,OAAC/E,QAAD,IAACA,GAAD,UAACA,EAAO0B,WAAR,QAAC,EAAYG,OAAnE,mBAAQkF,EAAR,KAAuBe,EAAvB,KACQC,EAAcC,cAAdD,UAGR,EAAmBhD,mBAAS,CAC1B,OACA,oEACA,6BAHMkF,EAAR,oBAMA3E,qBAAU,WAGR,QADa4C,IAAYC,mBAVR,SAACnI,GAAU+H,EAAUnI,IAAgBI,GAYpDoI,CAAW,CACTvI,MAAOwH,EAAE,6BACTvH,YAAauH,EAAE,2CACftH,QAAS,CACP,CACEgB,KAAMsG,EAAE,SACR3G,YAAY,EACZE,WAAW,EACXH,SAAU,WACRY,IAAaI,IAAI,WAAYzB,EAAMqI,OACnCV,EAAQW,KAAK,aAGjB,CACEvH,KAAMsG,EAAE,YACR3G,YAAY,EACZD,SAAU,WACRY,IAAaI,IAAI,WAAYzB,EAAMqI,OACnCV,EAAQW,KAAK,aAGjB,CACEvH,KAAMsG,EAAE,UACR3G,YAAY,EACZD,SAAU,kBAAMT,EAAMyH,KAAK,cAI1B,KAIR,CAACzH,IAEJ,IAAM2K,EAAUC,sBAAW,uCAAC,WAAM/I,GAAN,SAAAT,EAAA,sDAC1BpB,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BG,UADF,2CAAD,sDAExB,CAAC7B,IAEE6K,EAAYD,sBAAW,sBAAC,4BAAAxJ,EAAA,uDAIxBM,EAAM,IACN2G,MAAQrI,EAAM0B,IAAI2G,MAEtBrI,EAAM2I,OAAOjH,GACboG,GAAiB,GARW,2CAS3B,CAAC9H,IAEE8K,EAAeF,uBAAY,SAAC/I,GAAU,IAAD,QAGzC,OACM,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMkJ,YAAN,mBAAYC,MAAM,KAAK,UAAvB,SAA2BC,MAAM,uCAAjC,OACApJ,QADA,IACAA,GADA,UACAA,EAAMkJ,YADN,iBACA,EAAYC,MAAM,KAAK,UADvB,OACA,EAA2BC,MAAM,YAM5B,KAJE5D,EAAE,+BAAF,KACA,OAAJxF,QAAI,IAAJA,KAAMkJ,KAAO,IAAM1D,EAAE,wCAAyC,CAAE6D,SAAUrJ,EAAKkJ,OAAU,MAI7F,CAAC1D,IAEE8D,EAAaP,sBAAW,uCAAC,WAAM/I,GAAN,SAAAT,EAAA,sEACvBI,IAAWI,OAAOC,GAAMuJ,MAC5B,SAAAC,GACEC,QAAQC,IAAI,4BAA6BF,EAAO5C,KAAK5G,MACrD8I,EAAQU,EAAO5C,KAAK5G,SAItB,SAAA2J,GACEF,QAAQE,MAAM,gBAAiBA,GAC/BX,IACA7K,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BG,KAAM,CAAC2J,MAAOC,YAAaD,OACvDE,IAAMF,MAAMC,YAAaD,OAZA,2CAAD,sDAgB3B,CAACxL,EAAO2K,EAASE,IAEdc,EAAaf,sBAAW,uCAAC,WAAMgB,GAAN,SAAAxK,EAAA,0DACzBwK,EADyB,qBAEbd,EAAac,GAFA,gBAKzB5L,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BG,KAAM,QAElCiG,GAAiB,GAPQ,8BAWzB9H,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BG,KAAM+J,KAXT,UAYnBT,EAAWS,GAZQ,QAazB9D,GAAiB,GAbQ,gCAgB3B4D,IAAMF,MAAMnE,EAAE,iDAGdrH,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BG,KAAM,QAClCiG,GAAiB,GApBU,4CAAD,sDAsB3B,CAAc9H,EAAOmL,EAAYL,EAAczD,IAG5C2C,EAASY,uBAAY,SAAAiB,GAGzBP,QAAQC,IAAI,kBAAmBM,GAC/BF,EAAWE,EAAc,MACxB,CAACF,IAME7E,EAAM,uCAAG,sBAAA1F,EAAA,sDACbpB,EAAMyH,KAAK,QADE,2CAAH,qDAIZ,OACE,eAAC/C,EAAD,WACE,eAACE,EAAD,WACE,cAACkB,EAAD,UACGuB,EAAE,YAEL,cAACtB,EAAD,gDAIA,sBAAKJ,UAAU,YAAf,UACE,cAAC,GAAD,CACEqE,OAAQA,EACRC,OAAQA,IAEV,uBACA,eAAClE,EAAD,YACQ,OAAL/F,QAAK,IAALA,GAAA,UAAAA,EAAO0B,WAAP,mBAAYG,YAAZ,eAAkBiK,eAAgBzE,EAAE,iBAAF,mBAA0BrH,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAO0B,WAAjC,iBAA0B,EAAYG,YAAtC,aAA0B,EAAkBiK,cAC/E,wBACM,OAAL9L,QAAK,IAALA,GAAA,UAAAA,EAAO0B,WAAP,mBAAYG,YAAZ,eAAkBiK,eAAgB,cAACtF,EAAA,EAAD,CACjC7F,QAAQ,YACRmE,KAAK,QACLtE,QAASqK,EACThL,MAAOwH,EAAE,eAJwB,qCAUzC,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACzC,EAAD,CAAeI,OAvCR,WACb1G,EAAMyH,KAAK,SAsC0Bb,cAAeA,EAA9C,SACGS,EAAE,YAGP,cAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAClC,EAAD,CAAeC,OAAQA,EAAQC,cAAeA,EAA9C,SACGM,EAAE,sBAYfqD,GAAY1J,aAAe,GAGZC,WAAMC,KAAKwJ,ICnM1B,SAASqB,GAAW/L,GAAQ,IAAD,MACjBqH,EAAMC,cAAND,EACFM,EAAUC,cACVoE,EAAO3K,IAAaC,UAC1B,EAAwCyD,mBAAS,IAAjD,mBAAQkH,EAAR,KAAqBC,EAArB,KACA,EAA4CnH,qBAAU,OAAC/E,QAAD,IAACA,GAAD,UAACA,EAAO0B,WAAR,iBAAC,EAAYY,iBAAb,QAAC,EAAuB6J,sBAA9E,mBAAQpF,EAAR,KAAuBe,EAAvB,KACA,EAAyB/C,oBAAS,GAA1B6B,EAAR,oBACQmB,EAAcC,cAAdD,UAGRzC,qBAAU,WAAO,IAAD,EAEY,IAC0C,IAChB,eAHxDgG,QAAQC,IAAI,eACR,UAAIvL,EAAM0B,WAAV,OAAI,EAAWY,WACsB,iCAA/B,UAAAtC,EAAM0B,WAAN,mBAAWY,iBAAX,eAAsB8J,QACpB,UAACpM,EAAM0B,WAAP,iBAAC,EAAWY,iBAAZ,OAAC,EAAsB6J,qBANd,SAACnM,GAAU+H,EAAUnI,IAAgBI,GAOhDoI,CAAW,CACTvI,MAAOwH,EAAE,4BACTvH,YACEuH,EAAE,6CAA+C,KACjDA,EAAE,uCAA0C,CAAEgF,SAAQ,OAAEL,QAAF,IAAEA,GAAF,UAAEA,EAAMM,YAAR,aAAE,EAAYC,OAAS,KAC7ElF,EAAE,uEAA0E,CAAEmF,SAAQ,UAAExM,EAAM0B,WAAR,iBAAE,EAAWY,iBAAb,aAAE,EAAsBkK,SAAUH,SAAQ,UAAErM,EAAM0B,WAAR,iBAAE,EAAWY,iBAAb,iBAAE,EAAsBmK,oBAAxB,aAAE,EAAoCF,OACxKxM,QAAS,CACP,CACEgB,KAAMsG,EAAE,gBACR3G,YAAY,EACZE,WAAW,EACXH,SAAU,WACRY,IAAaI,IAAI,WAAYzB,EAAMqI,OACnCV,EAAQW,KAAK,WAAY,CAAEoE,SAAU,MAGzC,CACE3L,KAAMsG,EAAE,mDAAoD,CAAEsF,iBAAgB,OAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAMM,YAAR,aAAE,EAAYK,mBAC5FjM,YAAY,EACZD,SAAU,WAAO,IAAD,EACdqH,GAAiB,GACjB9H,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BY,UAAU,2BAAD,QAAC,EAAKtC,EAAM0B,WAAZ,aAAM,EAAWY,WAAjB,IAA4B6J,qBAAqB,aAQlGrE,GAAiB,KAGlB,WAAC9H,EAAM0B,WAAP,aAAC,EAAWY,YAEfgD,qBAAU,WACZgG,QAAQC,IAAI,eACJvL,EAAM0B,IAAIG,OAAS7B,EAAM0B,IAAIY,WAC/B,sBAAC,sBAAAlB,EAAA,6DACC8K,EAAe,CAACU,SAAS,IAD1B,SAEOpL,IAAWW,iBAAiBnC,EAAM0B,IAAIG,KAAKgL,MAAMzB,MACrD,SAAAC,GACE,GAAIA,aAAkByB,MAGpB,OAFA9M,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BY,UAAW+I,KACvCK,IAAMF,MAAMC,YAAaJ,IAClBa,EAAe,CAAEV,MAAOC,YAAaJ,KAE9CrL,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BY,UAAW+I,EAAO5C,KAAK4C,UACnDa,EAAe,CAACa,QAAS1B,EAAO5C,UAVrC,0CAAD,KAiBD,IAEHnD,qBAAU,WACZgG,QAAQC,IAAI,eACJvL,EAAM0B,IAAIG,MAAQ7B,EAAM0B,IAAIY,YAActC,EAAM0B,IAAIW,aACtD,sBAAC,sBAAAjB,EAAA,6DACC8K,EAAe,CAACU,SAAS,IAD1B,SAEOpL,IAAWa,YAAYrC,EAAM0B,IAAIY,WAAW8I,MAChD,SAAA4B,GACE,GAAIA,aAAoBF,MAItB,OAHA9M,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BW,YAAa2K,KAEzCtB,IAAMF,MAAMC,YAAauB,IAClBd,EAAe,CAAEV,MAAOC,YAAauB,KAG9ChN,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BW,YAAa2K,EAASvE,QAClDyD,EAAe,CAACa,QAASC,EAASvE,UAEpC,SAAA+C,GACExL,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BW,YAAamJ,QAf9C,0CAAD,KAqBD,IAaH,OADFF,QAAQC,IAAIvL,EAAM0B,KAEd,eAACgD,EAAD,WACE,eAACE,EAAD,WACE,cAACkB,EAAD,UACGuB,EAAE,WAEL,eAACtB,EAAD,WACE,wCACSkH,KAAKC,UAAUlN,EAAM0B,IAAK,KAAM,MAExCuK,GAAe,YAAaA,GAA5B,2BACAA,GAAe,UAAWA,GAA1B,kBAAoDA,EAAYT,OAChES,GAAe,YAAaA,GAA5B,6BAEFA,GAAe,UAAWA,GAA1B,kBAAoDA,EAAYT,UAGnE,eAAC5C,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACzC,EAAD,CAAeI,OA9BR,WACb1G,EAAMyH,KAAK,SA6B0Bb,cAAeA,EAA9C,SACGS,EAAE,YAGP,cAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAClC,EAAD,CAAeC,OA/BR,WACb9G,EAAMyH,KAAK,SA8B0BV,cAAeA,EAA9C,SACGM,EAAE,sBAYf0E,GAAW/K,aAAe,GAGXC,WAAMC,KAAK6K,ICnJ1B,SAASoB,GAAqBnN,GAC5B,IAAQqH,EAAMC,cAAND,EACFM,EAAUC,cAChB,EAA2B7C,oBAAS,GAA5B6B,EAAR,oBACA,EAA4C7B,oBAAS,2BAAM,UAAA/E,EAAM0B,WAAN,UAAWmG,YAAX,UAAsB7H,EAAM0B,WAA5B,aAAsB,EAAW0L,oBAA5F,mBAAQrG,EAAR,KAAuBe,EAAvB,KACQC,EAAcC,cAAdD,UAWFE,EAAsB,WAC1B,QAAKC,IAAYC,mBAXA,SAACnI,GAAU+H,EAAUnI,IAAgBI,GAYpDoI,CAAW,CACTvI,MAAOwH,EAAE,6BACTvH,YAAauH,EAAE,2CACftH,QAAS,CACP,CACEgB,KAAMsG,EAAE,SACR3G,YAAY,EACZE,WAAW,EACXH,SAAU,WACRY,IAAaI,IAAI,WAAYzB,EAAMqI,OACnCV,EAAQW,KAAK,aAGjB,CACEvH,KAAMsG,EAAE,YACR3G,YAAY,EACZD,SAAU,WACRY,IAAaI,IAAI,WAAYzB,EAAMqI,OACnCV,EAAQW,KAAK,aAGjB,CACEvH,KAAMsG,EAAE,UACR3G,YAAY,EACZD,SAAU,kBAAMT,EAAMyH,KAAK,cAI1B,IAiBX,OACE,eAAC/C,EAAD,WACE,eAACE,EAAD,WACE,cAACkB,EAAD,UACGuB,EAAE,+BAEL,cAACtB,EAAD,UACE,8BACGsB,EAAE,oBADL,SAIF,cAACtB,EAAD,UACE,eAACS,EAAA,EAAD,CAAQhG,QAxBU,WACxB,GAAIyH,IAAuB,CAEzB,IAAIrF,EAAM5C,EAAM0B,IAAIY,UAAU+K,UACpC/B,QAAQC,IAAI,OAAQvL,EAAM0B,KAC1B4J,QAAQC,IAAI,OAAQ3I,GACd0K,YAAkB1K,GAClBkF,GAAiB,GACjB9H,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4B0L,iBAAiB,OAgBLzM,QAAQ,YAAY8F,MAAM,WAA9D,UACGY,EAAE,YADL,kBAMJ,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACzC,EAAD,CAAeI,OA3ER,WACb1G,EAAMyH,KAAK,SA0E0Bb,cAAeA,EAA9C,SACGS,EAAE,YAGP,cAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAClC,EAAD,CAAeC,OA5ER,WACb9G,EAAMyH,KAAK,SA2E0BV,cAAeA,EAA9C,SACGM,EAAE,sBAWf8F,GAAqBnM,aAAe,GAGrBC,WAAMC,KAAKiM,ICzG1B,SAASI,GAAavN,GACpB,IAAQqH,EAAMC,cAAND,EACR,EAAwCtC,mBAAS,IAAjD,mBAAQkH,EAAR,KAAqBC,EAArB,KACA,EAA2BnH,oBAAS,GAA5B6B,EAAR,oBACA,EAA4C7B,oBAAS,2BAAM,UAAA/E,EAAM0B,WAAN,UAAWmG,YAAX,UAAsB7H,EAAM0B,WAA5B,aAAsB,EAAW0L,oBAA5F,mBAAQrG,EAAR,KAAuBe,EAAvB,KACA,EAA0D/C,oBAAS,GAAnE,mBAAQyI,EAAR,KAA8BC,EAA9B,KACMC,EAAiB,yBANI,4CAgB3B,sBAAAtM,EAAA,sDACEqM,GAAwB,GAD1B,4CAhB2B,sBAoB3BnI,qBAAU,WACJtF,EAAM0B,KAAO1B,EAAM0B,IAAIY,WACzB,sBAAC,sBAAAlB,EAAA,6DACC8K,EAAe,CAACU,SAAS,IACzBa,GAAwB,GAFzB,SAGOjM,IAAWmB,kBAAkB,CAACC,IAAK8K,IAAiBtC,MACxD,SAAAC,GACE,GAAIA,aAAkByB,MAEpB,OADApB,IAAMF,MAAMC,YAAaJ,IAClBa,EAAe,CAACU,SAAS,EAAOpB,MAAOC,YAAaJ,KAE7DrL,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BiM,mBAAoBtC,EAAO5C,QACvDyD,EAAe,CAACU,SAAS,EAAOG,SAAS,IACzCjF,EAAiBuD,EAAO5C,SAE1B,SAAA+C,GAGE,OAFAE,IAAMF,MAAMC,YAAaD,IACzBxL,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BkM,QAASpC,EAAMwB,SAASvE,KAAKoF,WAClD3B,EAAe,CAAEV,MAAOC,YAAaD,QAhBjD,0CAAD,KAsBD,CAACxL,EAAM0B,IAAIY,UAAWtC,EAAM0B,IAAIkM,QAASJ,IAE5C,IAAIM,OACsBC,IAAxB9B,EAAYW,SAAyBX,EAAYW,QAAjD,eAEC5M,EAAM0B,IAAIiM,mBAAX,uBACQtG,EAAE,+DAAgE,CAACqG,oBAD3E,uBAGQrG,EAAE,6DAA8D,CAACqG,oBAG3E,OACE,eAAChJ,EAAD,WACE,eAACE,EAAD,WACE,cAACkB,EAAD,UACGuB,EAAE,gCAEL,uBACA,cAACtB,EAAD,UACG+H,IAEH,cAAC/H,EAAD,WACK/F,EAAM0B,IAAIiM,oBACX,iCACE,8BACGtG,EAAE,gDADL,OAGA,4BACE,eAACb,EAAA,EAAD,CAAQhG,QAxEK,2CAwEuBG,QAAQ,YAAY8F,MAAM,WAA9D,UACGY,EAAE,0BADL,6BASV,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACzC,EAAD,CAAeI,OA3ER,WACb1G,EAAMyH,KAAK,SA0E0Bb,cAAeA,EAA9C,SACGS,EAAE,YAGP,cAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAClC,EAAD,CAAeC,OA5ER,WACb9G,EAAMyH,KAAK,SA2E0BV,cAAeA,EAA9C,SACGM,EAAE,sBAWfkG,GAAavM,aAAe,GAGbC,WAAMC,KAAKqM,IC1G1B,SAASS,GAAgBhO,GAAQ,IAAD,QACtBqH,EAAMC,cAAND,EACR,EAAwCtC,mBAAS,IAAjD,mBAAQkH,EAAR,KAAqBC,EAArB,KACA,EAA4CnH,oBAAS,GAArD,mBAAQgC,EAAR,KAAuBe,EAAvB,KACA,EAA0B/C,oBAAS,GAA3B6B,EAAR,oBAEAtB,qBAAU,WACJtF,EAAM0B,KAAO1B,EAAM0B,IAAIY,YACrBtC,EAAM0B,IAAIkM,SACZ9F,GAAiB,GACjBoE,EAAe,CAACa,QAA8D,aAArD/M,EAAM0B,IAAIkM,QAAQK,kCAE3C,sBAAC,sCAAA7M,EAAA,6DACC8K,EAAe,CAACU,SAAS,IAD1B,SAEOpL,IAAWe,aAAX,UACJvC,EAAM0B,WADF,iBACJ,EAAWY,iBADP,iBACJ,EAAsB4L,gBADlB,aACJ,EAAgCC,gBAD5B,UAEJnO,EAAM0B,WAFF,iBAEJ,EAAWY,iBAFP,iBAEJ,EAAsB8L,cAFlB,aAEJ,EAA8BC,kCAC9BjD,MACA,SAAAC,GACE,GAAIA,aAAkByB,MAEpB,OADApB,IAAMF,MAAMC,YAAaJ,IAClBa,EAAe,CAAEV,MAAOC,YAAaJ,KAG9CrL,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BkM,QAASvC,EAAO5C,QAC5CyD,EAAe,CAACa,QAAS1B,EAAO5C,OAChCX,GAAiB,MAEnB,SAAA0D,GAGE,OAFAE,IAAMF,MAAMC,YAAaD,IACzBxL,EAAM2I,OAAN,2BAAiB3I,EAAM0B,KAAvB,IAA4BkM,QAASpC,EAAMwB,SAASvE,KAAKoF,WAClD3B,EAAe,CAAEV,MAAOC,YAAaD,QAnBjD,0CAAD,MA0BH,CAACxL,EAAM0B,IAAIY,UAAWtC,EAAM0B,IAAIkM,UAYnC,OACE,eAAClJ,EAAD,WACE,eAACE,EAAD,WACE,cAACkB,EAAD,UACGuB,EAAE,8BAEL,eAACtB,EAAD,WACGkG,GAAe,YAAaA,GAAuE,cAAvD,UAAAjM,EAAM0B,WAAN,mBAAWkM,eAAX,eAAoBK,iCAC/D,gCACE,sBAAMpN,MAAO,CAAC4F,MAAO,QAASpD,SAAU,SAAxC,oBADF,cACuIrD,EAAM0B,WAD7I,iBACuI,EAAWkM,eADlJ,aACuI,EAAoBU,iCAG7J,wCACQrB,KAAKC,UAAUlN,EAAM0B,IAAK,KAAM,SAGzCuK,GAAe,UAAWA,GAA1B,kBAAoDA,EAAYT,UAGnE,eAAC5C,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACzC,EAAD,CAAeI,OA/BR,WACb1G,EAAMyH,KAAK,SA8B0Bb,cAAeA,EAA9C,SACGS,EAAE,YAGP,cAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAClC,EAAD,CAAeC,OAhCR,WACb9G,EAAMyH,KAAK,SA+B0BV,cAAeA,EAA9C,SACGM,EAAE,sBAWf2G,GAAgBhN,aAAe,GAGhBC,WAAMC,KAAK8M,IChG1B,SAASO,GAAcvO,GACrB,IAAQqH,EAAMC,cAAND,EACR,EAA0BtC,oBAAS,GAA3B6B,EAAR,oBAMA,OACE,eAAClC,EAAD,WACE,eAACE,EAAD,WACE,eAACkB,EAAD,WACGuB,EAAE,YADL,OAGA,cAACtB,EAAD,UACE,qBAAKlF,MAAO,CAACwC,SAAU,IAAKO,UAAW,UAAvC,+BAMJ,cAACgF,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACzC,EAAD,CAAeI,OAnBR,WACb1G,EAAMyH,KAAK,SAkB0Bb,cAAeA,EAA9C,SACGS,EAAE,iBAWfkH,GAAcvN,aAAe,GAGdC,WAAMC,KAAKqN,I,gCClB1B,SAASC,GAASxO,GAChB,IAAQ2E,EAAqC3E,EAArC2E,SAAU8J,EAA2BzO,EAA3ByO,MAAOlO,EAAoBP,EAApBO,MAAUmO,EAAnC,YAA6C1O,EAA7C,IAEA,OACE,cAACkG,EAAA,EAAD,yBACEC,UAAU,MACVwI,KAAK,WACLC,OAAQH,IAAUlO,EAClBsO,GAAE,mCAA8BtO,GAChC,oCAA4BA,IACxBmO,GANN,aAQE,cAAC1I,EAAA,EAAD,CAAK8I,EAAG,EAAR,SACGnK,OAYT,IAAMoK,GAAY,SAACxO,GACjB,MAAO,CACLsO,GAAG,WAAD,OAAatO,GACf,gBAAgB,gBAAhB,OAAiCA,KAI/ByO,GAAYC,aAAW,SAAC9L,GAAD,MAAY,CACvC+L,KAAM,CACJC,QAAS,OAFKF,EAId,SAAAjP,GACF,OACE,cAACoP,EAAA,EAAD,eAASpP,OAIPiD,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC+L,KAAM,CACJG,SAAU,GASZC,IAAK,CACH7F,gBAAiBtG,EAAMoM,QAAQC,UAAUC,OAE3CC,aAAc,CACZjG,gBAAiB,iBACjBnF,OAAQ,OAKNqL,GAAY,WAChB,IAAM9K,EAAU5B,KAChB,EAAwB8B,oBAAS,kBAAM1D,IAAauO,YAApD,mBAAQlO,EAAR,KAAaiH,EAAb,KAMQtB,EAAMC,cAAND,EAeR,SAASwI,EAAUhB,GACjBlG,EAAO,2BAAIjH,GAAL,IAAU2G,MAAOwG,KASzB,SAASpH,EAAKqI,GACZ,IAAIjB,EAAKiB,EACT,GAAqB,kBAAVA,EACT,OAAQA,EAAMC,eACZ,IAAK,QAEL,IAAK,oBAEL,IAAK,iBAEL,IAAK,SAEL,IAAK,QAEL,IAAK,mBAEL,IAAK,UAEL,IAAK,sBAEL,IAAK,UACH,MACF,IAAK,OACHlB,EAAKnN,EAAMA,EAAI2G,MAAQ,EAAI,EAC3B,MACF,IAAK,OACHwG,EAAKnN,EAAMA,EAAI2G,MAAQ,EAAI,EAC3B,MACF,QAEE,YADAiD,QAAQE,MAAR,kDAAyDsE,IAI/DD,EAAUhB,GAIZ,OA5DAvJ,qBAAU,WACR,IAAM0K,EAAW3O,IAAaF,IAAI,YAC9B6O,IACFrH,EAAO,2BAAIjH,GAAL,IAAU2G,MAAO2H,KACvB3O,IAAa4O,OAAO,eAErB,CAACvO,IAEJ4D,qBAAU,WACRjE,IAAasH,OAAOjH,GACpBF,IAAWC,IAAIC,KACd,CAACA,IAgDA,OAACA,QAAD,IAACA,KAAK2G,QAAO3G,EAAI2G,MAAQ,GAE3B,sBAAK1C,UAAWd,EAAQqK,KAAxB,UACE,cAACgB,EAAA,EAAD,CAAQC,UAAW,EAAGC,SAAS,QAAQvP,MAAO,CAAqCwP,IAAK,IAAxF,SAWE,cAACC,EAAA,EAAD,CAAOH,UAAW,EAAGI,QAAM,EAA3B,SACE,eAACC,EAAA,EAAD,CACE/B,MAAK,OAAE/M,QAAF,IAAEA,OAAF,EAAEA,EAAK2G,MAGZ1H,QAAQ,aACR8P,cAAc,OACdC,SA/DV,SAAkBvQ,EAAO0O,GACnBrG,IAAOmI,GAAGC,uBACZf,EAAUhB,IA8DJ,aAAW,kBACXhK,QAAS,CACPgM,UAAWhM,EAAQ6K,cAErB/J,UAAWd,EAAQyK,IAXrB,UAaE,cAACN,GAAD,aAAW8B,MAAK,UAAKzJ,EAAE,SAAP,kBAA0B0H,GAAU,KACpD,cAACC,GAAD,aAAW8B,MAAK,UAAKzJ,EAAE,qBAAP,YAAqC0H,GAAU,KAC/D,cAACC,GAAD,aAAW8B,MAAK,UAAKzJ,EAAE,kBAAP,kBAAmC0H,GAAU,KAC7D,cAACC,GAAD,aAAW8B,MAAK,UAAKzJ,EAAE,UAAP,YAA0B0H,GAAU,KACpD,cAACC,GAAD,aAAW8B,MAAK,UAAKzJ,EAAE,SAAP,YAAyB0H,GAAU,KACnD,cAACC,GAAD,aAAW8B,MAAK,UAAKzJ,EAAE,oBAAP,YAAoC0H,GAAU,KAC9D,cAACC,GAAD,aAAW8B,MAAK,UAAKzJ,EAAE,WAAP,kBAA4B0H,GAAU,KACtD,cAACC,GAAD,aAAW8B,MAAK,UAAKzJ,EAAE,uBAAP,kBAAwC0H,GAAU,KAClE,cAACC,GAAD,aAAW8B,MAAK,UAAKzJ,EAAE,WAAP,kBAA4B0H,GAAU,YAK5D,qCACmB,KAAZ,OAAHrN,QAAG,IAAHA,OAAA,EAAAA,EAAK2G,QACL,cAACmG,GAAD,CAAUjO,MAAO,EAAGkO,MAAO/M,EAAI2G,MAA/B,SACE,cAAC,EAAD,CAAYZ,KAAMA,EAAM/F,IAAKA,EAAKiH,OAAQ,SAAAjH,GAAG,OAAIiH,EAAOjH,QAG3C,KAAZ,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAK2G,QACL,cAACmG,GAAD,CAAUjO,MAAO,EAAGkO,MAAO/M,EAAI2G,MAA/B,SACE,cAAC,EAAD,CAAuBZ,KAAMA,EAAM/F,IAAKA,EAAKiH,OAAQ,SAAAjH,GAAG,OAAIiH,EAAOjH,QAGtD,KAAZ,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAK2G,QACL,cAACmG,GAAD,CAAUjO,MAAO,EAAGkO,MAAO/M,EAAI2G,MAA/B,SACE,cAAC,EAAD,CAAeZ,KAAMA,EAAM/F,IAAKA,EAAKiH,OAAQ,SAAAjH,GAAG,OAAIiH,EAAOjH,QAG9C,KAAZ,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAK2G,QACL,cAACmG,GAAD,CAAUjO,MAAO,EAAGkO,MAAO/M,EAAI2G,MAA/B,SACE,cAAC,GAAD,CAAaZ,KAAMA,EAAM/F,IAAKA,EAAKiH,OAAQ,SAAAjH,GAAG,OAAIiH,EAAOjH,QAG5C,KAAZ,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAK2G,QACL,cAACmG,GAAD,CAAUjO,MAAO,EAAGkO,MAAO/M,EAAI2G,MAA/B,SACE,cAAC,GAAD,CAAYZ,KAAMA,EAAM/F,IAAKA,EAAKiH,OAAQ,SAAAjH,GAAG,OAAIiH,EAAOjH,QAG3C,KAAZ,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAK2G,QACL,cAACmG,GAAD,CAAUjO,MAAO,EAAGkO,MAAO/M,EAAI2G,MAA/B,SACE,cAAC0I,GAAD,CAAsBtJ,KAAMA,EAAM/F,IAAKA,EAAKiH,OAAQ,SAAAjH,GAAG,OAAIiH,EAAOjH,QAGrD,KAAZ,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAK2G,QACL,cAACmG,GAAD,CAAUjO,MAAO,EAAGkO,MAAO/M,EAAI2G,MAA/B,SACE,cAAC,GAAD,CAAcZ,KAAMA,EAAM/F,IAAKA,EAAKiH,OAAQ,SAAAjH,GAAG,OAAIiH,EAAOjH,QAG7C,KAAZ,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAK2G,QACL,cAACmG,GAAD,CAAUjO,MAAO,EAAGkO,MAAO/M,EAAI2G,MAA/B,SACE,cAAC,GAAD,CAAiBZ,KAAMA,EAAM/F,IAAKA,EAAKiH,OAAQ,SAAAjH,GAAG,OAAIiH,EAAOjH,QAGhD,KAAZ,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAK2G,QACL,cAACmG,GAAD,CAAUjO,MAAO,EAAGkO,MAAO/M,EAAI2G,MAA/B,SACE,cAAC,GAAD,CAAeZ,KAAMA,EAAM/F,IAAKA,EAAKiH,OAAQ,SAAAjH,GAAG,OAAIiH,EAAOjH,eC3OjEuB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACtC6N,KAAM,CACH3N,SAAU,aAId,SAAS4N,KACR,IAAMpM,EAAU5B,KAIf,OACE,qBAAK0C,UAAWd,EAAQmM,KAAxB,SAIE,cAAC,GAAD,MAKS/P,cAAMC,KAAK+P","file":"static/js/15.d82ef47f.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@mui/material';\n\nconst FlexibleDialog = ({ title, contentText, actions, ...props }) => (\n  <Dialog\n    {...props}\n    onBackdropClick={() => {} /* disable modal close on backdrop click */}\n    //disableScrollLock={false}\n    //disableEnforceFocus={false}\n    aria-labelledby={title}\n    onClose={(event, reason) => { /* console.log(\"REASON:\", reason); */ }}\n  >\n    <DialogTitle>{title}</DialogTitle>\n    <DialogContent>\n      <DialogContentText>{contentText}</DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      {actions.map((action, index) => (\n        <Button\n          key={index}\n          onClick={() => {\n            if (action.callback) action.callback();\n            if (action.closeModal) props.onClose();\n          }}\n          variant={action.variant === \"primary\" ? \"contained\" : action.variant === \"secondary\" ? \"outlined\" : \"contained\"}\n          autoFocus={props}\n          style={{textTransform: \"none\"}} // do not uppercase button text\n        >\n          {action.text}\n        </Button>\n      ))}\n    </DialogActions>\n  </Dialog>\n);\n\nFlexibleDialog.propTypes = {\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      closeModal: PropTypes.bool,\n      callback: PropTypes.func,\n      variant: PropTypes.oneOf([\n        \"primary\", \"secondary\",\n      ]),\n      autoFocus: PropTypes.bool,\n    })\n  ),\n};\n\nFlexibleDialog.defaultProps = {\n  title: \"\",\n  contentText: \"\",\n  actions: [\n    {\n      text: \"Ok\",\n      closeModal: true,\n      callback: () => {},\n      variant: \"primary\",\n      autoFocus: false,\n    }\n  ],\n};\n\nexport default React.memo(FlexibleDialog);","import api from \"./API\";\nimport TokenService from \"./TokenService\";\n\n// get job status\nconst get = async () => {\n  // const user = TokenService.getUser();\n  // if (!user) {\n  //   return null;\n  // }\n  // return api.get(\"/job/get\", {\n  //   userId: user._id,\n  // });\n\n  //const retval = await api.get(\"/job/get\");\n\n  const user = TokenService.getUser();\n  if (!user) {\n    return null;\n  }\n  return await api.get(\"/job/get\");\n};\n\n// set job status\nconst set = (job) => {\n  const user = TokenService.getUser();\n  if (!user) {\n    return null;\n  }\n\n  return api.put(\"/job/set\", {job});\n};\n\n// upload a file\nconst upload = (file) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  \n  return api.post(\"/job/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    }\n  });\n};\n\n// transform XLS to XML\nconst transformXls2Xml = (filePath) => {\n  return api.post(\"/job/transformXls2Xml/:filePath\", {\n    filePath,\n  });\n}\n\n// validate XML syntax\nconst validateXml = (transform) => {\n  return api.post(\"/job/validateXml/:transform\", {\n    transform,\n  });\n  // const retval = api.post(\"/job/validateXml/:transform\", {\n  //   transform,\n  // });\n  // console.log(\"****************** validateXml retval:\", retval);\n  // return retval;\n}\n\n// check ANAC periodic verification outcome\nconst outcomeCheck = (anno, codiceFiscaleAmministrazione) => {\n  return api.post(\"/job/outcomeCheck/:anno/:codiceFiscaleAmministrazione\",\n    {\n      anno,\n      codiceFiscaleAmministrazione,\n    }\n  );\n}\n\n// get ANAC periodic verification failed outcome details\nconst outcomeFailureDetails = (anno, codiceFiscaleAmministrazione) => {\n  return api.post(\n    \"/job/outcomeFailureDetails/anno/codiceFiscaleAmministrazione\",\n    {\n      anno,\n      codiceFiscaleAmministrazione,\n    }\n  );\n}\n\n// check url existence\nconst urlExistenceCheck = (url) => {\n  return api.post(\"/job/urlExistenceCheck/url\", url);\n}\n\n// just to ignore big xml when debug printing...\nconst sanitizeJob = (job) => {\n  if (!job?.transform?.xml) {\n    return job;\n  }\n  let j = job;\n  j.transform.xml = \"…\";\n  return j;\n}\n\n// get ANAC periodic verification failed outcome details\nconst getPlans = () => {\n  return api.get(\n    \"/job/getPlans\",\n  );\n}\n\nconst JobService = {\n  get,\n  set,\n  upload,\n  transformXls2Xml,\n  validateXml,\n  outcomeCheck,\n  outcomeFailureDetails,\n  urlExistenceCheck,\n  sanitizeJob,\n  getPlans,\n};\n\nexport default JobService;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport useWindowSize from \"../hooks/useWindowSize\";\n\n// const height = window.innerHeight;\n// const width = window.innerWidth;\n// const heightScrollable = (\n//   (height >= width) ?\n//     //height - (height *.12) - (height *.12) - (height *.12) // portrait\n//     height * .64 // portrait\n//   :\n//     //height - (height *.16) - (height *.16) - (height*.16) // landscape\n//     height * .52 // landscape\n//   );\n\n//console.log(\"height, width, heightScrollable:\", height, width, heightScrollable);\nconst useStyles = makeStyles(theme => ({\n\tparagraph: {\n    fontSize: \"1.1em\",\n\t},\n\tparagraphSmall: {\n    fontSize: \"0.8em\",\n\t},\n  centered: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  justified: {\n    textAlign: \"justify\",\n  },\n  box: {\n    display: \"flex\",\n  },\n  boxLeft: {\n    justifyContent: \"flex-start\",\n  },\n  boxRight: {\n    justifyContent: \"flex-end\",\n  },\n  sup: {\n    fontSize: \"0.8em\",\n  },\n  scrollableContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"1em\",\n    minHeight: \"5em\",\n    //maxHeight: heightScrollable,\n  },\n  scrollable: {\n    height: \"100%\",\n    overflowY: \"auto\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    minHeight: \"3em\",\n  },\n\n  // scrollableContainer: {\n  //   width: \"100%\",\n  //   height: \"100%\",\n  //   display: \"flex\",\n  //   flexDirection: \"column\",\n  //   flexWrap: \"nowrap\",\n  // },\n  // scrollableHeader: {\n  //   flexShrink: 0,\n  // },\n  // scrollableBody: {\n  //   flexGrow: 1,\n  //   overflow: \"auto\",\n  //   minHeight: \"3em\",\n  // },\n  // scrollableFooter: {\n  //   flexShrink: 0,\n  // },\n}));\n\nconst TabContainer = React.memo(props => {\n  //const classes = useStyles();\n  return (\n    <div>\n      {props.children}\n    </div>\n  );\n});\nTabContainer.propTypes = {\n};\nTabContainer.defaultProps = {\n};\n\nconst TabBodyScrollable = React.memo(props => {\n  const classes = useStyles();\n\n  /**\n   * Note: here we assume fixed sections height...\n   * this is a bad hack to have a scrollable body\n   * and avoid a scrollable container for any\n   * window height and consistent after a resize\n   */\n  const toolbarHeight = 90; // toolbar height\n  const tabbarHeight = 100; // tabbbar height\n  const footerHeight = 60; // footer height (TODO: put this in config.ui. ... ?)\n  const size = useWindowSize();\n\n  return (\n    <div className={classes.scrollableContainer}>\n      <div className={classes.scrollable} style={{height: Math.max(120, size.height - toolbarHeight - tabbarHeight - /*titleHeight - */footerHeight)}}>\n        {props.children}\n      </div>\n    </div>\n  );\n});\nTabBodyScrollable.propTypes = {\n};\nTabBodyScrollable.defaultProps = {\n};\n\nconst TabTitle = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <div className={classes.centered}>\n      <h2>{props.children}</h2>\n    </div>\n  );\n});\nTabTitle.propTypes = {\n};\nTabTitle.defaultProps = {\n};\n\nconst TabParagraph = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box mb={1}>\n      <Typography component=\"div\" className={`${classes.paragraph} ${classes.justified} ${props.small ? classes.paragraphSmall : null} ${props.class}`}>\n        {props.children}\n      </Typography>\n    </Box>\n  );\n});\nTabParagraph.propTypes = {\n  class: PropTypes.string,\n};\nTabParagraph.defaultProps = {\n  class: null,\n};\n\nconst TabPrevButton = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box\n      component=\"span\"\n      m={1} // margin\n      className={`${classes.box} ${classes.boxLeft}`}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={props.onPrev}\n        disabled={!props.prevIsEnabled}\n      >\n        {props.children}\n      </Button>\n    </Box>\n  );\n});\nTabPrevButton.propTypes = {\n  onPrev: PropTypes.func.isRequired,\n  prevIsEnabled: PropTypes.bool.isRequired,\n};\nTabPrevButton.defaultProps = {\n};\n\nconst TabNextButton = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box\n      component=\"span\"\n      m={1} // margin\n      className={`${classes.box} ${classes.boxRight}`}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        // fullWidth={props.fullWidth}\n        // variant={props.variant}\n        // color={props.color}\n        // size={props.size}\n        // className={`${classes.button} ${props.social ? classes.buttonFederated : \"\"} ${props.social ? classes[\"buttonFederated\" + capitalize(props.social)] : \"\"} ${classes[props.className]}`}\n        // startIcon={props.startIcon}\n        onClick={props.onNext}\n        disabled={!props.nextIsEnabled}\n      >\n        {props.children}\n      </Button>\n    </Box>\n  );\n});\nTabNextButton.propTypes = {\n  onNext: PropTypes.func.isRequired,\n  nextIsEnabled: PropTypes.bool.isRequired,\n};\nTabNextButton.defaultProps = {\n};\n\nconst TabTooltip = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Tooltip\n      title={props.title}\n      placement=\"top\"\n    >\n      <sup className={classes.sup}>{props.anchor}</sup>\n    </Tooltip>\n  );\n});\nTabTooltip.propTypes = {\n  title: PropTypes.string.isRequired,\n  anchor: PropTypes.string,\n};\nTabTooltip.defaultProps = {\n  anchor: \"*\",\n};\n\nexport {TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton, TabTooltip};","import { useState, useEffect } from \"react\";\n\nexport default function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n      //console.log(\"useWindowSize - height:\", window.innerHeight);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabNextButton, TabTooltip } from \"./TabsComponents\";\n\nfunction Tab01Start(props) {\n  const { t } = useTranslation();\n  const [ nextIsEnabled ] = useState(true);\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Welcome!\")}\n        </TabTitle>\n        <TabParagraph>\n          Questa è la nostra proposta per adempiere i requisiti della {\" \"}\n          <a href=\"https://www.anticorruzione.it/-/adempimenti-legge-190/2012-art.-1-comma-32-7\" target=\"legge190\">\n            Legge 190\n          </a>\n          . Speriamo che sia chiara e semplice da usare.\n          </TabParagraph>\n        <TabParagraph>\n          Questa app ti guiderà passo passo nei pochi passi che occorrono per completare\n          l'adempimento con successo.\n        </TabParagraph>\n        <TabParagraph>\n          Per iniziare dovrai scaricare un modello Excel\n          <TabTooltip\n            title={\"Può essere in formato MicroSoft-Excel, oppure in formato ODS, come preferisci.\"}\n          >\n          </TabTooltip>\n          , che contiene delle regole per guidarti nella compilazione, e minimizzare i possibili errori formali.\n        </TabParagraph>\n        <TabParagraph>\n          Poi dovrai inserire, uno per riga, tutti i beni o servizi che la tua struttura ha appaltato\n          nell'anno in corso.\n        </TabParagraph>\n        <TabParagraph>\n          Alla fine dell'anno, in genere entro la fine di Gennaio dell'anno successivo, sarà sufficiente\n          caricare qui il foglio Excel compilato.\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto il nostro sistema effettuerà il controllo formale dei dati inseriti.\n          Nel caso che venga segnalata qualche anomalia dovrai correggere sul file Excel le anomalie\n          segnalate, e poi ri-caricarlo.\n        </TabParagraph>\n        <TabParagraph>\n          Dopodichè potrai scaricare il documento XML prodotto, che andrà pubblicato sul\n          sito cui fa riferimento la tua struttura.\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto avrai praticamente completato l'adempimento.\n          Se vorrai potrai controllare - sempre su questo sito - l'esito della verifica da parte\n          dell'ANAC.\n        </TabParagraph>\n        <TabParagraph>\n          Tieni presente che siamo sempre disponibili a risponderti per qualsiasi dubbio o\n          incertezza. Le modalità di assistenza sono diverse, dal supporto telefonico a\n          quello per email, e dipendono anche dal piano scelto.\n          I riferimenti sono presenti nel menu, alla voce \"Supporto\".\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <div>\n        <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n          {t(\"Start\")}\n        </TabNextButton>\n      </div>\n    </TabContainer>\n  );\n}\nTab01Start.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab01Start.defaultProps = {\n};\n\nexport default React.memo(Tab01Start);\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { useModal } from \"mui-modal-provider\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport AuthService from \"../services/AuthService\";\nimport TokenService from \"../services/TokenService\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport FlexibleDialog from \"./FlexibleDialog\";\nimport config from \"../config\";\nimport { downloadLocalUrl } from \"../libs/Misc\";\n\n\n\nfunction Tab02DownloadTemplate(props) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const [ prevIsEnabled, ] = useState(true);\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(() => props.job?.download ? props.job?.download : false);\n  const { showModal } = useModal();\n  const openDialog = (props) => showModal(FlexibleDialog, props);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  const userIsAuthenticated = () => {\n    if (!AuthService.getCurrentUser()) { // user is not authenticated\n      openDialog({\n        title: t(\"Please log in or register\"),\n        contentText: t(\"You need to be authenticated to proceed\"),\n        actions: [\n          {\n            text: t(\"Login\"),\n            closeModal: true,\n            autoFocus: true,\n            callback: () => {\n              TokenService.set(\"redirect\", props.tabId);\n              history.push(\"/signin\");\n            },\n          },\n          {\n            text: t(\"Register\"),\n            closeModal: true,\n            callback: () => {\n              TokenService.set(\"redirect\", props.tabId);\n              history.push(\"/signup\");\n            },\n          },\n          {\n            text: t(\"Cancel\"),\n            closeModal: true,\n            callback: () => props.goto(\"prev\"),\n          }\n        ],\n      });\n      return false;\n    }\n    return true;\n  }\n\n  const onDownload = () => {\n    if (userIsAuthenticated()) {\n      downloadLocalUrl(config.data.templateDownloadUrl);\n      setNextIsEnabled(true);\n      props.setJob({...props.job, download: true});\n    }\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Download\")}\n        </TabTitle>\n        <TabParagraph>\n          Scarica il modello Excel in cui potrai inserire i dati degli appalti, uno per riga.\n        </TabParagraph>\n        <TabParagraph>\n          <Button onClick={onDownload} variant=\"contained\" color=\"tertiary\">\n            {t(\"Download\")} ⬇\n          </Button>\n        </TabParagraph>\n        {/* <br />\n        <TabParagraph small>\n          <input type=\"checkbox\"></input>\n          Clicca qui se preferisci la versione ODS (Open Document Format),\n          nel caso che tu utilizzi LibreOffice anziché Microsoft Office.\n        </TabParagraph> */}\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {t(\"Back\")}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {t(\"Continue\")}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab02DownloadTemplate.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab02DownloadTemplate.defaultProps = {\n};\n\nexport default React.memo(Tab02DownloadTemplate);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@mui/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport { useTranslation } from \"react-i18next\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\n\nconst useStyles = makeStyles(theme => ({\n  ul: {\n    padding: 32,\n  }\n}));\n\nfunction Tab03FillData(props) {\n  const classes = useStyles();\n  //const { auth } = useContext(AuthContext);\n  const { t } = useTranslation();\n  const [ prevIsEnabled ] = useState(true);\n  const [ nextIsEnabled ] = useState(true);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Fill your data\")}\n        </TabTitle>\n        <TabParagraph>\n          Adesso puoi aprire il modello scaricato con il tuo programma di gestione fogli di lavoro.\n        </TabParagraph>\n        <TabParagraph>\n          Sono presenti 2 fogli: \"METADATI\" ed \"ELENCO GARE\".\n          <br />\n          Ti consigliamo di iniziare dal primo foglio, \"METADATI\", ed inserire i 4 dati generali richiesti:\n          <ul className={classes.ul}>\n            <li><i>codiceFiscaleStrutturaProponente</i> il codice fiscale della tua struttura</li>\n            <li><i>denominazioneStrutturaProponente</i> la ragione sociale della tua struttura</li>\n            <li><i>annoRiferimento</i> l'anno di riferimento per cui inserirai gli appalti</li>\n            <li><i>urlFile</i> l'indirizzo URL dove sarà pubblicato il documento finale</li>\n          </ul>\n        </TabParagraph>\n        <TabParagraph>\n          A questo punto puoi passare al secondo foglio, \"ELENCO GARE\".\n          Occorre inserire ogni appalto (o \"gara\"), uno per riga.\n        </TabParagraph>\n        <TabParagraph>\n          I campi da compilare sono:\n          <ul className={classes.ul}>\n            <li><i>CIG</i> il Codice Identificativo Gara</li>\n            ... TODO: documentare tutti gli altri campi...\n          </ul>\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {t(\"Back\")}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {t(\"Continue\")}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab03FillData.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab03FillData.defaultProps = {\n};\n\nexport default React.memo(Tab03FillData);\n","import React, { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDropzone } from \"react-dropzone\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"blue\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#353535\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst focusedStyle = {\n  backgroundColor: \"lightyellow\",\n  borderColor: \"purple\",\n};\n\nconst acceptStyle = {\n  backgroundColor: \"lightgreen\",\n  borderColor: \"darkgreen\",\n};\n\nconst rejectStyle = {\n  backgroundColor: \"lightred\",\n  borderColor: \"darkred\",\n};\n\nconst DragNDrop = ({ onDrop, accept }) => {\n  const { t } = useTranslation();\n  const {\n    getRootProps,\n    getInputProps,\n    isFocused,\n    isDragAccept,\n    isDragReject,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept\n  });\n\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isFocused ? focusedStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isFocused,\n    isDragAccept,\n    isDragReject,\n  ]);\n\n  return (\n    <div className=\"dropzone-div\" {...getRootProps({style})}>\n      <input className=\"dropzone-input\" {...getInputProps()} />\n      <div className=\"text-center\">\n        {isDragActive ? (\n          <p className=\"dropzone-content\">\n            {t(\"Release to drop the files here\")}\n          </p>\n        ) : (\n          <p className=\"dropzone-content\">\n            {t(\"Drag 'n drop some files here, or click to select files\")}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DragNDrop;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport { useModal } from \"mui-modal-provider\";\nimport AuthService from \"../services/AuthService\";\nimport JobService from \"../services/JobService\";\nimport TokenService from \"../services/TokenService\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { toast } from \"./Toast\";\nimport DragNDrop from \"./DragNDrop\";\nimport FlexibleDialog from \"./FlexibleDialog\";\n\n\n\nfunction Tab04Upload(props) {\n  //const classes = useStyles();\n  const { t } = useTranslation();\n  const history = useHistory();\n  const [ prevIsEnabled ] = useState(true);\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(!!props?.job?.file);\n  const { showModal } = useModal();\n  const openDialog = (props) => showModal(FlexibleDialog, props);\n\n  const [ accept ] = useState([\n    \".csv\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    \"application/vnd.ms-excel\",\n  ]);\n\n  useEffect(() => {\n    // check if user is authenticated\n    const user = AuthService.getCurrentUser();\n    if (!user) { // user is not authenticated\n      openDialog({\n        title: t(\"Please log in or register\"),\n        contentText: t(\"You need to be authenticated to proceed\"),\n        actions: [\n          {\n            text: t(\"Login\"),\n            closeModal: true,\n            autoFocus: true,\n            callback: () => {\n              TokenService.set(\"redirect\", props.tabId);\n              history.push(\"/signin\");\n            },\n          },\n          {\n            text: t(\"Register\"),\n            closeModal: true,\n            callback: () => {\n              TokenService.set(\"redirect\", props.tabId);\n              history.push(\"/signup\");\n            },\n          },\n          {\n            text: t(\"Cancel\"),\n            closeModal: true,\n            callback: () => props.goto(\"prev\"),\n          }\n        ],\n      });\n      return false;\n    }\n    return true;\n  /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props]);\n\n  const fileSet = useCallback(async(file) => {\n    props.setJob({...props.job, file});\n  }, [props]);\n\n  const fileReset = useCallback(async() => {\n    /**\n     * When file is reset, we clear the full job! (we only keep tabId)\n     */\n    let job = {};\n    job.tabId = props.job.tabId;\n    //job.file = null;\n    props.setJob(job);\n    setNextIsEnabled(false);\n  }, [props]);\n\n  const fileValidate = useCallback((file) => { // validate file type or name\n    // ods: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n    // xls: application/vnd.ms-excel\n    if (!( // TODO: check if these tests are sufficiently general...\n      file?.type?.split(\"/\")[1]?.match(\"officedocument.spreadsheetml.sheet\") || //* TODO: ignore case... */\n      file?.type?.split(\"/\")[1]?.match(\"ms-excel\")\n    )) {\n      return t(\"Please upload a spreadsheet\") + `.` +\n        (file?.type ? ` ` + t(\"Selected file looks like {{fileType}}\", { fileType: file.type }) : \"\")\n      ;\n    }\n    return null; // validated\n  }, [t]);\n\n  const fileUpload = useCallback(async(file) => {\n    await JobService.upload(file).then(\n      result => {\n        console.log('Upload success, file path', result.data.file);\n        fileSet(result.data.file);\n        //props.setJob({...props.job, file: result.data.file});\n        // TODO: possibly save current job as historycal record\n      },\n      error => {\n        console.error('Upload error:', error);\n        fileReset();\n        props.setJob({...props.job, file: {error: errorMessage(error)}}) // set upload error in job.file.error\n        toast.error(errorMessage(error));\n        return;\n      }\n    );\n  }, [props, fileSet, fileReset]);\n\n  const fileSelect = useCallback(async(selectedFile) => {\n    if (selectedFile) {\n      const error = fileValidate(selectedFile);\n      if (error) {\n        //setFile(null);\n        props.setJob({...props.job, file: null});\n        //fileSet(null);\n        setNextIsEnabled(false);\n      } else {\n        //setFile(selectedFile);\n        //fileSet(selectedFile);\n        props.setJob({...props.job, file: selectedFile});\n        await fileUpload(selectedFile);\n        setNextIsEnabled(true);\n      }\n    } else {\n      toast.error(t(\"No file selected, sorry... Please, repeat...\"));\n      //setFile(null);\n      //fileSet(null);\n      props.setJob({...props.job, file: null});\n      setNextIsEnabled(false);\n    }\n  }, [/*fileSet, */props, fileUpload, fileValidate, t]);\n\n  // on drop callback\n  const onDrop = useCallback(acceptedFiles => {\n    // this callback will be called after files get dropped, we will get the acceptedFiles;\n    // if needed, we can even access the rejected files too\n    console.log(\"accepted files:\", acceptedFiles);\n    fileSelect(acceptedFiles[0]);\n  }, [fileSelect]);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = async () => {\n    props.goto(\"next\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Upload\")}\n        </TabTitle>\n        <TabParagraph>\n          Carica il foglio Excel compilato:\n        </TabParagraph>\n\n        <div className=\"container\">\n          <DragNDrop\n            onDrop={onDrop}\n            accept={accept}\n          />\n          <br />\n          <TabParagraph>\n            {props?.job?.file?.originalname && t(\"Selected file\") + `: ${props?.job?.file?.originalname}`}\n            <br />\n            {props?.job?.file?.originalname && <Button\n              variant=\"contained\"\n              size=\"small\"\n              onClick={fileReset}\n              title={t(\"Remove file\")}> 🗑 </Button>}\n          </TabParagraph>\n        </div>\n\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {t(\"Back\")}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {t(\"Continue\")}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\n\nTab04Upload.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab04Upload.defaultProps = {\n};\n\nexport default React.memo(Tab04Upload);","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useModal } from \"mui-modal-provider\";\nimport Grid from \"@mui/material/Grid\";\nimport { toast } from \"./Toast\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport TokenService from \"../services/TokenService\";\nimport JobService from \"../services/JobService\";\nimport FlexibleDialog from \"./FlexibleDialog\";\n\n\n\nfunction Tab05Check(props) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const user = TokenService.getUser();\n  const [ statusLocal, setStatusLocal ] = useState({});\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(!!props?.job?.transform?.planUpgradeDeclined);\n  const [ prevIsEnabled] = useState(true);\n  const { showModal } = useModal();\n  const openDialog = (props) => showModal(FlexibleDialog, props);\n\n  useEffect(() => {\nconsole.log(\"useeffect 1\");\n    if (props.job?.transform) {\n      if (props.job?.transform?.code === \"TRUNCATED_DUE_TO_PLAN_LIMIT\") {\n        if (!props.job?.transform?.planUpgradeDeclined) { // TODO: when will we reset this flag?\n          openDialog({\n            title: t(\"Please upgrade your plan\"),\n            contentText: \n              t(\"You need to upgrade your plan to proceed.\") + \"\\n\" +\n              t(\"Your current plan is \\\"{{planName}}\\\".\", { planName: user?.plan?.name}) + \"\\n\" +\n              t(\"To elaborate {{cigCount}} CIGs you need at least plan \\\"{{planName}}\\\"\", { cigCount: props.job?.transform?.cigCount, planName: props.job?.transform?.planRequired?.name }),\n            actions: [\n              {\n                text: t(\"Upgrade plan\"),\n                closeModal: true,\n                autoFocus: true,\n                callback: () => {\n                  TokenService.set(\"redirect\", props.tabId);\n                  history.push(\"/profile\", { tabValue: 1 }); // redirect to /profile route, to second tab, where plan can be changed\n                },\n              },\n              {\n                text: t(\"Proceed with the first {{cigNumberAllowed}} CIGs\", { cigNumberAllowed: user?.plan?.cigNumberAllowed }),\n                closeModal: true,\n                callback: () => {\n                  setNextIsEnabled(true);\n                  props.setJob({...props.job, transform: {...props.job?.transform, planUpgradeDeclined: true}});\n                },\n              },\n            ],\n          });\n        }\n      }\n    } else {\n      setNextIsEnabled(true);\n    }\n  /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props.job?.transform]);\n\n  useEffect(() => {\nconsole.log(\"useeffect 2\");\n    if (props.job.file && !props.job.transform) {\n      (async () => {\n        setStatusLocal({loading: true});\n        await JobService.transformXls2Xml(props.job.file.path).then(\n          result => {\n            if (result instanceof Error) {\n              props.setJob({...props.job, transform: result});\n              toast.error(errorMessage(result));\n              return setStatusLocal({ error: errorMessage(result)});\n            }\n            props.setJob({...props.job, transform: result.data.result});\n            setStatusLocal({success: result.data});\n            //setNextIsEnabled(true);\n          },\n        );\n      })();\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, []); //props, props.job]);\n\n  useEffect(() => {\nconsole.log(\"useeffect 3\");\n    if (props.job.file && props.job.transform && !props.job.validateXml) {\n      (async () => {\n        setStatusLocal({loading: true});\n        await JobService.validateXml(props.job.transform).then(\n          response => {\n            if (response instanceof Error) {\n              props.setJob({...props.job, validateXml: response});\n              //console.log(\"validateXml error:\", response);\n              toast.error(errorMessage(response));\n              return setStatusLocal({ error: errorMessage(response)});\n            }\n            //console.log(\"validateXml success:\", response.data);\n            props.setJob({...props.job, validateXml: response.data});\n            setStatusLocal({success: response.data});\n          },\n          error => {\n            props.setJob({...props.job, validateXml: error});\n          },\n        );\n      })();\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [/*props, job.transform, setJob*/]);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  //if (!props.active) return null;\n  \nconsole.log(props.job);\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Check\")}\n        </TabTitle>\n        <TabParagraph>\n          <pre>\n             JOB: {JSON.stringify(props.job, null, 2)}\n          </pre>\n          {statusLocal && \"loading\" in statusLocal && `Elaborazione in corso...`}\n          {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n          {statusLocal && \"success\" in statusLocal && `Elaborazione completata`}\n        </TabParagraph>\n        {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {t(\"Back\")}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {t(\"Continue\")}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\n\nTab05Check.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab05Check.defaultProps = {\n};\n\nexport default React.memo(Tab05Check);","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { useModal } from \"mui-modal-provider\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport AuthService from \"../services/AuthService\";\nimport TokenService from \"../services/TokenService\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport { downloadRemoteUrl } from \"../libs/Misc\";\nimport FlexibleDialog from \"./FlexibleDialog\";\n//import config from \"../config\";\n\n\n\nfunction Tab07DownloadDataset(props) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const [ prevIsEnabled, ] = useState(true);\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(() => props.job?.download ? props.job?.downloadDataset : false);\n  const { showModal } = useModal();\n  const openDialog = (props) => showModal(FlexibleDialog, props);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  const userIsAuthenticated = () => {\n    if (!AuthService.getCurrentUser()) { // user is not authenticated\n      openDialog({\n        title: t(\"Please log in or register\"),\n        contentText: t(\"You need to be authenticated to proceed\"),\n        actions: [\n          {\n            text: t(\"Login\"),\n            closeModal: true,\n            autoFocus: true,\n            callback: () => {\n              TokenService.set(\"redirect\", props.tabId);\n              history.push(\"/signin\");\n            },\n          },\n          {\n            text: t(\"Register\"),\n            closeModal: true,\n            callback: () => {\n              TokenService.set(\"redirect\", props.tabId);\n              history.push(\"/signup\");\n            },\n          },\n          {\n            text: t(\"Cancel\"),\n            closeModal: true,\n            callback: () => props.goto(\"prev\"),\n          }\n        ],\n      });\n      return false;\n    }\n    return true;\n  }\n\n  const onDownloadDataset = () => {\n    if (userIsAuthenticated()) {\n      //let url = config.service.endpoint + \"marco/dataset-2022.xml\";\n      let url = props.job.transform.outputUrl;\nconsole.log(\"job:\", props.job);\nconsole.log(\"url:\", url);\n      downloadRemoteUrl(url);\n      setNextIsEnabled(true);\n      props.setJob({...props.job, downloadDataset: true});\n    }\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Download produced dataset\")}\n        </TabTitle>\n        <TabParagraph>\n          <p>\n            {t(\"Download dataset\")}.\n          </p>\n        </TabParagraph>\n        <TabParagraph>\n          <Button onClick={onDownloadDataset} variant=\"contained\" color=\"tertiary\">\n            {t(\"Download\")} ⤵\n          </Button>\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {t(\"Back\")}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {t(\"Continue\")}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab07DownloadDataset.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab07DownloadDataset.defaultProps = {\n};\n\nexport default React.memo(Tab07DownloadDataset);\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport { toast } from \"./Toast\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport JobService from \"../services/JobService\";\n\n//import config from \"../config\";\n\n\n\nfunction Tab07Publish(props) {\n  const { t } = useTranslation();\n  const [ statusLocal, setStatusLocal ] = useState({});\n  const [ prevIsEnabled, ] = useState(true);\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(() => props.job?.download ? props.job?.downloadDataset : false);\n  const [ forceVerifyPublished, setForceVerifyPublished ] = useState(false);\n  const publishUrlFile = \"https://www.google.com\"; // props.job.transform.metadati.urlFile;\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  async function onVerifyPublished() {\n    setForceVerifyPublished(true);\n  };\n\n  useEffect(() => {\n    if (props.job && props.job.transform) {\n      (async () => {\n        setStatusLocal({loading: true});\n        setForceVerifyPublished(false);\n        await JobService.urlExistenceCheck({url: publishUrlFile}).then(\n          result => {\n            if (result instanceof Error) {\n              toast.error(errorMessage(result));\n              return setStatusLocal({loading: false, error: errorMessage(result)});\n            }\n            props.setJob({...props.job, datasetIsPublished: result.data});\n            setStatusLocal({loading: false, success: true});\n            setNextIsEnabled(result.data);\n          },\n          error => {\n            toast.error(errorMessage(error));\n            props.setJob({...props.job, outcome: error.response.data.message});\n            return setStatusLocal({ error: errorMessage(error)});\n          }\n        );\n      })();\n    }\n  /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props.job.transform, props.job.outcome, forceVerifyPublished]);\n\n  let datasetStatusContents =\n    statusLocal.loading === undefined || statusLocal.loading ?\n      `🟡` :\n    (props.job.datasetIsPublished) ?\n      `🟢 ${t(`Dataset is correctly published at address {{publishUrlFile}}`, {publishUrlFile})}`\n    :\n      `🔴 ${t(`Dataset is not published yet at address {{publishUrlFile}}`, {publishUrlFile})}`\n  ;\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Publish downloaded dataset\")}\n        </TabTitle>\n        <br />\n        <TabParagraph>\n          {datasetStatusContents}\n        </TabParagraph>\n        <TabParagraph>\n          {!(props.job.datasetIsPublished) && (\n            <span>\n              <p>\n                {t(\"Please provide to publish downloaded dataset\")}.\n              </p>\n              <p>\n                <Button onClick={onVerifyPublished} variant=\"contained\" color=\"tertiary\">\n                  {t(\"Verify publication now\")} 🌍\n                </Button>\n              </p>\n            </span>\n          )}\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {t(\"Back\")}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {t(\"Continue\")}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab07Publish.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab07Publish.defaultProps = {\n};\n\nexport default React.memo(Tab07Publish);\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@mui/material/Grid\";\nimport { toast } from \"./Toast\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton, TabNextButton } from \"./TabsComponents\";\nimport JobService from \"../services/JobService\";\n\n\n\nfunction Tab08Validation(props) {\n  const { t } = useTranslation();\n  const [ statusLocal, setStatusLocal ] = useState({});\n  const [ nextIsEnabled, setNextIsEnabled ] = useState(false);\n  const [ prevIsEnabled ] = useState(true);\n\n  useEffect(() => {\n    if (props.job && props.job.transform) {\n      if (props.job.outcome) {\n        setNextIsEnabled(true);\n        setStatusLocal({success: props.job.outcome.esitoUltimoTentativoAccessoUrl === \"successo\"});\n      } else {\n        (async () => {\n          setStatusLocal({loading: true});\n          await JobService.outcomeCheck(\n            props.job?.transform?.metadati?.annoRiferimento,\n            props.job?.transform?.header?.codiceFiscaleStrutturaProponente\n          ).then(\n            result => {\n              if (result instanceof Error) {\n                toast.error(errorMessage(result));\n                return setStatusLocal({ error: errorMessage(result)});\n              }\n              //console.log(\"OUTCOMECHECK result:\", result);\n              props.setJob({...props.job, outcome: result.data});\n              setStatusLocal({success: result.data});\n              setNextIsEnabled(true);\n            },\n            error => {\n              toast.error(errorMessage(error));\n              props.setJob({...props.job, outcome: error.response.data.message});\n              return setStatusLocal({ error: errorMessage(error)});\n            }\n          );\n        })();\n      }\n    }\n  /* eslint-disable react-hooks/exhaustive-deps */\n  }, [props.job.transform, props.job.outcome]);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  const onNext = () => {\n    props.goto(\"next\");\n  };\n\n  //if (!props.active) return null;\n  \n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Wait for ANAC validation\")}\n        </TabTitle>\n        <TabParagraph>\n          {statusLocal && \"success\" in statusLocal && (props.job?.outcome?.esitoUltimoTentativoAccessoUrl === \"successo\") && (\n            <pre>\n              <span style={{color: \"green\", fontSize: \"1.7em\"}}>✓</span>{/*<img src=\"images/success.ico\" width=\"32\" style=alt=\"success\"></img>*/} {props.job?.outcome?.dataUltimoTentativoAccessoUrl}\n            </pre>\n          )}\n          <pre>\n            JOB: {JSON.stringify(props.job, null, 2)}\n          </pre>\n        </TabParagraph>\n        {statusLocal && \"error\" in statusLocal && `Errore: ${statusLocal.error}`}\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {t(\"Back\")}\n          </TabPrevButton>\n        </Grid>\n        <Grid item xs={6}>\n          <TabNextButton onNext={onNext} nextIsEnabled={nextIsEnabled}>\n            {t(\"Continue\")}\n          </TabNextButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab08Validation.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab08Validation.defaultProps = {\n};\n\nexport default React.memo(Tab08Validation);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@mui/material/Grid\";\nimport { TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabPrevButton } from \"./TabsComponents\";\n\nfunction Tab09Finished(props) {\n  const { t } = useTranslation();\n  const [ prevIsEnabled ] = useState(true);\n\n  const onPrev = () => {\n    props.goto(\"prev\");\n  };\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabTitle>\n          {t(\"Finished\")}!\n        </TabTitle>\n        <TabParagraph>\n          <div style={{fontSize: 128, textAlign: \"center\"}}>\n            🏁\n          </div>\n        </TabParagraph>\n      </TabBodyScrollable>\n\n      <Grid container>\n        <Grid item xs={6}>\n          <TabPrevButton onPrev={onPrev} prevIsEnabled={prevIsEnabled}>\n            {t(\"Back\")}\n          </TabPrevButton>\n        </Grid>\n      </Grid>\n\n    </TabContainer>\n  );\n}\nTab09Finished.propTypes = {\n  goto: PropTypes.func.isRequired,\n};\nTab09Finished.defaultProps = {\n};\n\nexport default React.memo(Tab09Finished);\n","import React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport withStyles from '@mui/styles/withStyles';\nimport AppBar from '@mui/material/AppBar';\nimport Paper from '@mui/material/Paper';\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport TokenService from \"../services/TokenService\";\nimport JobService from \"../services/JobService\";\nimport Tab01Start from \"./Tab01Start\";\nimport Tab02DownloadTemplate from \"./Tab02DownloadTemplate\";\nimport Tab03FillData from \"./Tab03FillData\";\nimport Tab04Upload from \"./Tab04Upload\";\nimport Tab05Check from \"./Tab05Check\";\nimport Tab06DownloadDataset from \"./Tab06DownloadDataset\";\nimport Tab07Publish from \"./Tab07Publish\";\nimport Tab08Validation from \"./Tab08Validation\";\nimport Tab09Finished from \"./Tab09Finished\";\nimport config from \"../config\";\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>\n        {children}\n      </Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst a11yProps = (index) => {\n  return {\n    id: `nav-tab-${index}`,\n    \"aria-controls\": `nav-tabpanel-${index}`\n  };\n}\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    opacity: 0.8,\n  },\n}))(props => {\n  return (\n    <Tab {...props} />\n  );\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    //backgroundColor: theme.palette.background.paper,\n  },\n  // tabs: {\n  //   \"& .MuiTabs-indicator\": {\n  //     //display: \"none\",\n  //     backgroundColor: \"orange\",\n  //   }\n  // }\n  tab: {\n    backgroundColor: theme.palette.secondary.light,\n  },\n  tabIndicator: {\n    backgroundColor: \"MediumSeaGreen\", //theme.palette.secondary.dark,\n    height: 3,\n  }\n\n}));\n\nconst TabsPanel = () => {\n  const classes = useStyles();\n  const [ job, setJob ] = useState(() => TokenService.getJob());\n  //const { job, setJob } = useContext(JobContext);\n  //const [ job, setJob ] = useState(JobService.get());\n  //const [ job, setJob ] = useState(TokenService.getJob());\n  //const redirect = TokenService.getRedirect();\n  //const [ tabId, setTabId ] = useState(TokenService.getJob());\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const redirect = TokenService.get(\"redirect\");\n    if (redirect) {\n      setJob({...job, tabId: redirect });\n      TokenService.remove(\"redirect\");\n    }\n  }, [job]);\n  \n  useEffect(() => { // to serialize job\n    TokenService.setJob(job); // serialize locally, on local storage\n    JobService.set(job); // serialize remotely, on server db\n  }, [job]);\n\n  function changeTab(id) {\n    setJob({...job, tabId: id });\n  }\n\n  function forceTab(event, id) {\n    if (config.ui.userCanForceTabChange) { // user can force tab change by clicking on app bar titles\n      changeTab(id);\n    }\n  }\n  \n  function goto(where) {\n    let id = where;\n    if (typeof where === \"string\") {\n      switch (where.toLowerCase()) {\n        case \"start\":\n          break;\n        case \"download template\":\n          break;\n        case \"fill your data\":\n          break;\n        case \"upload\":\n          break;\n        case \"check\":\n          break;\n        case \"download dataset\":\n          break;\n        case \"publish\":\n          break;\n        case \"wait for validation\":\n          break;\n        case \"finish!\":\n          break;\n        case \"next\":\n          id = job ? job.tabId + 1 : 0;\n          break;\n        case \"prev\":\n          id = job ? job.tabId - 1 : 0;\n          break;\n        default:\n          console.error(`Unforeseen where specification in goto: ${where}`);\n          return;\n      }\n    }\n    changeTab(id);\n  }\n\n  if (!job?.tabId) job.tabId = 0;\n  return (\n    <div className={classes.root}>\n      <AppBar elevation={0} position=\"fixed\" style={{/*backgroundColor: \"transparent\",*/ top: 50}}>\n        {/* <Tabs\n          value={job.tabId}\n          onChange={forceTab}\n          indicatorColor=\"primary\"\n          // textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs\"\n          className={classes.tabs}\n        > */}\n        <Paper elevation={1} square>\n          <Tabs\n            value={job?.tabId}\n            //indicatorColor=\"secondary\"\n            //textColor=\"secondary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            onChange={forceTab}\n            aria-label=\"current section\"\n            classes={{\n              indicator: classes.tabIndicator\n            }}\n            className={classes.tab}\n          >\n            <StyledTab label={`${t(\"Start\")} 🪄`} {...a11yProps(0)} />\n            <StyledTab label={`${t(\"Download template\")} ▼`} {...a11yProps(1)} />\n            <StyledTab label={`${t(\"Fill your data\")} 🖋`} {...a11yProps(2)} />\n            <StyledTab label={`${t(\"Upload\")} ▲`} {...a11yProps(3)} />\n            <StyledTab label={`${t(\"Check\")} ✅`} {...a11yProps(4)} />\n            <StyledTab label={`${t(\"Download dataset\")} ⤵`} {...a11yProps(5)} />\n            <StyledTab label={`${t(\"Publish\")} 🌍`} {...a11yProps(6)} />\n            <StyledTab label={`${t(\"Wait for validation\")} 🎯`} {...a11yProps(7)} />\n            <StyledTab label={`${t(\"Finish!\")} 🏁`} {...a11yProps(8)} />\n          </Tabs>\n        </Paper>\n      </AppBar>\n\n      <>\n        {(job?.tabId === 0) && (\n          <TabPanel index={0} value={job.tabId}>\n            <Tab01Start goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 1) && (\n          <TabPanel index={1} value={job.tabId}>\n            <Tab02DownloadTemplate goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 2) && (\n          <TabPanel index={2} value={job.tabId}>\n            <Tab03FillData goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 3) && (\n          <TabPanel index={3} value={job.tabId}>\n            <Tab04Upload goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 4) && (\n          <TabPanel index={4} value={job.tabId}>\n            <Tab05Check goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 5) && (\n          <TabPanel index={5} value={job.tabId}>\n            <Tab06DownloadDataset goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 6) && (\n          <TabPanel index={6} value={job.tabId}>\n            <Tab07Publish goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 7) && (\n          <TabPanel index={7} value={job.tabId}>\n            <Tab08Validation goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n        {(job?.tabId === 8) && (\n          <TabPanel index={8} value={job.tabId}>\n            <Tab09Finished goto={goto} job={job} setJob={job => setJob(job)} />\n          </TabPanel>\n        )}\n      </>\n    </div>\n  );\n}\n\nexport { TabsPanel };","import React from \"react\";\n// import { useContext } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\n// import { useTranslation } from \"react-i18next\";\n// import { AuthContext } from \"../providers/AuthProvider\";\nimport { TabsPanel } from \"./TabsPanel\";\n\nconst useStyles = makeStyles(theme => ({\n\thome: {\n    fontSize: \"1.5em\",\n\t},\n}));\n\nfunction Home() {\n\tconst classes = useStyles();\n  // const { auth } = useContext(AuthContext);\n  // const { t } = useTranslation();\n\n  return (\n    <div className={classes.home}>\n      {/* {(typeof auth.user !== \"undefined\") && // if auth.user is undefined, we don't know yet about user authentication...\n        ${t(\"Home\")} ${t(\"for\")} ${auth.user ? t(\"authenticated user\") : t(\"guest user\")} ${auth.user ? auth.user.email : \"\"}\n      } */}\n      <TabsPanel />\n    </div>\n  );\n}\n\nexport default React.memo(Home);"],"sourceRoot":""}