{"version":3,"sources":["components/TabsComponents.js","hooks/useWindowSize.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js","../node_modules/email-scramble/index.js","components/Support.js"],"names":["useStyles","makeStyles","theme","paragraph","fontSize","paragraphSmall","centered","display","justifyContent","alignItems","justified","textAlign","box","boxLeft","boxRight","sup","scrollableContainer","flexDirection","marginTop","minHeight","scrollable","height","overflowY","paddingLeft","paddingRight","attention","backgroundColor","palette","main","color","fontWeight","TabContainer","React","memo","props","children","defaultProps","TabBodyScrollable","classes","size","useState","width","window","innerWidth","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","className","style","margin","Math","max","config","ui","toolbarHeight","tabbarHeight","footerHeight","TabTitle","TabParagraph","Box","component","mb","Typography","small","class","TabBox","sx","mx","xs","md","p","border","borderColor","mode","borderRadius","TabResetButton","m","reset","Button","variant","title","onClick","disabled","isDisabled","TabPrevButton","onPrev","prevIsEnabled","TabNextButton","onNext","nextIsEnabled","TabTooltip","Tooltip","placement","anchor","_excluded","options","defaultTheme","defaultClassName","generateClassName","styleFunctionSx","defaultStyleFunctionSx","BoxRoot","styled","inProps","ref","useTheme","_extendSxProp","extendSxProp","other","_objectWithoutPropertiesLoose","_jsx","_extends","as","clsx","createBox","createTheme","ClassNameGenerator","generate","root","factory","define","this","rot","charRot","numRot","str","numbers","lowercase","uppercase","regexNumber","regexLowercase","regexUppercase","character","currentPosition","length","String","index","result","charAt","test","indexOf","rot18","encode","decode","emailLabel","email","emailIcon","phone","phoneIcon","Support","user","TokenService","getUser","t","useTranslation","console","log","plan","count","support","freePlan","emailMaximumAnswerHoursDelay","classicPlan","unlimitedPlan","name","classname","href","emailScramble","phoneLabel"],"mappings":"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","file":"static/js/16.94f6c4e4.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport useWindowSize from \"../hooks/useWindowSize\";\nimport config from \"../config\";\n\n// const height = window.innerHeight;\n// const width = window.innerWidth;\n// const heightScrollable = (\n//   (height >= width) ?\n//     //height - (height *.12) - (height *.12) - (height *.12) // portrait\n//     height * .64 // portrait\n//   :\n//     //height - (height *.16) - (height *.16) - (height*.16) // landscape\n//     height * .52 // landscape\n//   );\n\n//console.log(\"height, width, heightScrollable:\", height, width, heightScrollable);\nconst useStyles = makeStyles(theme => ({\n\tparagraph: {\n    fontSize: \"1.1em\",\n\t},\n\tparagraphSmall: {\n    fontSize: \"0.8em\",\n\t},\n  centered: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  justified: {\n    textAlign: \"justify\",\n  },\n  box: {\n    display: \"flex\",\n  },\n  boxLeft: {\n    justifyContent: \"flex-start\",\n  },\n  boxRight: {\n    justifyContent: \"flex-end\",\n  },\n  sup: {\n    fontSize: \"0.8em\",\n  },\n  scrollableContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"1em\",\n    minHeight: \"5em\",\n    //maxHeight: heightScrollable,\n  },\n  scrollable: {\n    height: \"100%\",\n    overflowY: \"auto\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    minHeight: \"3em\",\n  },\n  attention: {\n    backgroundColor: theme.palette.attention.main,\n    color: \"white\",\n    fontWeight: \"bold\",\n  }\n}));\n\nconst TabContainer = React.memo(props => {\n  return (\n    <div>\n      {props.children}\n    </div>\n  );\n});\nTabContainer.propTypes = {\n};\nTabContainer.defaultProps = {\n};\n\nconst TabBodyScrollable = React.memo(props => {\n  const classes = useStyles();\n\n  /**\n   * Note: here we assume fixed sections height...\n   * this is a bad hack to have a scrollable body\n   * and avoid a scrollable container for any\n   * window height and consistent after a resize\n   */\n  const size = useWindowSize();\n\n  return (\n    <div className={classes.scrollableContainer}>\n      <div className={classes.scrollable} style={{margin: \"auto\", width: \"90%\", height: Math.max(120, size.height - config.ui.toolbarHeight - config.ui.tabbarHeight - config.ui.footerHeight)}}>\n        {props.children}\n      </div>\n    </div>\n  );\n});\nTabBodyScrollable.propTypes = {\n};\nTabBodyScrollable.defaultProps = {\n};\n\nconst TabTitle = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <div className={classes.centered}>\n      <h2>{props.children}</h2>\n    </div>\n  );\n});\nTabTitle.propTypes = {\n};\nTabTitle.defaultProps = {\n};\n\nconst TabParagraph = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box component=\"div\" mb={1}>\n      <Typography component=\"div\" className={`${classes.paragraph} ${classes.justified} ${props.small ? classes.paragraphSmall : null} ${props.class}`}>\n        {props.children}\n      </Typography>\n    </Box>\n  );\n});\nTabParagraph.propTypes = {\n  class: PropTypes.string,\n};\nTabParagraph.defaultProps = {\n  class: null,\n};\n\nconst TabBox = React.memo(props => {\n  //const classes = useStyles();\n  return (\n    <Box\n      sx={{\n        mx: { xs: \"5%\", md: \"20%\" },\n        mb: \"1em\",\n        p: 1,\n        border: \"1px solid\",\n        borderColor: (theme) =>\n          theme.palette.mode === \"dark\" ? \"grey.800\" : \"grey.300\",\n        borderRadius: 2,\n        fontSize: \"1em\",\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n      }}\n    >\n      {props.children}\n    </Box>\n  );\n});\nTabBox.propTypes = {\n  class: PropTypes.string,\n};\nTabBox.defaultProps = {\n  class: null,\n};\n\nconst TabResetButton = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box\n      component=\"span\"\n      m={1} // margin\n      className={`${classes.reset}`}\n    >\n      <Button\n        variant=\"contained\"\n        title={props.title}\n        color=\"attention\"\n        className={classes.attention}\n        onClick={props.onClick}\n        disabled={props.isDisabled}\n      >\n        {props.children}\n      </Button>\n    </Box>\n  );\n});\nTabResetButton.propTypes = {\n  title: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\nTabResetButton.defaultProps = {\n  isDisabled: false,\n};\n\nconst TabPrevButton = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box\n      component=\"span\"\n      m={1} // margin\n      className={`${classes.box} ${classes.boxLeft}`}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={props.onPrev}\n        disabled={!props.prevIsEnabled}\n      >\n        {props.children}\n      </Button>\n    </Box>\n  );\n});\nTabPrevButton.propTypes = {\n  onPrev: PropTypes.func.isRequired,\n  prevIsEnabled: PropTypes.bool.isRequired,\n};\nTabPrevButton.defaultProps = {\n};\n\nconst TabNextButton = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Box\n      component=\"span\"\n      m={1} // margin\n      className={`${classes.box} ${classes.boxRight}`}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={props.onNext}\n        disabled={!props.nextIsEnabled}\n      >\n        {props.children}\n      </Button>\n    </Box>\n  );\n});\nTabNextButton.propTypes = {\n  onNext: PropTypes.func.isRequired,\n  nextIsEnabled: PropTypes.bool.isRequired,\n};\nTabNextButton.defaultProps = {\n};\n\nconst TabTooltip = React.memo(props => {\n  const classes = useStyles();\n  return (\n    <Tooltip\n      title={props.title}\n      placement=\"top\"\n    >\n      <sup className={classes.sup}>{props.anchor}</sup>\n    </Tooltip>\n  );\n});\nTabTooltip.propTypes = {\n  title: PropTypes.string.isRequired,\n  anchor: PropTypes.string,\n};\nTabTooltip.defaultProps = {\n  anchor: \"*\",\n};\n\nexport {TabContainer, TabBodyScrollable, TabTitle, TabParagraph, TabBox, TabResetButton, TabPrevButton, TabNextButton, TabTooltip};\n","import { useState, useEffect } from \"react\";\n\nexport default function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n      //console.log(\"useWindowSize - height:\", window.innerHeight);\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport defaultStyleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName,\n    styleFunctionSx = defaultStyleFunctionSx\n  } = options;\n  const BoxRoot = styled('div')(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n\n    const _extendSxProp = extendSxProp(inProps),\n          {\n      className,\n      component = 'div'\n    } = _extendSxProp,\n          other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import PropTypes from 'prop-types';\nimport { createBox } from '@mui/system';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","(function wrapEmailScramble(root, factory) {\n  'use strict';\n  if (typeof define === 'function' && define.amd) {\n    define('email-scramble', factory(root));\n  } else if (typeof exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.emailScramble = factory(root);\n  }\n}(this, function emailScramble(root) {\n  'use strict';\n\n  // Largely taken from https://github.com/mathiasbynens/rot.\n  var rot = function rot(charRot, numRot, str) {\n    var numbers = '0123456789';\n    var lowercase = 'abcdefghijklmnopqrstuvwxyz';\n    var uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    var regexNumber = /[0-9]/;\n    var regexLowercase = /[a-z]/;\n    var regexUppercase = /[A-Z]/;\n\n    str = String(str);\n\n    if (charRot < 0) {\n      charRot += 26;\n    }\n    if (numRot < 0) {\n      numRot += 10;\n    }\n    var length = str.length; // note: no need to account for astral symbols\n    var index = -1;\n    var result = '';\n    var character;\n    var currentPosition;\n    var shiftedPosition;\n    while (++index < length) {\n      character = str.charAt(index);\n      if (regexNumber.test(character)) {\n        currentPosition = numbers.indexOf(character);\n        shiftedPosition = (currentPosition + numRot) % 10;\n        result += numbers.charAt(shiftedPosition);\n      } else if (regexLowercase.test(character)) {\n        currentPosition = lowercase.indexOf(character);\n        shiftedPosition = (currentPosition + charRot) % 26;\n        result += lowercase.charAt(shiftedPosition);\n      } else if (regexUppercase.test(character)) {\n        currentPosition = uppercase.indexOf(character);\n        shiftedPosition = (currentPosition + charRot) % 26;\n        result += uppercase.charAt(shiftedPosition);\n      } else {\n        result += character;\n      }\n    }\n    return result;\n  };\n\n  var rot18 = function rot18(str) {\n    return rot(13, 5, str);\n  };\n\n  return {\n    rot: rot,\n    encode: rot18,\n    decode: rot18\n  };\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useTranslation } from \"react-i18next\";\nimport emailScramble from \"email-scramble\";\nimport { Typography, Link } from \"@mui/material\";\nimport { TabContainer, TabBodyScrollable, TabBox, TabTitle, TabParagraph } from \"./TabsComponents\";\nimport TokenService from \"../services/TokenService\";\nimport config from \"../config\";\n\nconst useStyles = makeStyles(theme => ({\n  emailLabel: {\n  },\n  email: {\n    fontWeight: \"bold\",\n\t},\n  emailIcon: {\n    color: \"#d6302c\",\n    fontWeight: \"bold\",\n    fontSize: \"1.3em\",\n  },\n  phone: {\n    fontWeight: \"bold\",\n\t},\n  phoneIcon: {\n  },\n  }));\n\nfunction Support() {\n  const classes = useStyles();\n  // const { auth } = useContext(AuthContext);\n  const user = TokenService.getUser();\n  const { t } = useTranslation();\n\n  console.log(\"USER:\", user);\n\n  return (\n    <TabContainer>\n      <TabBodyScrollable>\n        <TabBox>\n          <TabTitle>\n            {t(\"Support\")}\n          </TabTitle>\n        </TabBox>\n        <TabBox>\n          <TabParagraph>\n            <Typography>\n              {t(\"We offer a complete support service to all our users\")}.\n            </Typography>\n            <br />\n            <Typography>\n              {t(\"To {{plan}} plan users we offer email support for basic technical questions and all administrative questions\", {plan: t(\"free\")})}.\n            </Typography>\n            <Typography>\n              {t(\"Email answer will be responded to after at most {{count}} hours\", {count: config.support.freePlan.emailMaximumAnswerHoursDelay})}.\n            </Typography>\n            <br />\n            <Typography>\n              {t(\"To {{plan}} plan users we offer email support for all technical questions and all administrative questions\", {plan: t(\"classic\")})}.\n            </Typography>\n            <Typography>\n              {t(\"Email answer will be responded to after at most {{count}} hours\", {count: config.support.classicPlan.emailMaximumAnswerHoursDelay})}.\n            </Typography>\n            <br />\n            <Typography>\n              {t(\"To {{plan}} users we offer email support for all kinds of questions, and direct line telephone support\", {plan: t(\"unlimited\")})}.\n            </Typography>\n            <Typography>\n              {t(\"Email answer will be responded to after at most {{count}} hours\", {count: config.support.unlimitedPlan.emailMaximumAnswerHoursDelay})}.\n            </Typography>\n            <br />\n            <Typography>\n              {t(\"Your current plan is\")} <b>{user ? t(user?.plan?.name) : t(\"free\")}</b>.\n            </Typography>\n            <br />\n            <Typography>\n              <span\n                classname={classes.emailLabel}\n              >\n                <span className={classes.emailIcon}> @ </span> {t(\"Contact us by email\")}:\n              </span>\n              &nbsp;\n              <Link\n                href={\"mailto:\" + emailScramble.decode(config.support.email)}\n                className={classes.email}\n              >\n                <b>{emailScramble.decode(config.support.email)}</b>\n              </Link>\n            </Typography>\n            {!user ? (\n              <Typography>\n                {t(\"Please login for phone support\")}.\n              </Typography>\n            ) : (\n              user?.plan?.name === \"unlimited\" ?\n                <Typography>\n                  <span\n                    classname={classes.phoneLabel}\n                  >\n                    <span className={classes.phoneIcon}>☎️</span> {t(\"Contact us by phone\")}:\n                  </span>\n                  &nbsp;\n                  <Link\n                    href={`tel: ${config.support.phone}`}\n                    className={classes.phone}\n                  >\n                    {config.support.phone}\n                  </Link>\n                </Typography>\n                :\n                <Typography>\n                  <span style={{color: \"blue\", fontSize: \"0.8em\"}}>☎️</span>&nbsp;&nbsp;{`${t(\"Please update your plan for phone support\")}`}.\n                </Typography>\n            )}\n          </TabParagraph>\n        </TabBox>\n      </TabBodyScrollable>\n    </TabContainer>\n  );\n}\n\nexport default React.memo(Support);"],"sourceRoot":""}