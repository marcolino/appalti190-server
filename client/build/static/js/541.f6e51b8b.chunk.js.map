{"version":3,"file":"static/js/541.f6e51b8b.chunk.js","mappings":"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","sources":["libs/Styling.js","components/FormElements.js","components/auth/ForgotPassword.js","libs/Fetch.js","../node_modules/@material-ui/icons/LockOpen.js","../node_modules/@material-ui/icons/LockOpenOutlined.js"],"sourcesContent":["/**\n * Shade a color by an amount [-100 - 100] (negative is darker, positive is ligher).\n */\nexport const shadeColor = (color, amount) => {\n  return \"#\" + color.replace(/^#/, \"\").replace(/../g, color => (\"0\" + Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)).substr(-2));\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { shadeColor } from \"../libs/Styling\";\nimport { capitalize, isEmptyObject } from \"../libs/Misc\";\n\n\n\nconst FormInput = React.memo((props) => {\n  const styles = theme => ({\n    startAdornment: {\n      backgroundColor: \"#eaedf0\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: -15,\n      marginRight: 5,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRight: \"1px solid #c5c5c5\",\n    },\n    endAdornment: {\n      backgroundColor: \"#eaedf0\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: 5,\n      marginRight: -15,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderLeft: \"1px solid #c5c5c5\",\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <TextField\n      id={props.id}\n      type={props.type}\n      value={props.value}\n      required={props.required}\n      autoFocus={props.autoFocus}\n      autoComplete={props.autoComplete.toString()}\n      variant={props.variant}\n      fullWidth={props.fullWidth}\n      label={props.label}\n      size={props.size}\n      margin={props.margin}\n      className={props.className ? props.className : classes.textField}\n      placeholder={props.placeholder}\n      onChange={e => props.onChange(e.target.value)}\n      disabled={props.disabled}\n      error={!isEmptyObject(props.error)}\n      InputProps={{\n        startAdornment: props.startAdornmentIcon ? (\n          <InputAdornment\n            className={props.startAdornmentClass ? props.startAdornmentClass : classes.startAdornment}\n            position=\"start\"\n          >\n            {props.startAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        endAdornment: props.endAdornmentIcon ? (\n          <InputAdornment\n            className={props.endAdornmentClass ? props.endAdornmentClass : classes.endAdornment}\n            position=\"end\"\n          >\n            {props.endAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        className: classes.input,\n      }}\n    />\n  );\n});\n\nFormInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  startAdornmentClass: PropTypes.string,\n  startAdornmentIcon: PropTypes.object,\n  endAdornmentClass: PropTypes.string,\n  endAdornmentIcon: PropTypes.object,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n};\n\nFormInput.defaultProps = {\n  type: \"text\",\n  required: false,\n  autoFocus: false,\n  autoComplete: false,\n  variant: \"outlined\",\n  fullWidth: true,\n  label: \"\",\n  size: \"small\",\n  margin: \"dense\",\n  className: null,\n  placeholder: \"\",\n  startAdornmentClass: null,\n  endAdornmentClass: null,\n  disabled: false,\n  error: \"\",\n};\n\n\n\nconst FormButton = React.memo((props) => {\n  const styles = theme => ({\n    button: {\n      margin: theme.spacing(1, 0, 0, 0),\n      textTransform: \"none\",\n      fontSize: \"1.3em\",\n      color: \"white\", // TODO\n      backgroundColor: theme.palette.success.main,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.success.main, -25),\n      },\n    },\n    buttonSecondary: {\n      margin: theme.spacing(1, 0, 0, 0),\n      textTransform: \"none\",\n      fontSize: \"1em !important\",\n      color: \"white\", // TODO\n      backgroundColor: theme.palette.secondary.dark + \" !important\",\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.secondary.dark, -25)  + \" !important\",\n      },\n    },\n    buttonFederated: {\n      margin: theme.spacing(1, 0, 0, 0),\n      justifyContent: \"flex-start\",\n      paddingLeft: theme.spacing(5),\n      fontSize: \"1.3em\",\n    },  \n    buttonFederatedFacebook: {\n      backgroundColor: theme.palette.socialButtons.facebook.backgroundColor,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.socialButtons.facebook.backgroundColor, -25),\n      },\n    },\n    buttonFederatedGoogle: {\n      backgroundColor: theme.palette.socialButtons.google.backgroundColor,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.socialButtons.google.backgroundColor, -25),\n      },\n    },\n  \n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <Button\n      fullWidth={props.fullWidth}\n      variant={props.variant}\n      color={props.color}\n      size={props.size}\n      className={`${classes.button} ${props.social ? classes.buttonFederated : \"\"} ${props.social ? classes[\"buttonFederated\" + capitalize(props.social)] : \"\"} ${classes[props.className]}`}\n      startIcon={props.startIcon}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </Button>\n  );\n});\n\nFormButton.propTypes = {\n  social: PropTypes.oneOf([\n    \"Facebook\",\n    \"Google\",\n  ]),\n}\n\nFormButton.defaultProps = {\n  fullWidth: true,\n  variant: \"contained\",\n  color: \"primary\",\n  social: null,\n};\n\n\n\nconst FormCheckbox = React.memo((props) => {\n  const styles = theme => ({\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const classNameDisabled = props.disabled ? classes.disabled : \"\";\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={props.checked}\n          onChange={(e) => props.onChange(e.target.checked)}\n          className={`${props.className} ${classNameDisabled}`}\n          color={props.color}\n          size={props.size}\n          disabled={props.disabled}\n        />\n      }\n      label={\n        <FormText\n          className={`${props.className} ${classNameDisabled}`}\n        >\n          {props.children}\n        </FormText>\n      }\n    />\n  );\n});\n\nFormCheckbox.propTypes = {\n};\n\nFormCheckbox.defaultProps = {\n  checked: false,\n  color: \"primary\",\n  size: \"small\",\n};\n\n\n\nconst FormText = React.memo((props) => {\n  return (\n    <Typography\n      component={props.component}\n      variant={props.variant}\n      color={props.color}\n      align={props.align}\n      {...props}\n    >\n      {props.children}\n    </Typography>\n  );\n});\n\nFormText.propTypes = {\n};\n\nFormText.defaultProps = {\n  component: \"h1\",\n  variant: \"body2\",\n  color: \"textPrimary\",\n};\n\n\n\nconst FormLink = React.memo((props) => {\n  const styles = theme => ({\n    normal: {\n      cursor: \"pointer\",\n    },\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n        color: \"grey\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const className = props.disabled ? classes.disabled : classes.normal;\n\n  return (\n    <Link\n      href={props.href}\n      className={`${props.className} ${className}`}\n      color={props.color}\n      {...props}\n    >\n      {props.children}\n    </Link>\n  );\n});\n\nFormLink.propTypes = {\n};\n\nFormLink.defaultProps = {\n  color: \"textPrimary\",\n};\n\n\n\nconst FormDividerWithText = React.memo((props) => {\n  const styles = theme => ({\n    container: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginTop: theme.spacing(props.marginVertical),\n      marginBottom: theme.spacing(props.marginVertical),\n    },\n    divider: {\n      width: \"100%\",\n      borderBottom: \"1px solid \" + (props.color ? props.color : theme.palette.primary.dark),\n      paddingLeft: theme.spacing(1),\n    },\n    text: {\n      paddingLeft: theme.spacing(props.paddingHorizontal),\n      paddingRight: theme.spacing(props.paddingHorizontal),\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.divider} />\n      {props.children && <span className={classes.text}>\n        {props.children}\n      </span>}\n      <div className={classes.divider} />\n    </div>\n  );\n});\n\nFormDividerWithText.propTypes = {\n  color: PropTypes.string,\n  marginVertical: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n  paddingHorizontal: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n};\n\nFormDividerWithText.defaultProps = {\n  marginVertical: 1,\n  paddingHorizontal: 1,\n};\n\nexport {FormInput, FormButton, FormCheckbox, FormText, FormLink, FormDividerWithText};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport LockOpenOutlined from \"@material-ui/icons/LockOpenOutlined\";\nimport ConfirmationNumber from \"@material-ui/icons/ConfirmationNumber\";\nimport Lock from \"@material-ui/icons/Lock\";\nimport LockOpen from \"@material-ui/icons/LockOpen\";\n// TODO: do not use trackpromise, but \"../../libs/Fetch\" ...\n//import { forgotPassword, forgotPasswordSubmit, resendResetPasswordCode } from \"../../libs/TrackPromise\";\nimport { forgotPassword, forgotPasswordSubmit, resendResetPasswordCode } from \"../../libs/Fetch\";\nimport { toast } from \"../Toast\";\nimport { FormInput, FormButton, FormText } from \"../FormElements\";\nimport { validateEmail, checkPassword } from \"../../libs/Validation\";\nimport config from \"../../config\";\n\nconst styles = theme => ({\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n  },\n  fieldset: {\n    border: 0,\n  },\n});\nconst useStyles = makeStyles((theme) => (styles(theme)));\n\nfunction ForgotPassword() {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmed, setPasswordConfirmed] = useState(\"\");\n  const [error, setError] = useState({ email: null, password: null, passwordConfirmed: null, code: null });\n  const [waitingForCode, setWaitingForCode] = useState(false);\n  const [codeDeliveryMedium, setCodeDeliveryMedium] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const history = useHistory();\n  const { promiseInProgress } = usePromiseTracker({delay: config.spinner.delay});\n  const [openDialog1, setOpenDialog1] = useState(false);\n  const [dialogTitle1, setDialogTitle1] = useState(null);\n  const [dialogContent1, setDialogContent1] = useState(null);\n  //const [dialogCallback1, setDialogCallback1] = useState(null);\n  const [openDialog2, setOpenDialog2] = useState(false);\n  const [dialogTitle2, setDialogTitle2] = useState(null);\n  const [dialogContent2, setDialogContent2] = useState(null);\n  //const [dialogCallback2, setDialogCallback2] = useState(null);\n  const { t } = useTranslation();\n\n  const handleOpenDialog1 = (title, content) => {\n    setDialogTitle1(title);\n    setDialogContent1(content);\n    setOpenDialog1(true);\n  };\n\n  const handleCloseDialog1 = (cb) => {\n    setOpenDialog1(false);\n    setDialogTitle1(null);\n    setDialogContent1(null);\n    //cb();\n  };\n\n  const handleOpenDialog2 = (title, content) => {\n    setDialogTitle2(title);\n    setDialogContent2(content);\n    setOpenDialog2(true);\n  };\n\n  const handleCloseDialog2 = () => {\n    setOpenDialog2(false);\n    setDialogTitle2(null);\n    setDialogContent2(null);\n    //dialogCallback2();\n    history.push(\"/signin\"); \n  };\n\n  const validateForm = () => { // validate email formally\n    if (!waitingForCode) {\n      if (!validateEmail(email)) {\n        const err = t(\"Please supply a valid email\");\n        toast.warning(err);\n        setError({ email: err });\n        return false;\n      }\n    }\n\n    if (waitingForCode) {\n      if (!checkPassword(password)) {\n        const err = t(\"Please supply a more complex password\");\n        toast.warning(err);\n        setError({ password: err });\n        return false;\n      }\n\n      if (!passwordConfirmed) {\n        const err = t(\"Please confirm the password\");\n        setError({ passwordConfirmed: err });\n        toast.warning(err);\n        return false;\n      }\n  \n      if (password !== passwordConfirmed) {\n        const err = t(\"The confirmed password does not match the password\");\n        toast.warning(err);\n        setError({ passwordConfirmed: err });\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  const formForgotPassword = (e) => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setError({});\n\n    console.log(\"formForgotPassword\");\n    forgotPassword({\n      email\n    }).then(data => {\n      if (!data.ok) {\n        console.warn(\"forgotPassword error:\", data);\n        toast.error(t(data.message));\n        setError({ email: data.message}); // TODO: should we always blame email input for error?\n        return;\n      }\n      console.log(\"forgotPassword success:\", data);\n      setWaitingForCode(true);\n      setPassword(\"\");\n      switch (data.codeDeliveryMedium) {\n        default: // in future we could treat EMAIL/SMS/... separately...\n          // TODO\n          // const medium = data.CodeDeliveryDetails.AttributeName;\n          // const email = data.CodeDeliveryDetails.Destination;\n          const medium = \"email\";\n          const email = \"marcosolari+6@gmail.com\";\n          setCodeDeliveryMedium(medium);\n          ///toast.info(`Verification code sent via ${medium} to ${email}.\\nPlease open it and copy and paste it here.`);\n          handleOpenDialog1(\n            t(\"Verification code sent\"),\n            t(`\\\nVerification code sent via {{medium}} to {{email}}.\nPlease copy and paste it here.`, {medium, email}),\n            () => {},\n          );\n      }\n    });\n  };\n  \n  const formConfirmForgotPassword = (e) => {\n    e.preventDefault();\n    setError({});\n    \n    forgotPasswordSubmit({email, code, password, passwordConfirmed}).then(data => {\n      if (!data.ok) {\n        console.warn(\"forgotPasswordSubmit error:\", data);\n        toast.error(t(data.message));\n        setError({ password: data.message}); // TODO: check whom to blame for error\n        return;\n      }\n      console.log(\"17 confirmForgotPasswordSubmit success data:\", data);\n      setWaitingForCode(false);\n      setEmail(\"\");\n      setPassword(\"\");\n      setPasswordConfirmed(\"\");\n      setCode(\"\");\n      handleOpenDialog2(\n        t(`Password reset success`),\n        t(`You can now sign in with your new password`),\n      );\n      //history.push(\"/signin\");\n    });\n  };\n  \n  const formResendResetPasswordCode = (e) => {\n    e.preventDefault();\n    setError({});\n\nconsole.log(\"formResendResetPasswordCode\");\n    resendResetPasswordCode({email}).then(data => {\n      if (!data.ok) {\n        console.warn(\"formResendResetPasswordCode error:\", data);\n        switch (data.code) {\n          case \"ExpiredCodeException\":\n            setError({ confirmationCode: data }); // blame confirmationCode field as guilty\n            break;\n          default:\n            setError({}); // we don't know whom to blame\n        }\n        toast.error(t(data.message));\n        return;\n      }\n      console.log(\"TODO: CHECK IF IN DATA WE HAVE MESSAGE TO SHOW TO THE USER resendResetPasswordCode success data:\", data);\n      toast.info(\"Code resent successfully\");\n    });\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <fieldset disabled={promiseInProgress} className={classes.fieldset}>\n          {!waitingForCode && (\n            <>\n\n{/* <FormButton onClick={formTestETBT}>{\"TEST ETBT\"}</FormButton> */}\n\n              <Box m={1} />\n\n              <Grid container justifyContent=\"center\">\n                <Avatar className={classes.avatar}>\n                  <LockOpenOutlined />\n                </Avatar>\n              </Grid>\n\n              <Box m={3} />\n\n              <Grid container justifyContent=\"flex-start\">\n                <FormText>\n                  {t(\"Reset password\")}\n                </FormText>\n              </Grid>\n\n              <Box m={1} />\n\n              <FormInput\n                autoFocus\n                id={\"email\"}\n                value={email}\n                onChange={setEmail}\n                placeholder={t(\"Email\")}\n                startAdornmentIcon={<LockOpen />}\n                error={error.email}\n              />\n\n              <Box m={1} />\n\n              <FormButton\n                onClick={formForgotPassword}\n              >\n                {t(\"Request password reset\")}\n              </FormButton>\n              \n            </>\n          )}\n          {waitingForCode && (\n            <>\n\n              <FormInput\n                id={\"password\"}\n                type=\"password\"\n                value={password}\n                onChange={setPassword}\n                placeholder={t(\"New password\")}\n                startAdornmentIcon={<Lock />}\n                error={error.password}\n              />\n\n              <FormInput\n                id={\"passwordConfirmed\"}\n                type=\"password\"\n                value={passwordConfirmed}\n                onChange={setPasswordConfirmed}\n                placeholder={t(\"New password confirmation\")}\n                startAdornmentIcon={<Lock />}\n                error={error.passwordConfirmed}\n              />\n\n              <FormInput\n                id={\"confirmationCode\"}\n                type=\"number\"\n                value={code}\n                onChange={setCode}\n                placeholder={t(\"Numeric code just received by {{codeDeliveryMedium}}\", {codeDeliveryMedium})}\n                startAdornmentIcon={<ConfirmationNumber />}\n                error={error.confirmationCode}\n              />\n\n              <Box m={1} />\n\n              <FormButton\n                onClick={formConfirmForgotPassword}\n              >\n                {t(\"Confirm Password Reset\")}\n              </FormButton>\n\n              <Grid container justifyContent=\"flex-end\">\n                <FormButton\n                  onClick={formResendResetPasswordCode}\n                  fullWidth={false}\n                  className={\"buttonSecondary\"}\n                >\n                  {t(\"Resend code\")}\n                </FormButton>\n              </Grid>\n\n            </>\n          )}\n        </fieldset>\n      </form>\n\n      <Dialog\n        open={openDialog1}\n        onClose={handleCloseDialog1}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {dialogTitle1}\n        </DialogTitle>\n        <DialogContent id=\"alert-dialog-description\">\n          <Typography variant=\"body1\" style={{whiteSpace: 'pre-line'}}>\n            {dialogContent1}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <FormButton\n            onClick={handleCloseDialog1}\n            fullWidth={false}\n            className={\"buttonSecondary\"}\n            autoFocus\n          >\n            {t(\"Ok\")}\n          </FormButton>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog\n        open={openDialog2}\n        onClose={handleCloseDialog2}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {dialogTitle2}\n        </DialogTitle>\n        <DialogContent id=\"alert-dialog-description\">\n          <Typography variant=\"body1\" style={{whiteSpace: 'pre-line'}}>\n            {dialogContent2}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <FormButton\n            onClick={handleCloseDialog2}\n            fullWidth={false}\n            className={\"buttonSecondary\"}\n            autoFocus\n          >\n            {t(\"Ok\")}\n          </FormButton>\n        </DialogActions>\n      </Dialog>\n\n    </Container>\n  );\n}\n\nexport default React.memo(ForgotPassword);","import instance from \"../middlewares/Interceptors\";\n\nexport const signIn = (params) => {\n  return instance.post(\"/auth/login\", params).then(response => {\n    return { ok: true, ...response.data };\n  }).catch(err => {\n    return { ok: false, ...err.response.data };\n  });\n};\n\nexport const getUsers = (params) => {\n  return instance.post(\"/user\", params).then(response => {\n    return { ok: true, ...response.data };\n  }).catch(err => {\n    return { ok: false, ...err.response.data };\n  });\n};\n\nexport const forgotPassword = (params) => {\nconsole.log(\"FETCH forgotPassword /auth/recover - params:\", params);\n  return instance.post(\"/auth/recover\", params).then(response => {\n    return { ok: true, ...response.data };\n  }).catch(err => {\nconsole.error(\"ERR:\", err);\n    return { ok: false, ...err.response.data };\n  });\n};\n\nexport const forgotPasswordSubmit = (params) => {\nconsole.log(\"FETCH forgotPasswordSubmit /auth/reset - params:\", params);\n  return instance.post(\"/auth/reset\", params).then(response => {\n    return { ok: true, ...response.data };\n  }).catch(err => {\n    return { ok: false, ...err.response.data };\n  });\n};\n\nexport const resendResetPasswordCode = (params) => {\n  return instance.post(\"/auth/resend\", params).then(response => {\n    return { ok: true, ...response.data };\n  }).catch(err => {\n    return { ok: false, ...err.response.data };\n  });\n};\n\n\nexport const convertXls2Json = (params) => {\n  return instance.post(\"/convertXls2Json\", params).then(response => {\n    return { ok: true, ...response.data };\n  }).catch(err => {\nconsole.warn(\"err.message\", err.message)\n    return { ok: false, message: err.message };\n  });\n};\n\n// export const federatedSignIn = (params) => {\n// console.log(currentFunctionName(), params);\n//   //return fetcher(\"/api/auth/login\", \"POST\", params);\n//   //return instance.post(\"/auth/login\", params);PromiseRejectionEvent\n//   return instance.get(\"http://localhost:5000/api/auth/loginGoogle\", params).then(response => {\n//     console.log(\"response status:\", response.status);\n//     console.log(\"response data:\", JSON.stringify(response.data));\n//     return response.data;\n//   }).catch(err => {\n//     console.error(`Error fetching data: ${err}`, err); // TODO...\n//     return err;\n//   });\n// };\n\n// const Auth = {\n//   signUp: (params) => {\n//     //console.log(currentFunctionName(), params);\n//     return fetcher(\"/api/auth/register\", \"POST\", params);\n//   },\n//   confirmSignUp: (params) => {\n//     //console.log(currentFunctionName(), params);\n//     // TODO: props = props.filter(key => key === \"code\");\n//     return fetcher(`/api/auth/verify/${params.code}`, \"GET\", params); // TODO: change the name: choose verify or confirmSignUp, and code or token (better code) ...\n//   },\n//   signIn: (params) => {\n// console.log(currentFunctionName(), params);\n//     //return fetcher(\"/api/auth/login\", \"POST\", params);\n//     return instance.post(\"/api/auth/login\", params);\n//   },\n//   signOut: (params) => { // TODO: test me...\n//     return new Promise((resolve, reject) => {\n//       resolve();\n//     });\n//   },\n// };\n//\n// const fetcher = (url, method, params) => {\n//     return new Promise((resolve, reject) => {\n//       if (method === \"GET\" && params) {\n//         url += \"?\" + Object.keys(params).map((key) => {\n//           return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key])\n//         }).join(\"&\");\n//       }\n//       fetch(url, {\n//         method,\n//         headers: new Headers(config.api.headers),\n//         ...(params && method !== \"GET\" && { body: JSON.stringify(params) }),\n//         redirect: config.api.redirect,\n//       })\n//         .then(res => {\n//           try {\n//             res.json().then(data => {\n//               if (!res.ok) reject({status: res.status, statusText: res.statusText, message: data.message ? data.message : res.statusText})\n//               resolve(data);\n//             });\n//           } catch (err) {\n//             console.error(`fetch ${url} error:`, err); // TODO: !!!\n//             reject(err);\n//           }\n//         })\n//         .catch(err => {\n//           console.error(`fetch ${url} error:`, err); // TODO: !!!\n//           reject(err);\n//         })\n//       ;\n//     });\n//   }","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z\"\n}), 'LockOpen');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h2c0-1.66 1.34-3 3-3s3 1.34 3 3v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOpenOutlined');\n\nexports.default = _default;"],"names":["shadeColor","color","amount","replace","Math","min","max","parseInt","toString","substr","FormInput","React","props","classes","makeStyles","theme","startAdornment","backgroundColor","height","maxHeight","marginLeft","marginRight","paddingLeft","paddingRight","borderRight","endAdornment","borderLeft","useStyles","TextField","id","type","value","required","autoFocus","autoComplete","variant","fullWidth","label","size","margin","className","textField","placeholder","onChange","e","target","disabled","error","isEmptyObject","InputProps","startAdornmentIcon","InputAdornment","startAdornmentClass","position","endAdornmentIcon","endAdornmentClass","input","defaultProps","FormButton","button","spacing","textTransform","fontSize","palette","success","main","buttonSecondary","secondary","dark","buttonFederated","justifyContent","buttonFederatedFacebook","socialButtons","facebook","buttonFederatedGoogle","google","styles","Button","social","capitalize","startIcon","onClick","children","cursor","textDecoration","classNameDisabled","FormControlLabel","control","Checkbox","checked","FormText","Typography","component","align","FormLink","normal","Link","href","FormDividerWithText","container","display","alignItems","marginTop","marginVertical","marginBottom","divider","width","borderBottom","primary","text","paddingHorizontal","avatar","fieldset","border","ForgotPassword","useState","email","setEmail","password","setPassword","passwordConfirmed","setPasswordConfirmed","code","setError","waitingForCode","setWaitingForCode","codeDeliveryMedium","setCodeDeliveryMedium","setCode","history","useHistory","promiseInProgress","usePromiseTracker","delay","config","openDialog1","setOpenDialog1","dialogTitle1","setDialogTitle1","dialogContent1","setDialogContent1","openDialog2","setOpenDialog2","dialogTitle2","setDialogTitle2","dialogContent2","setDialogContent2","t","useTranslation","handleCloseDialog1","cb","handleCloseDialog2","push","maxWidth","form","noValidate","m","preventDefault","validateEmail","err","toast","checkPassword","validateForm","console","log","forgotPassword","then","data","ok","warn","message","title","content","medium","confirmationCode","forgotPasswordSubmit","resendResetPasswordCode","open","onClose","style","whiteSpace","signIn","params","instance","response","catch","getUsers","convertXls2Json","_interopRequireDefault","require","_interopRequireWildcard","exports","_default","default","createElement","d"],"sourceRoot":""}