{"version":3,"file":"static/js/553.af1018d8.chunk.js","mappings":"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","sources":["components/auth/SignOut.js","libs/Auth.js","libs/TrackPromise.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { signOut } from \"../../libs/TrackPromise\";\nimport { AuthContext } from \"../../providers/AuthProvider\";\nimport { OnlineStatusContext } from \"../../providers/OnlineStatusProvider\";\nimport { toast } from \"../Toast\";\nimport { ETBTAdd } from \"../../libs/I18n\"; // TODO: remove me when finished collecting serve errors\n\n\n\nfunction SignOut() {\n  const history = useHistory();\n  const isOnline = useContext(OnlineStatusContext);\n  const { auth, setAuth } = useContext(AuthContext);\n  const { t } = useTranslation();\n\n  // use `useEffect` to avoid  \"cannot update a component while rendering a different component\" error\n  useEffect(() => {\n    if (!isOnline) { // fake signout while offline...\n      // TODO: we should also at least clear localStorage.CognitoIdentityServiceProvider.* keys ...\n      //return toast.warning(\"You are currently offline. Please wait for the network to become available.\");\nconsole.log(\"signOut calling setAuth\");\n      setAuth({ user: false })\n      history.replace(\"/\");\n    } else {\n      signOut({\n        success: () => {\n          //toast.success(t(\"Signed out\")); // too noisy...\nconsole.log(\"signOut calling setAuth\");\n          setAuth({ user: false })\n          history.replace(\"/\");\n        },\n        error: (err) => {\nconsole.error(\"signOut error:\", err);\nETBTAdd(\"signOut\", err);\n          toast.error(t(err.message));\n        }\n      });\n    }\n  }, [isOnline, history, auth, setAuth, t]);\n\n  return null;\n};\n\nexport default React.memo(SignOut);\n","import config from \"../config\";\nimport { currentFunctionName } from \"../libs/Misc\";\n\nconst Auth_ = {\n  signIn: (params) => {\n    //console.log(currentFuncionName(), params);\n    return fetcher(\"/api/auth/login\", \"POST\", params);\n  },\n  signUp: (params) => {\n    //console.log(currentFunctionName(), params);\n    return fetcher(\"/api/auth/register\", \"POST\", params);\n  },\n  confirmSignUp: (params) => {\n    //console.log(currentFunctionName(), params);\n    // TODO: props = props.filter(key => key === \"code\");\n    return fetcher(`/api/auth/verify/${params.code}`, \"GET\", params); // TODO: change the name: choose verify or confirmSignUp, and code or token (better code) ...\n  },\n  currentAuthenticatedUser: (params) => {\n    //console.log(currentFunctionName(), params);\n    return new Promise((resolve, reject) => {\n      const auth = JSON.parse(localStorage.getItem('auth'));\n\n      // TODO: https://www.bezkoder.com/jwt-refresh-token-node-js/ (for server side refresh token handling)\n      // TODO:\n/*\n      function isAuthenticated() {\n        const accessToken = localStorage.getItem('accessToken');\n        const refreshToken = localStorage.getItem('refreshToken');\n        try {\n          decode(accessToken);\n          const { exp } = decode(refreshToken);\n          if (Date.now() >= exp * 1000) {\n            return false;\n          }\n        } catch (err) {\n          return false;\n        }\n        return true;\n      }\n*/\n\n      //console.log(currentFunctionName(), \"auth:\", auth);\n      if (auth) {\n        //console.log(currentFunctionName(), \"resolving auth.user:\", auth.user);\n        resolve(auth.user);\n      } else {\n        //console.log(currentFunctionName(), \"rejecting\");\n        reject();\n      }\n    });\n  },\n  signOut: (params) => {\n    //console.log(currentFunctionName());\n    // nothing to do\n    return new Promise((resolve, reject) => {\n      resolve();\n    });\n  },\n};\n\nconst fetcher = (url, method, params) => {\nconsole.log(\"fetcher:\", url, method, params);\n  return new Promise((resolve, reject) => {\n    if (method === \"GET\" && params) {\n      url += \"?\" + Object.keys(params).map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key])\n      }).join(\"&\");\n    }\nconsole.log(\"fetcher url 2:\", url);\nvar opt = {\n  method,\n  headers: new Headers(config.api.headers),\n  ...(params && method !== \"GET\" && { body: JSON.stringify(params) }),\n  redirect: config.api.redirect,\n}\nconsole.log(\"fetcher opt:\", opt);\n    fetch(url, {\n      method,\n      headers: new Headers(config.api.headers),\n      ...(params && method !== \"GET\" && { body: JSON.stringify(params) }),\n      //body: new URLSearchParams(params),\n      redirect: config.api.redirect,\n    })\n      .then(res => {\nconsole.log(\"fetcher res:\", res);\n        try {\n          res.json().then(data => {\nconsole.log(\"fetcher data:\", data);\n            if (!res.ok) reject({status: res.status, statusText: res.statusText, message: data.message ? data.message : res.statusText})\n            resolve(data);\n          });\n        } catch (err) {\n          console.error(`fetch ${url} error:`, err); // TODO: !!!\n        }\n\n      })\n      .catch(err => {\n        console.error(`fetch ${url} error:`, err); // TODO: !!!\n        reject(err)\n      })\n    ;\n  });\n}\n\nexport default Auth_;","//import React from \"react\";\n//import { Auth } from \"aws-amplify\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport Auth_ from \"./Auth\";\n\n\n\nexport function currentAuthenticatedUser({success, error, final}) {\n  trackPromise(\n    Auth_.currentAuthenticatedUser()\n      .then((data) => success(data))\n      .catch((data) => error(data))\n      .finally((data) => final(data))\n  );\n}\n\nexport function signIn(props, {success, error, final}) {\n  trackPromise(\n    Auth_.signIn({...props})\n      .then((data) => {console.log(\"success:\", data); success(data)})\n      .catch((data) => {console.log(\"error:\", data); error(data)})\n      .finally((data) => final(data))\n  );\n}\n\nexport function federatedSignIn(props, {success, error, final}) {\n  trackPromise(\n    Auth_.federatedSignIn({...props})\n      .then((data) => success(data))\n      .catch((data) => error(data))\n      .finally((data) => final(data))\n  );\n}\n  \nexport function signUp(props, {success, error, final}) {\n  trackPromise(\n    Auth_.signUp({...props})\n      .then((data) => success(data))\n      .catch((data) => error(data))\n      .finally((data) => final(data))\n  );\n};\n\n//export function confirmSignUp(username, code, {success, error, final}) {\nexport function confirmSignUp(props, {success, error, final}) {\nconsole.log('TrackPromise - props:', props);\n  trackPromise(\n    Auth_.confirmSignUp({...props})\n      .then((data) => success(data))\n      .catch((data) => error(data))\n      .finally((data) => final(data))\n  );\n};\n\nexport function forgotPassword(username, {success, error, final}) {\n  trackPromise(\n    Auth_.forgotPassword(username)\n      .then((data) => success(data))\n      .catch((data) => error(data))\n      .finally((data) => final(data))\n  );\n};\n\nexport function resendSignUp(username, {success, error, final}) {\n  trackPromise(\n    Auth_.resendSignUp(username)\n      .then((data) => success(data))\n      .catch((data) => error(data))\n      .finally((data) => final(data))\n  );\n};\n\nexport function forgotPasswordSubmit(username, code, password, {success, error, final}) {\n  trackPromise(\n    Auth_.forgotPasswordSubmit(username, code, password,)\n      .then((data) => success(data))\n      .catch((data) => error(data))\n      .finally((data) => final(data))\n  );\n};\n\nexport function resendResetPasswordCode(username, {success, error, final}) {\n  trackPromise(\n    //Auth.resendResetPassword(username)\n    Auth_.resendSignUp(username)\n      .then((data) => success(data))\n      .catch((data) => error(data))\n      .finally((data) => final(data))\n  );\n};\n\nexport function signOut({success, error, final}) {\n  trackPromise(\n    Auth_.signOut()\n      .then((data) => success(data))\n      .catch((data) => error(data))\n      .finally((data) => final(data))\n  );\n};\n"],"names":["SignOut","history","useHistory","isOnline","useContext","OnlineStatusContext","AuthContext","auth","setAuth","t","useTranslation","useEffect","signOut","success","console","log","user","replace","error","err","ETBTAdd","toast","message","React","Auth_","signIn","params","fetcher","signUp","confirmSignUp","code","currentAuthenticatedUser","Promise","resolve","reject","JSON","parse","localStorage","getItem","url","method","Object","keys","map","key","encodeURIComponent","join","opt","headers","Headers","config","body","stringify","redirect","fetch","then","res","json","data","ok","status","statusText","catch","props","final","trackPromise","finally","federatedSignIn","forgotPassword","username","resendSignUp","forgotPasswordSubmit","password","resendResetPasswordCode"],"sourceRoot":""}