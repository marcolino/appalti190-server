{"version":3,"sources":["libs/Styling.js","components/FormElements.js","libs/Validation.js","../node_modules/@material-ui/icons/LockOpenOutlined.js","../node_modules/@material-ui/icons/LockOpen.js","components/auth/ForgotPassword.js"],"names":["shadeColor","color","amount","replace","Math","min","max","parseInt","toString","substr","FormInput","React","memo","props","classes","makeStyles","theme","startAdornment","backgroundColor","height","maxHeight","marginLeft","marginRight","paddingLeft","paddingRight","borderRight","endAdornment","borderLeft","useStyles","TextField","id","type","value","required","autoFocus","autoComplete","variant","fullWidth","label","size","margin","className","textField","placeholder","onChange","e","target","disabled","error","isEmptyObject","InputProps","startAdornmentIcon","InputAdornment","startAdornmentClass","position","endAdornmentIcon","endAdornmentClass","input","defaultProps","FormButton","button","spacing","textTransform","fontSize","palette","success","main","buttonSecondary","secondary","dark","buttonFederated","justifyContent","buttonFederatedFacebook","socialButtons","facebook","buttonFederatedGoogle","google","styles","Button","social","capitalize","startIcon","onClick","children","FormCheckbox","cursor","textDecoration","classNameDisabled","FormControlLabel","control","Checkbox","checked","FormText","Typography","component","align","FormLink","normal","Link","href","FormDividerWithText","container","display","alignItems","marginTop","marginVertical","marginBottom","divider","width","borderBottom","primary","text","paddingHorizontal","validateEmail","email","test","String","toLowerCase","checkPassword","password","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","avatar","fieldset","border","ForgotPassword","useState","setEmail","setPassword","passwordConfirmed","setPasswordConfirmed","code","setError","waitingForCode","setWaitingForCode","codeDeliveryMedium","setCodeDeliveryMedium","setCode","history","useHistory","promiseInProgress","usePromiseTracker","delay","config","spinner","openDialog","setOpenDialog","dialogTitle","setDialogTitle","dialogContent","setDialogContent","t","useTranslation","handleOpenDialog","title","content","handleCloseDialog","maxWidth","form","noValidate","m","preventDefault","err","toast","warning","validateForm","forgotPassword","data","console","log","medium","CodeDeliveryDetails","AttributeName","Destination","ETBTAdd","message","confirmationCode","forgotPasswordSubmit","push","resendResetPasswordCode","info","open","onClose","style","whiteSpace"],"mappings":"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","file":"static/js/8.ce6b2432.chunk.js","sourcesContent":["/**\n * Shade a color by an amount [-100 - 100] (negative is darker, positive is ligher).\n */\nexport const shadeColor = (color, amount) => {\n  return \"#\" + color.replace(/^#/, \"\").replace(/../g, color => (\"0\" + Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)).substr(-2));\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { shadeColor } from \"../libs/Styling\";\nimport { capitalize, isEmptyObject } from \"../libs/Misc\";\n\n\n\nconst FormInput = React.memo((props) => {\n  const styles = theme => ({\n    startAdornment: {\n      backgroundColor: \"#eaedf0\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: -15,\n      marginRight: 5,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRight: \"1px solid #c5c5c5\",\n    },\n    endAdornment: {\n      backgroundColor: \"#eaedf0\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: 5,\n      marginRight: -15,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderLeft: \"1px solid #c5c5c5\",\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <TextField\n      id={props.id}\n      type={props.type}\n      value={props.value}\n      required={props.required}\n      autoFocus={props.autoFocus}\n      autoComplete={props.autoComplete.toString()}\n      variant={props.variant}\n      fullWidth={props.fullWidth}\n      label={props.label}\n      size={props.size}\n      margin={props.margin}\n      className={props.className ? props.className : classes.textField}\n      placeholder={props.placeholder}\n      onChange={e => props.onChange(e.target.value)}\n      disabled={props.disabled}\n      error={!isEmptyObject(props.error)}\n      InputProps={{\n        startAdornment: props.startAdornmentIcon ? (\n          <InputAdornment\n            className={props.startAdornmentClass ? props.startAdornmentClass : classes.startAdornment}\n            position=\"start\"\n          >\n            {props.startAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        endAdornment: props.endAdornmentIcon ? (\n          <InputAdornment\n            className={props.endAdornmentClass ? props.endAdornmentClass : classes.endAdornment}\n            position=\"end\"\n          >\n            {props.endAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        className: classes.input,\n      }}\n    />\n  );\n});\n\nFormInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  startAdornmentClass: PropTypes.string,\n  startAdornmentIcon: PropTypes.object,\n  endAdornmentClass: PropTypes.string,\n  endAdornmentIcon: PropTypes.object,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n};\n\nFormInput.defaultProps = {\n  type: \"text\",\n  required: false,\n  autoFocus: false,\n  autoComplete: false,\n  variant: \"outlined\",\n  fullWidth: true,\n  label: \"\",\n  size: \"small\",\n  margin: \"dense\",\n  className: null,\n  placeholder: \"\",\n  startAdornmentClass: null,\n  endAdornmentClass: null,\n  disabled: false,\n  error: \"\",\n};\n\n\n\nconst FormButton = React.memo((props) => {\n  const styles = theme => ({\n    button: {\n      margin: theme.spacing(1, 0, 0, 0),\n      textTransform: \"none\",\n      fontSize: \"1.3em\",\n      color: \"white\", // TODO\n      backgroundColor: theme.palette.success.main,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.success.main, -25),\n      },\n    },\n    buttonSecondary: {\n      margin: theme.spacing(1, 0, 0, 0),\n      textTransform: \"none\",\n      fontSize: \"1em !important\",\n      color: \"white\", // TODO\n      backgroundColor: theme.palette.secondary.dark + \" !important\",\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.secondary.dark, -25)  + \" !important\",\n      },\n    },\n    buttonFederated: {\n      margin: theme.spacing(1, 0, 0, 0),\n      justifyContent: \"flex-start\",\n      paddingLeft: theme.spacing(5),\n      fontSize: \"1.3em\",\n    },  \n    buttonFederatedFacebook: {\n      backgroundColor: theme.palette.socialButtons.facebook.backgroundColor,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.socialButtons.facebook.backgroundColor, -25),\n      },\n    },\n    buttonFederatedGoogle: {\n      backgroundColor: theme.palette.socialButtons.google.backgroundColor,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.socialButtons.google.backgroundColor, -25),\n      },\n    },\n  \n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <Button\n      fullWidth={props.fullWidth}\n      variant={props.variant}\n      color={props.color}\n      size={props.size}\n      className={`${classes.button} ${props.social ? classes.buttonFederated : \"\"} ${props.social ? classes[\"buttonFederated\" + capitalize(props.social)] : \"\"} ${classes[props.className]}`}\n      startIcon={props.startIcon}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </Button>\n  );\n});\n\nFormButton.propTypes = {\n  social: PropTypes.oneOf([\n    \"Facebook\",\n    \"Google\",\n  ]),\n}\n\nFormButton.defaultProps = {\n  fullWidth: true,\n  variant: \"contained\",\n  color: \"primary\",\n  social: null,\n};\n\n\n\nconst FormCheckbox = React.memo((props) => {\n  const styles = theme => ({\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const classNameDisabled = props.disabled ? classes.disabled : \"\";\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={props.checked}\n          onChange={(e) => props.onChange(e.target.checked)}\n          className={`${props.className} ${classNameDisabled}`}\n          color={props.color}\n          size={props.size}\n          disabled={props.disabled}\n        />\n      }\n      label={\n        <FormText\n          className={`${props.className} ${classNameDisabled}`}\n        >\n          {props.children}\n        </FormText>\n      }\n    />\n  );\n});\n\nFormCheckbox.propTypes = {\n};\n\nFormCheckbox.defaultProps = {\n  checked: false,\n  color: \"primary\",\n  size: \"small\",\n};\n\n\n\nconst FormText = React.memo((props) => {\n  return (\n    <Typography\n      component={props.component}\n      variant={props.variant}\n      color={props.color}\n      align={props.align}\n      {...props}\n    >\n      {props.children}\n    </Typography>\n  );\n});\n\nFormText.propTypes = {\n};\n\nFormText.defaultProps = {\n  component: \"h1\",\n  variant: \"body2\",\n  color: \"textPrimary\",\n};\n\n\n\nconst FormLink = React.memo((props) => {\n  const styles = theme => ({\n    normal: {\n      cursor: \"pointer\",\n    },\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n        color: \"grey\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const className = props.disabled ? classes.disabled : classes.normal;\n\n  return (\n    <Link\n      href={props.href}\n      className={`${props.className} ${className}`}\n      color={props.color}\n      {...props}\n    >\n      {props.children}\n    </Link>\n  );\n});\n\nFormLink.propTypes = {\n};\n\nFormLink.defaultProps = {\n  color: \"textPrimary\",\n};\n\n\n\nconst FormDividerWithText = React.memo((props) => {\n  const styles = theme => ({\n    container: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginTop: theme.spacing(props.marginVertical),\n      marginBottom: theme.spacing(props.marginVertical),\n    },\n    divider: {\n      width: \"100%\",\n      borderBottom: \"1px solid \" + (props.color ? props.color : theme.palette.primary.dark),\n      paddingLeft: theme.spacing(1),\n    },\n    text: {\n      paddingLeft: theme.spacing(props.paddingHorizontal),\n      paddingRight: theme.spacing(props.paddingHorizontal),\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.divider} />\n      {props.children && <span className={classes.text}>\n        {props.children}\n      </span>}\n      <div className={classes.divider} />\n    </div>\n  );\n});\n\nFormDividerWithText.propTypes = {\n  color: PropTypes.string,\n  marginVertical: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n  paddingHorizontal: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n};\n\nFormDividerWithText.defaultProps = {\n  marginVertical: 1,\n  paddingHorizontal: 1,\n};\n\nexport {FormInput, FormButton, FormCheckbox, FormText, FormLink, FormDividerWithText};\n","export const validateEmail = (email) => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nexport const checkPassword = (password) => {\n  /**\n   * ^\t                The password string will start this way\n   * (?=.*[a-z])\t      The string must contain at least 1 lowercase alphabetical character\n   * (?=.*[A-Z])\t      The string must contain at least 1 uppercase alphabetical character\n   * (?=.*[0-9])\t      The string must contain at least 1 numeric character\n   * (?=.*[!@#$%^&*])\t  The string must contain at least one special character,\n   *                     but we are escaping reserved RegEx characters to avoid conflict\n   * (?=.{8,})\t        The string must be eight characters or longer\n   */\n  const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/;\n  return re.test(String(password));\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h2c0-1.66 1.34-3 3-3s3 1.34 3 3v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOpenOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z\"\n}), 'LockOpen');\n\nexports.default = _default;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport LockOpenOutlined from \"@material-ui/icons/LockOpenOutlined\";\nimport ConfirmationNumber from \"@material-ui/icons/ConfirmationNumber\";\nimport Lock from \"@material-ui/icons/Lock\";\nimport LockOpen from \"@material-ui/icons/LockOpen\";\nimport { forgotPassword, forgotPasswordSubmit, resendResetPasswordCode } from \"../../libs/TrackPromise\";\nimport { toast } from \"../Toast\";\nimport { FormInput, FormButton, FormText } from \"../FormElements\";\nimport { validateEmail, checkPassword } from \"../../libs/Validation\";\nimport config from \"../../config\";\nimport { ETBTAdd } from \"../../libs/I18n\"; // TODO: remove me when finished collecting serve errors\n\nconst styles = theme => ({\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n  },\n  fieldset: {\n    border: 0,\n  },\n});\nconst useStyles = makeStyles((theme) => (styles(theme)));\n\nfunction ForgotPassword() {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmed, setPasswordConfirmed] = useState(\"\");\n  const [error, setError] = useState({ email: null, password: null, passwordConfirmed: null, code: null });\n  const [waitingForCode, setWaitingForCode] = useState(false);\n  const [codeDeliveryMedium, setCodeDeliveryMedium] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const history = useHistory();\n  const { promiseInProgress } = usePromiseTracker({delay: config.spinner.delay});\n  const [openDialog, setOpenDialog] = useState(false);\n  const [dialogTitle, setDialogTitle] = useState(null);\n  const [dialogContent, setDialogContent] = useState(null);\n  const { t } = useTranslation();\n\n  const handleOpenDialog = (title, content) => {\n    setDialogTitle(title);\n    setDialogContent(content);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setDialogTitle(null);\n    setDialogContent(null);\n  };\n\n  const validateForm = () => { // validate email formally\n    if (!waitingForCode) {\n      if (!validateEmail(email)) {\n        const err = t(\"Please supply a valid email\");\n        toast.warning(err);\n        setError({ email: err });\n        return false;\n      }\n    }\n\n    if (waitingForCode) {\n      if (!checkPassword(password)) {\n        const err = t(\"Please supply a more complex password\");\n        toast.warning(err);\n        setError({ password: err });\n        return false;\n      }\n\n      if (!passwordConfirmed) {\n        const err = t(\"Please confirm the password\");\n        setError({ passwordConfirmed: err });\n        toast.warning(err);\n        return false;\n      }\n  \n      if (password !== passwordConfirmed) {\n        const err = t(\"The confirmed password does not match the password\");\n        toast.warning(err);\n        setError({ passwordConfirmed: err });\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  const formForgotPassword = (e) => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setError({});\n\n    forgotPassword(email, {\n      success: (data) => {\n        console.log(\"forgotPassword success:\", data);\n        setWaitingForCode(true);\n        setPassword(\"\");\n        switch (data.codeDeliveryMedium) {\n          default: // in future we could treat EMAIL/SMS/... separately...\n            const medium = data.CodeDeliveryDetails.AttributeName;\n            const email = data.CodeDeliveryDetails.Destination;\n            setCodeDeliveryMedium(medium);\n            ///toast.info(`Verification code sent via ${medium} to ${email}.\\nPlease open it and copy and paste it here.`);\n            handleOpenDialog(\n              t(\"Verification code sent\"),\n              t(`\\\nVerification code sent via {{medium}} to {{email}}.\nPlease copy and paste it here.`, {medium, email})\n            );\n        }\n      },\n      error: (err) => {\nconsole.error(\"forgotPassword error:\", err);\nETBTAdd(\"forgotPassword\", err);\n        toast.error(t(err.message));\n        setError({ email: err.message}); // TODO: should we always blame email input for error?\n      }\n    });\n  };\n  \n  const formConfirmForgotPassword = (e) => {\n    e.preventDefault();\n    setError({});\n    \n    forgotPasswordSubmit(email, code, password, {\n      success: data => {\n        console.log(\"confirmForgotPassword success data:\", data);\n        setWaitingForCode(false);\n        setEmail(\"\");\n        setPassword(\"\");\n        setPasswordConfirmed(\"\");\n        setCode(\"\");\n        ///toast.success(<div>Password reset successfully.<br />You can now sign in with your new password</div>);\n        handleOpenDialog(`Password reset success`, `You can now sign in with your new password`);\n        history.push(\"/signin\");\n      },\n      error: (err) => {\nconsole.error(\"confirmForgotPassword error:\", err);\n        ETBTAdd(\"confirmForgotPassword\", err);\n        toast.error(t(err.message));\n        setError({ password: err.message}); // TODO: check whom to blame for error\n      }\n    });\n  };\n  \n  const formResendResetPasswordCode = (e) => {\n    e.preventDefault();\n    setError({});\n\n    resendResetPasswordCode('x'+email, {\n      success: (data) => {\n        console.log(\"resendResetPasswordCode success data:\", data);\n        toast.info(\"Code resent successfully\");\n      },\n      error: (err) => {\nconsole.error(\"resendResetPasswordCode error:\", err);\nETBTAdd(\"resendResetPasswordCode\", err);\n        switch (err.code) {\n          case \"ExpiredCodeException\":\n            setError({ confirmationCode: err }); // blame confirmationCode field as guilty\n            break;\n          default:\n            setError({}); // we don't know whom to blame\n        }\n        toast.error(t(err.message));\n      },\n    });\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <fieldset disabled={promiseInProgress} className={classes.fieldset}>\n          {!waitingForCode && (\n            <>\n\n{/* <FormButton onClick={formTestETBT}>{\"TEST ETBT\"}</FormButton> */}\n\n              <Box m={1} />\n\n              <Grid container justifyContent=\"center\">\n                <Avatar className={classes.avatar}>\n                  <LockOpenOutlined />\n                </Avatar>\n              </Grid>\n\n              <Box m={3} />\n\n              <Grid container justifyContent=\"flex-start\">\n                <FormText>\n                  {t(\"Reset password\")}\n                </FormText>\n              </Grid>\n\n              <Box m={1} />\n\n              <FormInput\n                autoFocus\n                id={\"email\"}\n                value={email}\n                onChange={setEmail}\n                placeholder={t(\"Email\")}\n                startAdornmentIcon={<LockOpen />}\n                error={error.email}\n              />\n\n              <Box m={1} />\n\n              <FormButton\n                onClick={formForgotPassword}\n              >\n                {t(\"Request password reset\")}\n              </FormButton>\n              \n            </>\n          )}\n          {waitingForCode && (\n            <>\n\n              <FormInput\n                id={\"password\"}\n                type=\"password\"\n                value={password}\n                onChange={setPassword}\n                placeholder={t(\"New password\")}\n                startAdornmentIcon={<Lock />}\n                error={error.password}\n              />\n\n              <FormInput\n                id={\"passwordConfirmed\"}\n                type=\"password\"\n                value={passwordConfirmed}\n                onChange={setPasswordConfirmed}\n                placeholder={t(\"New password confirmation\")}\n                startAdornmentIcon={<Lock />}\n                error={error.passwordConfirmed}\n              />\n\n              <FormInput\n                id={\"confirmationCode\"}\n                type=\"number\"\n                value={code}\n                onChange={setCode}\n                placeholder={t(\"Numeric code just received by {{codeDeliveryMedium}}\", {codeDeliveryMedium})}\n                startAdornmentIcon={<ConfirmationNumber />}\n                error={error.confirmationCode}\n              />\n\n              <Box m={1} />\n\n              <FormButton\n                onClick={formConfirmForgotPassword}\n              >\n                {t(\"Confirm Password Reset\")}\n              </FormButton>\n\n              <Grid container justifyContent=\"flex-end\">\n                <FormButton\n                  onClick={formResendResetPasswordCode}\n                  fullWidth={false}\n                  className={\"buttonSecondary\"}\n                >\n                  {t(\"Resend code\")}\n                </FormButton>\n              </Grid>\n\n            </>\n          )}\n        </fieldset>\n      </form>\n\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {dialogTitle}\n        </DialogTitle>\n        <DialogContent id=\"alert-dialog-description\">\n          <Typography variant=\"body1\" style={{whiteSpace: 'pre-line'}}>\n            {dialogContent}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <FormButton\n            onClick={handleCloseDialog}\n            fullWidth={false}\n            className={\"buttonSecondary\"}\n            autoFocus\n          >\n            {t(\"Ok\")}\n          </FormButton>\n        </DialogActions>\n      </Dialog>\n\n    </Container>\n  );\n}\n\nexport default React.memo(ForgotPassword);"],"sourceRoot":""}