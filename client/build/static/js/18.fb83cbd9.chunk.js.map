{"version":3,"sources":["services/UserService.js","components/PaymentRedirect.js"],"names":["UserService","getProfile","api","get","then","response","data","error","updateProfile","email","password","firstName","lastName","address","fiscalCode","businessName","post","updateUserProperty","userId","propertyName","propertyValue","updatePlan","plan","console","log","getRoles","roles","updateRoles","getPublicContent","getUserBoard","getModeratorBoard","getAdminBoard","getAdminPanel","PaymentRedirect","props","history","useHistory","t","useTranslation","useLocation","pathname","search","useEffect","status","match","planName","URLSearchParams","result","Error","toast","errorMessage","success","warn","push","tabValue","React","memo"],"mappings":"+HAAA,YAkHMA,EAAc,CAClBC,WAjHiB,WACjB,OAAOC,IAAIC,IAAI,oBAAoBC,MACjC,SAAAC,GACE,OAAOA,EAASC,QAElB,SAAAC,GACE,OAAOA,MA4GXC,cAvGoB,SAAC,GAA6F,IAA9EC,EAA6E,EAA7EA,MAAOC,EAAsE,EAAtEA,SAAUC,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aAC/F,OAAOb,IAAIc,KAAK,sBAAuB,CAErCP,QACAC,WACAC,YACAC,WACAC,UACAC,aACAC,iBACCX,MACD,SAAAC,GACE,OAAOA,EAASC,QAElB,SAAAC,GACE,OAAOA,MAyFXU,mBApFyB,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,cACjD,OAAOlB,IAAIc,KAAK,2BAA4B,CAC1CE,SACAC,eACAC,kBACChB,MACD,SAAAC,GACE,OAAOA,EAASC,QAElB,SAAAC,GACE,OAAOA,MA2EXc,WAtEiB,SAAAC,GAEjB,OADAC,QAAQC,IAAI,qBAAsBF,GAC3BpB,IAAIc,KAAK,mBACdM,GACAlB,MACA,SAAAC,GACE,OAAOA,EAASC,QAElB,SAAAC,GACE,OAAOA,MA8DXkB,SAzDe,SAAAC,GACf,OAAOxB,IAAIC,IAAI,kBAAkBC,MAC/B,SAAAC,GACE,OAAOA,EAASC,QAElB,SAAAC,GACE,OAAOA,MAoDXoB,YA/CkB,SAAAD,GAClB,OAAOxB,IAAIc,KAAK,oBACdU,GACAtB,MACA,SAAAC,GACE,OAAOA,EAASC,QAElB,SAAAC,GACE,OAAOA,MAwCXqB,iBAnCuB,WACvB,OAAO1B,IAAIC,IAAI,cAmCf0B,aAhCmB,WACnB,OAAO3B,IAAIC,IAAI,eAgCf2B,kBA7BwB,WACxB,OAAO5B,IAAIC,IAAI,cA6Bf4B,cA1BoB,WACpB,OAAO7B,IAAIC,IAAI,gBA0Bf6B,cAvBoB,WACpB,OAAO9B,IAAIC,IAAI,wBACbC,MACA,SAACC,GACC,OAAOA,EAASC,QAElB,SAACC,GACC,OAAOA,OAmBEP,O,iCChIf,4EAOA,SAASiC,EAAgBC,GACvB,IAAMC,EAAUC,cACRC,EAAMC,cAAND,EACR,EAA6BE,cAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAkClB,OAhCAC,qBAAU,WACR,IAAMC,EACJH,EAASI,MAAM,oBAAsB,UACrCJ,EAASI,MAAM,mBAAqB,SACpC,UAGIC,EADc,IAAIC,gBAAgBL,GACXtC,IAAI,WAElB,YAAXwC,EACF3C,IAAYqB,WAAW,CACrBC,KAAMuB,IACLzC,MACD,SAAA2C,GACE,GAAIA,aAAkBC,MAGpB,OAFAzB,QAAQhB,MAAM,uBAAwBwC,QACtCE,IAAM1C,MAAM2C,YAAaH,IAG3BxB,QAAQC,IAAI,oCAAqCuB,GACjDE,IAAME,QAAQd,EAAE,iCAKpBd,QAAQ6B,KAAK,mCAAoCZ,GAInDL,EAAQkB,KAAK,WAAY,CAAEC,SAAU,OAGhC,6BAIMC,cAAMC,KAAKvB","file":"static/js/18.fb83cbd9.chunk.js","sourcesContent":["import api from \"./API\";\n\nconst getProfile = () => {\n  return api.get(\"/user/getProfile\").then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst updateProfile = ({/*username, */email, password, firstName, lastName, address, fiscalCode, businessName}) => {\n  return api.post(\"/user/updateProfile\", {\n    //username,\n    email,\n    password,\n    firstName,\n    lastName,\n    address,\n    fiscalCode,\n    businessName,\n  }).then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst updateUserProperty = ({userId, propertyName, propertyValue}) => {\n  return api.post(\"/user/updateUserProperty\", {\n    userId,\n    propertyName,\n    propertyValue,\n  }).then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst updatePlan = plan => {\n  console.log(\"updatePlan - plan:\", plan);\n  return api.post(\"/user/updatePlan\",\n    plan,\n  ).then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst getRoles = roles => {\n  return api.get(\"/user/getRoles\").then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst updateRoles = roles => {\n  return api.post(\"/user/updateRoles\",\n    roles,\n  ).then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst getPublicContent = () => {\n  return api.get(\"/test/all\");\n};\n\nconst getUserBoard = () => {\n  return api.get(\"/test/user\");\n};\n\nconst getModeratorBoard = () => {\n  return api.get(\"/test/mod\");\n};\n\nconst getAdminBoard = () => {\n  return api.get(\"/test/admin\");\n};\n\nconst getAdminPanel = () => {\n  return api.get(\"/admin/getAdminPanel\"\n  ).then(\n    (response) => {\n      return response.data;\n    },\n    (error) => {\n      return error;\n    }\n  );\n};\n\nconst UserService = {\n  getProfile,\n  updateProfile,\n  updateUserProperty,\n  updatePlan,\n  getRoles,\n  updateRoles,\n  getPublicContent,\n  getUserBoard,\n  getModeratorBoard,\n  getAdminBoard,\n  getAdminPanel,\n};\n\nexport default UserService;\n","import React, { useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport UserService from \"../services/UserService\";\nimport { errorMessage } from \"../libs/Misc\";\nimport { toast } from \"./Toast\";\n\nfunction PaymentRedirect(props) {\n  const history = useHistory();\n  const { t } = useTranslation();\n  const { pathname, search } = useLocation();\n\n  useEffect(() => {\n    const status =\n      pathname.match(\"/payment-success\") ? \"success\" :\n      pathname.match(\"/payment-cancel\") ? \"cancel\" :\n      \"unknown\"\n    ;\n    const queryParams = new URLSearchParams(search);\n    const planName = queryParams.get(\"product\");\n\n    if (status === \"success\") {\n      UserService.updatePlan({\n        plan: planName,\n      }).then(\n        result => {\n          if (result instanceof Error) {\n            console.error(\"profileUpdate error:\", result);\n            toast.error(errorMessage(result));\n            return; //setError({ code: result.message });\n          }\n          console.log(\"*** updatePlan result OK (user?):\", result);\n          toast.success(t(\"Plan updated successfully\"));\n        }\n      );\n\n    } else {\n      console.warn(\"PaymentRedirect - path name was:\", pathname);\n    }\n\n    // redirect to profile, plans tab (2nd)\n    history.push(\"/profile\", { tabValue: 1 });\n  });\n\n  return <></>;\n}\n\n\nexport default React.memo(PaymentRedirect);"],"sourceRoot":""}