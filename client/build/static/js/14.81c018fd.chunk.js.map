{"version":3,"sources":["services/UserService.js","components/AdminPanel.js"],"names":["UserService","getProfile","console","log","api","get","then","response","data","error","updateProfile","email","password","firstName","lastName","address","fiscalCode","post","getPublicContent","getUserBoard","getModeratorBoard","getAdminBoard","getAdminPanel","useStyles","makeStyles","theme","adminPanel","fontSize","AdminPanel","classes","t","useTranslation","useState","content","setContent","useEffect","result","Error","toast","errorMessage","className","container","spacing","direction","justifyContent","alignItems","JSON","stringify","React","memo"],"mappings":"+HAAA,YA8DMA,EAAc,CAClBC,WA7DiB,WAEjB,OADFC,QAAQC,IAAI,sBACHC,IAAIC,IAAI,oBAAoBC,MACjC,SAAAC,GACE,OAAOA,EAASC,QAElB,SAAAC,GACE,OAAOA,MAuDXC,cAlDoB,SAAC,GAA+E,IAAhEC,EAA+D,EAA/DA,MAAOC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WACnF,OAAOZ,IAAIa,KAAK,sBAAuB,CAErCN,QACAC,WACAC,YACAC,WACAC,UACAC,eACCV,MACD,SAAAC,GACE,OAAOA,EAASC,QAElB,SAAAC,GACE,OAAOA,MAqCXS,iBA/BuB,WACvB,OAAOd,IAAIC,IAAI,cA+Bfc,aA5BmB,WACnB,OAAOf,IAAIC,IAAI,eA4Bfe,kBAzBwB,WACxB,OAAOhB,IAAIC,IAAI,cAyBfgB,cAtBoB,WACpB,OAAOjB,IAAIC,IAAI,gBAsBfiB,cAnBoB,WACpB,OAAOlB,IAAIC,IAAI,wBACbC,MACA,SAACC,GACC,OAAOA,EAASC,QAElB,SAACC,GACC,OAAOA,OAeET,O,+HC9DTuB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCC,WAAY,CACTC,SAAU,aAMd,SAASC,IACR,IAAMC,EAAUN,IACPO,EAAMC,cAAND,EACR,EAA8BE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAZAC,qBAAU,WACRnC,IAAYsB,gBAAgBhB,MAC1B,SAAA8B,GACMA,aAAkBC,MACpBC,IAAM7B,MAAM8B,YAAaH,IAG3BF,EAAWE,QAGd,IAGD,sBAAKI,UAAWX,EAAQH,WAAxB,oBACMI,EAAE,gBACN,gCACE,gCAAQA,EAAE,YACV,cAAC,IAAD,CACEW,WAAS,EACTC,QAAS,EACTC,UAAU,MACVC,eAAe,aACfC,WAAW,aALb,SAOE,8BAEIC,KAAKC,UAAUd,EAAS,KAAM,aA2C7Be,cAAMC,KAAKrB","file":"static/js/14.81c018fd.chunk.js","sourcesContent":["import api from \"./API\";\n\nconst getProfile = () => {\nconsole.log(\"Service getProfile\");\n  return api.get(\"/user/getProfile\").then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst updateProfile = ({/*username, */email, password, firstName, lastName, address, fiscalCode}) => {\n  return api.post(\"/user/updateProfile\", {\n    //username,\n    email,\n    password,\n    firstName,\n    lastName,\n    address,\n    fiscalCode,\n  }).then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\n\nconst getPublicContent = () => {\n  return api.get(\"/test/all\");\n};\n\nconst getUserBoard = () => {\n  return api.get(\"/test/user\");\n};\n\nconst getModeratorBoard = () => {\n  return api.get(\"/test/mod\");\n};\n\nconst getAdminBoard = () => {\n  return api.get(\"/test/admin\");\n};\n\nconst getAdminPanel = () => {\n  return api.get(\"/admin/getAdminPanel\"\n  ).then(\n    (response) => {\n      return response.data;\n    },\n    (error) => {\n      return error;\n    }\n  );\n};\n\nconst UserService = {\n  getProfile,\n  updateProfile,\n  getPublicContent,\n  getUserBoard,\n  getModeratorBoard,\n  getAdminBoard,\n  getAdminPanel,\n};\n\nexport default UserService;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useTranslation } from \"react-i18next\";\nimport { errorMessage } from \"../libs/Misc\";\nimport UserService from \"../services/UserService\";\nimport { toast } from \"./Toast\";\n//import moment from \"moment\";\n//import \"moment/locale/it\"; // import all needed locales...\n\nconst useStyles = makeStyles(theme => ({\n\tadminPanel: {\n    fontSize: \"1.1em\",\n\t},\n}));\n\n\n\nfunction AdminPanel() {\n\tconst classes = useStyles();\n  const { t } = useTranslation();\n  const [content, setContent] = useState({});\n\n  //moment.locale(\"it\");\n\n  useEffect(() => {\n    UserService.getAdminPanel().then(\n      result => {\n        if (result instanceof Error) {\n          toast.error(errorMessage(result));\n          return; // setContent(errorMessage(result));\n        }\n        setContent(result);\n      },\n    );\n  }, []);\n\n  return (\n    <div className={classes.adminPanel}>\n      {`${t(\"Admin Panel\")}`}\n      <div>\n        <label>{t(\"Users:\")}</label>\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justifyContent=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <pre>\n            {\n              JSON.stringify(content, null, 2)\n            }\n          </pre>\n          {/* {\n            data.users ? data.users.map(user => (\n              <Grid item xs={12} key={user._id}>\n                <Card>\n                  <CardContent style={{ fontSize: \"0.9em\" }}>\n                    <Typography color=\"text.primary\">\n                      {`${user.firstName} ${user.lastName}`}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {user.email}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {t(\"Roles\") + \":\"} {user.roles.length ? user.roles.join(\", \") : \"user\"}{// \"user\" is default role}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {t(\"Verified\") + \":\"} {user.isVerified ? t(\"yes\") : t(\"no\")}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {t(\"Created on\") + \":\"} {moment(user.createdAt).locale(\"it\").format(\"YYYY-MM-DD\")}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {t(\"Updated on\") + \":\"} {moment(user.updatedAt).locale(\"it\").format(\"YYYY-MM-DD\")}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {t(\"Access token\") + \":\"} {user.accessToken}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {\"Content:\"} {content}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            )) : \"...\"\n          } */}\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(AdminPanel);"],"sourceRoot":""}