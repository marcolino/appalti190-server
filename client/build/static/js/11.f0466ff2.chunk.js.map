{"version":3,"sources":["components/FlexibleDialog.js","libs/Styling.js","components/FormElements.js","../node_modules/@mui/icons-material/Person.js","../node_modules/@mui/icons-material/Email.js","../node_modules/@mui/icons-material/AccountCircleOutlined.js","components/auth/SignUp.js"],"names":["FlexibleDialog","title","contentText","actions","props","onBackdropClick","onClose","event","reason","map","action","index","onClick","callback","closeModal","variant","autoFocus","style","textTransform","text","defaultProps","React","memo","shadeColor","color","amount","replace","Math","min","max","parseInt","toString","substr","FormInput","classes","makeStyles","theme","startAdornment","backgroundColor","height","maxHeight","marginLeft","marginRight","paddingLeft","paddingRight","borderRight","endAdornment","borderLeft","textField","useStyles","TextField","id","type","value","required","autoComplete","fullWidth","label","size","margin","className","placeholder","onChange","e","target","disabled","error","isEmptyObject","InputProps","startAdornmentIcon","InputAdornment","startAdornmentClass","position","endAdornmentIcon","endAdornmentClass","input","FormButton","button","spacing","fontSize","palette","success","main","buttonSecondary","secondary","dark","buttonFederated","justifyContent","buttonFederatedFacebook","socialButtons","facebook","buttonFederatedGoogle","google","styles","Button","social","capitalize","startIcon","children","cursor","textDecoration","classNameDisabled","FormControlLabel","control","Checkbox","checked","FormText","Typography","component","align","FormLink","normal","decoration","Link","href","FormDividerWithText","container","display","alignItems","marginTop","marginVertical","marginBottom","divider","width","borderBottom","primary","paddingHorizontal","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","avatar","columnLeft","columnRight","fieldset","border","paddingTop","paddingBottom","SignUp","history","useHistory","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","passwordConfirmed","setPasswordConfirmed","codeDeliveryMedium","setCodeDeliveryMedium","waitingForCode","setWaitingForCode","code","setCode","setError","xs","horizontalSpacing","formState","setFormState","t","useTranslation","showModal","useModal","openDialog","useEffect","unverifiedEmail","URLSearchParams","location","search","get","setResponsiveness","window","innerWidth","config","ui","extraSmallWatershed","prevState","rowSpacing","addEventListener","removeEventListener","formSignUpCompleted","push","maxWidth","form","noValidate","m","direction","item","sm","preventDefault","validateEmail","err","toast","warning","validatePassword","validateFormStep1","AuthService","signup","address","then","result","Error","response","data","errorMessage","console","info","medium","toLowerCase","RouterLink","to","length","validateFormStep2","signupConfirm","message","resendSignUpCode"],"mappings":"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","file":"static/js/11.f0466ff2.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@mui/material';\n\nconst FlexibleDialog = ({ title, contentText, actions, ...props }) => (\n  <Dialog\n    {...props}\n    onBackdropClick={() => {} /* disable modal close on backdrop click */}\n    //disableScrollLock={false}\n    //disableEnforceFocus={false}\n    aria-labelledby={title}\n    onClose={(event, reason) => { /* console.log(\"REASON:\", reason); */ }}\n  >\n    <DialogTitle>{title}</DialogTitle>\n    <DialogContent>\n      <DialogContentText>{contentText}</DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      {actions.map((action, index) => (\n        <Button\n          key={index}\n          onClick={() => {\n            if (action.callback) action.callback();\n            if (action.closeModal) props.onClose();\n          }}\n          variant={action.variant === \"primary\" ? \"contained\" : action.variant === \"secondary\" ? \"outlined\" : \"contained\"}\n          autoFocus={props}\n          style={{textTransform: \"none\"}} // do not uppercase button text\n        >\n          {action.text}\n        </Button>\n      ))}\n    </DialogActions>\n  </Dialog>\n);\n\nFlexibleDialog.propTypes = {\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      closeModal: PropTypes.bool,\n      callback: PropTypes.func,\n      variant: PropTypes.oneOf([\n        \"primary\", \"secondary\",\n      ]),\n      autoFocus: PropTypes.bool,\n    })\n  ),\n};\n\nFlexibleDialog.defaultProps = {\n  title: \"\",\n  contentText: \"\",\n  actions: [\n    {\n      text: \"Ok\",\n      closeModal: true,\n      callback: () => {},\n      variant: \"primary\",\n      autoFocus: false,\n    }\n  ],\n};\n\nexport default React.memo(FlexibleDialog);","/**\n * Shade a color by an amount [-100 - 100] (negative is darker, positive is ligher).\n */\nexport const shadeColor = (color, amount) => {\n  return \"#\" + color.replace(/^#/, \"\").replace(/../g, color => (\"0\" + Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)).substr(-2));\n}\n","import React/*, { useState }*/ from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\n//import Tooltip, { TooltipProps } from '@mui/material/Tooltip';\nimport Typography from \"@mui/material/Typography\";\nimport { makeStyles } from \"@mui/styles\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { shadeColor } from \"../libs/Styling\";\nimport { capitalize, isEmptyObject } from \"../libs/Misc\";\n\n\n\nconst FormInput = React.memo((props) => {\n  const styles = theme => ({\n    startAdornment: {\n      backgroundColor: \"#efefff\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: -15,\n      marginRight: 5,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRight: \"1px solid #c5c5c5\",\n    },\n    endAdornment: {\n      backgroundColor: \"#efefff\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: 5,\n      marginRight: -15,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderLeft: \"1px solid #c5c5c5\",\n    },\n    textField: {\n      backgroundColor: \"#efefff\",\n    }\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <TextField\n      id={props.id}\n      type={props.type}\n      value={props.value}\n      required={props.required}\n      autoFocus={props.autoFocus}\n      autoComplete={props.autoComplete.toString()}\n      variant={props.variant}\n      fullWidth={props.fullWidth}\n      label={props.label}\n      size={props.size}\n      margin={props.margin}\n      className={props.className ? props.className : classes.textField}\n      placeholder={props.placeholder}\n      onChange={e => props.onChange(e.target.value)}\n      disabled={props.disabled}\n      error={!isEmptyObject(props.error)}\n      InputProps={{\n        startAdornment: props.startAdornmentIcon ? (\n          <InputAdornment\n            className={props.startAdornmentClass ? props.startAdornmentClass : classes.startAdornment}\n            position=\"start\"\n          >\n            {props.startAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        endAdornment: props.endAdornmentIcon ? (\n          <InputAdornment\n            className={props.endAdornmentClass ? props.endAdornmentClass : classes.endAdornment}\n            position=\"end\"\n          >\n            {props.endAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        className: classes.input,\n      }}\n    />\n  );\n});\n\nFormInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  startAdornmentClass: PropTypes.string,\n  startAdornmentIcon: PropTypes.object,\n  endAdornmentClass: PropTypes.string,\n  endAdornmentIcon: PropTypes.object,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n};\n\nFormInput.defaultProps = {\n  type: \"text\",\n  required: false,\n  autoFocus: false,\n  autoComplete: false,\n  variant: \"outlined\",\n  fullWidth: true,\n  label: \"\",\n  size: \"small\",\n  margin: \"dense\",\n  className: null,\n  placeholder: \"\",\n  startAdornmentClass: null,\n  endAdornmentClass: null,\n  disabled: false,\n  error: \"\",\n};\n\n\n\nconst FormButton = React.memo((props) => {\n  const styles = theme => ({\n    button: {\n      margin: theme.spacing(1, 0, 0, 0),\n      textTransform: \"none\",\n      fontSize: \"1.3em\",\n      color: \"white\",\n      backgroundColor: theme.palette.success.main,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.success.main, -25),\n      },\n    },\n    buttonSecondary: {\n      margin: theme.spacing(1, 0, 0, 0),\n      textTransform: \"none\",\n      fontSize: \"1em !important\",\n      color: \"white\",\n      backgroundColor: theme.palette.secondary.dark + \" !important\",\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.secondary.dark, -25)  + \" !important\",\n      },\n    },\n    buttonFederated: {\n      margin: theme.spacing(1, 0, 0, 0),\n      justifyContent: \"flex-start\",\n      paddingLeft: theme.spacing(5),\n      fontSize: \"1.3em\",\n    },  \n    buttonFederatedFacebook: {\n      backgroundColor: theme.palette.socialButtons.facebook.backgroundColor,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.socialButtons.facebook.backgroundColor, -25),\n      },\n    },\n    buttonFederatedGoogle: {\n      backgroundColor: theme.palette.socialButtons.google.backgroundColor,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.socialButtons.google.backgroundColor, -25),\n      },\n    },\n  \n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <Button\n      fullWidth={props.fullWidth}\n      variant={props.variant}\n      color={props.color}\n      size={props.size}\n      className={`${classes.button} ${props.social ? classes.buttonFederated : \"\"} ${props.social ? classes[\"buttonFederated\" + capitalize(props.social)] : \"\"} ${classes[props.className]}`}\n      startIcon={props.startIcon}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </Button>\n  );\n});\n\nFormButton.propTypes = {\n  social: PropTypes.oneOf([\n    \"Facebook\",\n    \"Google\",\n  ]),\n}\n\nFormButton.defaultProps = {\n  fullWidth: true,\n  variant: \"contained\",\n  color: \"primary\",\n  social: null,\n};\n\n\n\nconst FormCheckbox = React.memo((props) => {\n  const styles = theme => ({\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const classNameDisabled = props.disabled ? classes.disabled : \"\";\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={props.checked}\n          onChange={(e) => props.onChange(e.target.checked)}\n          className={`${props.className} ${classNameDisabled}`}\n          color={props.color}\n          size={props.size}\n          disabled={props.disabled}\n        />\n      }\n      label={\n        <FormText\n          className={`${props.className} ${classNameDisabled}`}\n        >\n          {props.children}\n        </FormText>\n      }\n    />\n  );\n});\n\nFormCheckbox.propTypes = {\n};\n\nFormCheckbox.defaultProps = {\n  checked: false,\n  color: \"primary\",\n  size: \"small\",\n};\n\n\n\nconst FormText = React.memo((props) => {\n  return (\n    <Typography\n      component={props.component}\n      variant={props.variant}\n      color={props.color}\n      align={props.align}\n      {...props}\n    >\n      {props.children}\n    </Typography>\n  );\n});\n\nFormText.propTypes = {\n};\n\nFormText.defaultProps = {\n  component: \"h1\",\n  variant: \"body2\",\n  color: \"textPrimary\",\n};\n\n\n\nconst FormLink = React.memo((props) => {\n  const styles = theme => ({\n    normal: {\n      cursor: \"pointer\",\n      textDecoration: props.decoration ? props.decoration : \"none\",\n    },\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n        color: \"grey\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const className = props.disabled ? classes.disabled : classes.normal;\n\n  return (\n    <Link\n      href={props.href}\n      className={`${props.className} ${className}`}\n      color={props.color}\n      {...props}\n    >\n      {props.children}\n    </Link>\n  );\n});\n\nFormLink.propTypes = {\n};\n\nFormLink.defaultProps = {\n  color: \"textPrimary\",\n};\n\n\n\nconst FormDividerWithText = React.memo((props) => {\n  const styles = theme => ({\n    container: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginTop: theme.spacing(props.marginVertical),\n      marginBottom: theme.spacing(props.marginVertical),\n    },\n    divider: {\n      width: \"100%\",\n      borderBottom: \"1px solid \" + (props.color ? props.color : theme.palette.primary.dark),\n      paddingLeft: theme.spacing(1),\n    },\n    text: {\n      paddingLeft: theme.spacing(props.paddingHorizontal),\n      paddingRight: theme.spacing(props.paddingHorizontal),\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.divider} />\n      {props.children && <span className={classes.text}>\n        {props.children}\n      </span>}\n      <div className={classes.divider} />\n    </div>\n  );\n});\n\nFormDividerWithText.propTypes = {\n  color: PropTypes.string,\n  marginVertical: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n  paddingHorizontal: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n};\n\nFormDividerWithText.defaultProps = {\n  marginVertical: 1,\n  paddingHorizontal: 1,\n};\n\n/*\nconst FormTooltip = ({ children, ...rest }: TooltipProps) => {\n  const [renderTooltip, setRenderTooltip] = useState(false);\n\n  return (\n    <div\n      onMouseEnter={() => !renderTooltip && setRenderTooltip(true)}\n      className=\"display-contents\"\n    >\n      {!renderTooltip && children}\n      {renderTooltip && (\n        <Tooltip {...rest}>\n          <span>\n            {children}\n          </span>\n        </Tooltip>\n      )}\n    </div>\n  );\n}\n\nconst _FormTooltip = React.memo((props) => {\n  const styles = theme => ({\n    normal: {\n      cursor: \"pointer\",\n      textDecoration: props.decoration ? props.decoration : \"none\",\n    },\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n        color: \"grey\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const className = props.disabled ? classes.disabled : classes.normal;\n\n  return (\n    <Tooltip\n      placement={props.placement}\n      enterDelay={props.enterDelay}\n      leaveDelay={props.leaveDelay}\n      {...props}\n    >\n      {props.children}\n    </Tooltip>\n  );\n});\n\nFormTooltip.propTypes = {\n  placement: PropTypes.string,\n  enterDelay: PropTypes.number,\n  leaveDelay: PropTypes.number,\n};\n\nFormTooltip.defaultProps = {\n  placement: \"left\",\n  enterDelay: 500,\n  leaveDelay: 200,\n};\n*/\n\nexport {FormInput, FormButton, FormCheckbox, FormText, FormLink, FormDividerWithText/*, FormTooltip*/};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33C4.62 15.49 4 13.82 4 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z\"\n}), 'AccountCircleOutlined');\n\nexports.default = _default;","import React, { useState, useEffect } from \"react\";\nimport { useHistory, Link as RouterLink } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useModal } from \"mui-modal-provider\";\nimport { makeStyles } from \"@mui/styles\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Grid from \"@mui/material/Grid\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport AccountCircleOutlined from \"@mui/icons-material/AccountCircleOutlined\";\nimport ConfirmationNumber from \"@mui/icons-material/ConfirmationNumber\";\nimport Person from \"@mui/icons-material/Person\";\nimport Email from \"@mui/icons-material/Email\";\nimport Lock from \"@mui/icons-material/Lock\";\nimport { errorMessage } from \"../../libs/Misc\";\nimport AuthService from \"../../services/AuthService\";\nimport { toast } from \"../Toast\";\nimport { FormInput, FormButton, FormText, FormLink } from \"../FormElements\";\nimport { validateEmail, validatePassword } from \"../../libs/Validation\";\nimport FlexibleDialog from \"../FlexibleDialog\";\nimport config from \"../../config\";\n\n\n\nconst styles = theme => ({\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n  },\n  columnLeft: {\n    marginLeft: theme.spacing(0.2),\n  },\n  columnRight: {\n    marginLeft: \"auto\",\n    marginRight: theme.spacing(0.2),\n  },\n  fieldset: {\n    border: 0,\n  },\n  title: {\n    width: \"100%\",\n    color: theme.palette.title.color,\n    //backgroundColor: '#ccc', //theme.palette.title.backgroundColor,\n    //borderRadius: 3,\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingTop: 3,\n    paddingBottom: 50,\n    paddingLeft: 10,\n    paddingRight: 10,\n  }\n});\nconst useStyles = makeStyles((theme) => (styles(theme)));\n\n\n\nfunction SignUp(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmed, setPasswordConfirmed] = useState(\"\");\n  const [codeDeliveryMedium, setCodeDeliveryMedium] = useState(\"\");\n  const [waitingForCode, setWaitingForCode] = useState(false);\n  const [code, setCode] = useState(\"\");\n  const [error, setError] = useState({});\n  const [formState, setFormState] = useState({ xs: true, horizontalSpacing: 0 });\n  const { t } = useTranslation();\n  const { showModal } = useModal();\n  const openDialog = (props) => showModal(FlexibleDialog, props);\n\n\n\n  useEffect(() => { // check user has unverified email; if so, show waiting for code mode\n    const query = new URLSearchParams(props.location.search);\n    const unverifiedEmail = query.get(\"unverifiedEmail\");\n    if (unverifiedEmail) {\n      setWaitingForCode(true);\n      setCodeDeliveryMedium(\"email\");\n      setEmail(unverifiedEmail);\n    }\n  }, [props]);\n  \n  // set up event listener to set correct grid rowSpacing based on inner width\n  useEffect(() => {\n    const setResponsiveness = () => {\n      window.innerWidth < config.ui.extraSmallWatershed\n        ? setFormState((prevState) => ({ ...prevState, xs: true, rowSpacing: 0 }))\n        : setFormState((prevState) => ({ ...prevState, xs: false, rowSpacing: 2 }));\n    };\n    setResponsiveness();\n    window.addEventListener(\"resize\", () => setResponsiveness());\n    return () => {\n      window.removeEventListener(\"resize\", () => setResponsiveness());\n    };\n  }, []);\n\n  const validateFormStep1 = () => {\n    // validate email formally\n    if (!validateEmail(email)) {\n      const err = t(\"Please supply a valid email\");\n      setError({ email: err });\n      toast.warning(err);\n      return false;\n    }\n\n    // check for password presence\n    if (!password) {\n      const err = t(\"Please supply a password\");\n      setError({ password: err });\n      toast.warning(err);\n      return false;\n    }\n\n    // check password for minimum complexity\n    if (!validatePassword(password)) {\n      const err = t(\"Please supply a more complex password\");\n      setError({ password: err });\n      toast.warning(err);\n      return false;\n    }\n\n    if (!passwordConfirmed) {\n      const err = t(\"Please confirm the password\");\n      setError({ passwordConfirmed: err });\n      toast.warning(err);\n      return false;\n    }\n\n    if (password !== passwordConfirmed) {\n      const err = t(\"The confirmed password does not match the password\");\n      setError({ passwordConfirmed: err });\n      toast.warning(err);\n      return false;\n    }\n\n    return true;\n  };\n\n  const validateFormStep2 = () => {\n    const err = t(\"The confirmed password does not match the password\");\n    if (code.length <= 0) {\n      setError({ code: err });\n      return false;\n    }\n    return true;\n  };\n\n  const formSignUp = (e) => {\n    e.preventDefault();\n    if (!validateFormStep1()) return;\n    setError({});\n\n    AuthService.signup({\n      email,\n      password,\n      firstName,\n      lastName,\n      address: {\n        //street: \"Via dei Ciclamini, 0\",\n        //city: \"Florence\",\n      },\n    }).then(\n      result => {\n        if (result instanceof Error) {\n          switch (result.response.data.code) {\n            case \"EmailExistsException\":\n              setError({ email: errorMessage(result) }); // since we use email as username, we blame email field as guilty\n              openDialog({\n                title: t(\"Email exists already\"),\n                contentText:\n                  t(\"This email is already present\") + `.\\n` +\n                  t(\"Do you want to sign in with that email?\"),\n                actions: [\n                  {\n                    text: t(\"Ok\"),\n                    autoFocus: true,\n                    closeModal: true,\n                    callback: () => history.push(\"/signin\"),\n                  },\n                  {\n                    text: t(\"No, I will retry with a different email\"),\n                    closeModal: true,\n                  }\n                ],\n              });      \n              break;\n            default:\n              setError({}); // we don't know whom to blame\n              toast.error(errorMessage(result));\n          }\n          return;\n        }\n        console.info(`signup code sent to ${email}`);\n        const medium = result?.codeDeliveryMedium?.toLowerCase();\n        toast.info(t(\"Confirmation code just sent by {{medium}}\", {medium}));\n        setCodeDeliveryMedium(medium);\n        setWaitingForCode(true);\n      },\n    );\n  };\n\n  const formConfirmSignUp = (e) => {\n    e.preventDefault();\n    if (!validateFormStep2()) return;\n    setError({});\n\n    AuthService.signupConfirm({\n      email,\n      code\n    }).then(\n      result => {\n        if (result instanceof Error) {\n          console.error(\"signupConfirm error:\", result);\n          toast.error(errorMessage(result));\n          return setError({ code: result.message });\n        }\n        console.info(`signup complete for ${email}`);\n        openDialog({\n          title: t(\"Registered successfully\"),\n          contentText: t(\"You can now sign in with email and password\") + \".\",\n          actions: [\n            {\n              text: t(\"Ok\"),\n              autoFocus: true,\n              closeModal: true,\n              callback: formSignUpCompleted,\n            },\n          ],\n        });\n      },\n    );\n  };\n  \n  const formResendSignUpCode = (e) => {\n    e.preventDefault();\n    setError({});\n    AuthService.resendSignUpCode({\n      email,\n    }).then(\n      result => {\n        if (result instanceof Error) {\n          toast.error(errorMessage(result));\n          return setError({ code: errorMessage(result) });\n        }\n        toast.info(t(\"Code resent successfully by {{codeDeliveryMedium}}\", {codeDeliveryMedium}));\n      }\n    );\n  };\n  \n  const formSignUpCompleted = () => {\n    setWaitingForCode(false);\n    setEmail(\"\");\n    setCode(\"\");\n    history.push(\"/signin\");\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <fieldset className={classes.fieldset}>\n          {!waitingForCode && (\n            <>\n\n              <Box m={1} />\n\n              <Grid container justifyContent=\"center\">\n                <Avatar className={classes.avatar}>\n                  <AccountCircleOutlined />\n                </Avatar>\n              </Grid>\n\n              <Box m={3} />\n\n              <Grid container justifyContent=\"flex-start\">\n                <FormText variant=\"subtitle1\" className={classes.title}>\n                  {t(\"Register with your data\")}\n                </FormText>\n              </Grid>\n\n              <Box m={3} />\n\n              <Grid container direction={\"row\"} spacing={formState.rowSpacing} >\n                <Grid item xs={12} sm={6}>\n                  <FormInput\n                    autoFocus\n                    id={\"firstName\"}\n                    value={firstName}\n                    onChange={setFirstName}\n                    placeholder={t(\"First Name\")}\n                    startAdornmentIcon={<Person />}\n                    error={error.firstName}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormInput\n                    id={\"lastName\"}\n                    value={lastName}\n                    onChange={setLastName}\n                    placeholder={t(\"Last Name\")}\n                    startAdornmentIcon={<Person />}\n                    error={error.lastName}\n                  />\n                </Grid>\n              </Grid>\n\n              <FormInput\n                id={\"email\"}\n                value={email}\n                onChange={setEmail}\n                placeholder={t(\"Email\")}\n                startAdornmentIcon={<Email />}\n                error={error.email}\n              />\n\n              <FormInput\n                id={\"password\"}\n                type=\"password\"\n                value={password}\n                onChange={setPassword}\n                placeholder={t(\"Password\")}\n                startAdornmentIcon={<Lock />}\n                error={error.password}\n              />\n\n              <FormInput\n                id={\"passwordConfirmed\"}\n                type=\"password\"\n                value={passwordConfirmed}\n                onChange={setPasswordConfirmed}\n                placeholder={t(\"Password confirmation\")}\n                startAdornmentIcon={<Lock />}\n                error={error.passwordConfirmed}\n              />\n\n              <Box m={1} />\n\n              <FormButton\n                onClick={formSignUp}\n              >\n                {t(\"Sign Up\")}\n              </FormButton>\n\n              <Box m={3} />\n\n              <Grid container justifyContent=\"flex-start\">\n                <FormText component=\"h6\" variant=\"caption\" color=\"textSecondary\" align=\"center\">\n                  {t(\"By signing up you agree to our\")} <FormLink component={RouterLink} to=\"/terms-of-use\" color=\"textPrimary\">{t(\"terms of use\")}</FormLink> {\" \"}\n                  {t(\"and you confirm you have read our\")} <FormLink component={RouterLink} to=\"/privacy-policy\" color=\"textPrimary\">{t(\"privacy policy\")}</FormLink>\n                  {\", \"} {t(\"including cookie use\")} {\".\"}\n                </FormText>\n              </Grid>\n\n              <Box m={1} />\n\n            </>\n          )}\n          {waitingForCode && (\n            <>\n              <FormInput\n                id={\"signUpCode\"}\n                type=\"number\"\n                value={code}\n                onChange={setCode}\n                placeholder={t(\"Numeric code just received by {{codeDeliveryMedium}}\", {codeDeliveryMedium})}\n                startAdornmentIcon={<ConfirmationNumber />}\n                error={error.code}\n              />\n\n              <FormButton\n                onClick={formConfirmSignUp}\n              >\n                {t(\"Confirm Sign Up\")}\n              </FormButton>\n\n              <Box m={2} />\n\n              <Grid container justifyContent=\"flex-end\">\n                <FormLink\n                  decoration=\"underline\"\n                  onClick={formResendSignUpCode}\n                >\n                  {t(\"Resend code\")}\n                </FormLink>\n              </Grid>\n            </>\n          )}\n        </fieldset>\n      </form>\n\n    </Container>\n  );\n}\n\nexport default React.memo(SignUp);\n"],"sourceRoot":""}