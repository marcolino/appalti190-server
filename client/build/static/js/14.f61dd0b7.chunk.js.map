{"version":3,"sources":["components/FlexibleDialog.js","libs/Styling.js","components/FormElements.js","services/UserService.js","assets/images/SelectedPlan-en.png","assets/images/SelectedPlan-it.png","assets/images/SelectedPlan-fr.png","components/Pricing.js","services/PaymentService.js","components/auth/Profile.js"],"names":["FlexibleDialog","title","contentText","actions","props","onBackdropClick","onClose","event","reason","map","action","index","onClick","callback","closeModal","variant","autoFocus","style","textTransform","text","defaultProps","React","memo","shadeColor","color","amount","replace","Math","min","max","parseInt","toString","substr","FormInput","classes","makeStyles","theme","startAdornment","backgroundColor","height","maxHeight","marginLeft","marginRight","paddingLeft","paddingRight","borderRight","endAdornment","borderLeft","textField","useStyles","TextField","id","type","value","required","autoComplete","fullWidth","label","size","margin","className","placeholder","onChange","e","target","disabled","error","isEmptyObject","InputProps","startAdornmentIcon","InputAdornment","startAdornmentClass","position","endAdornmentIcon","endAdornmentClass","input","FormButton","button","spacing","fontSize","palette","success","main","buttonSecondary","secondary","dark","buttonFederated","justifyContent","buttonFederatedFacebook","socialButtons","facebook","buttonFederatedGoogle","google","styles","Button","social","capitalize","startIcon","children","cursor","textDecoration","classNameDisabled","FormControlLabel","control","Checkbox","checked","FormText","Typography","component","align","FormLink","normal","decoration","Link","href","FormDividerWithText","container","display","alignItems","marginTop","marginVertical","marginBottom","divider","width","borderBottom","primary","paddingHorizontal","UserService","getProfile","api","get","then","response","data","updateProfile","email","password","firstName","lastName","address","fiscalCode","businessName","post","updateUserProperty","userId","propertyName","propertyValue","getAllPlans","plans","updatePlan","plan","console","log","getAllRoles","roles","updateRoles","getPublicContent","getUserBoard","getModeratorBoard","getAdminBoard","getAllUsersWithFullInfo","section","cardHeader","paddingTop","cardHeaderActive","cardHeaderTest","paddingBottom","cardTest","borderRadius","fontWeight","padding","card","transition","border","boxShadow","cardActive","cardActiveImage","maxWidth","transform","opacity","zIndex","cardHr","Pricing","t","useTranslation","showModal","useModal","useState","perMonth","setPerMonth","setPlans","useEffect","result","toast","errorMessage","isActivePlan","p","currentPlan","name","getCurrentLanguage","i18n","language","selectedPlanImage","SelectedPlanImage_en","SelectedPlanImage_it","SelectedPlanImage_fr","Container","Box","py","textAlign","mb","gutterBottom","pricePerMonth","pricePerYear","Switch","Grid","item","xs","md","length","src","alt","Card","join","CardHeader","titleTypographyProps","paymentMode","CardContent","px","currencyISO4217ToSymbol","priceCurrency","cigNumberAllowed","Number","MAX_SAFE_INTEGER","cigs","supportTypes","supportType","openDialog","onPlanSelected","canForcePlan","mt","onPlanForced","mode","a","createCheckoutSession","product","PaymentService","root","flexGrow","avatar","columnLeft","columnRight","form","fieldset","fieldsetPersonalData","borderStyle","borderColor","fieldsetCompanyData","fieldsetAddress","formControlSelectPlan","minWidth","formControlSelectRole","tab","light","tabIndicator","a11yProps","ProfileTabPanel","other","role","hidden","Profile","history","useHistory","TokenService","getUser","user","setUser","profile","setProfile","setEmail","setFirstName","setLastName","setFiscalCode","setBusinessName","setAddress","addressStreet","setAddressStreet","addressStreetNo","setAddressStreetNo","addressCity","setAddressCity","addressProvince","setAddressProvince","addressZip","setAddressZip","addressCountry","setAddressCountry","setPaymentMode","setPlan","setRoles","rolesNames","setRolesNames","setError","location","state","tabValue","setTabValue","anyProfileChanges","setAnyProfileChanges","anyRolesChanges","setAnyRolesChanges","anyPlanChanges","setAnyPlanChanges","useBeforeunload","preventDefault","unblock","block","window","confirm","street","streetNo","city","province","zip","country","goBack","Error","code","message","userCanUpdateRoles","includes","userCanForcePlan","m","Avatar","AppBar","Tabs","newValue","indicator","Tab","noValidate","v","direction","columnSpacing","sm","lg","rowSpacing","session","url","planName","find","EventBus","dispatch","reload","FormControl","InputLabel","Select","labelId","multiple","MenuItem","warn","String","split","every","config","rolesNamesDefault"],"mappings":"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","file":"static/js/14.f61dd0b7.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@mui/material';\n\nconst FlexibleDialog = ({ title, contentText, actions, ...props }) => (\n  <Dialog\n    {...props}\n    onBackdropClick={() => {} /* disable modal close on backdrop click */}\n    //disableScrollLock={false}\n    //disableEnforceFocus={false}\n    aria-labelledby={title}\n    onClose={(event, reason) => { /* console.log(\"REASON:\", reason); */ }}\n  >\n    <DialogTitle>{title}</DialogTitle>\n    <DialogContent>\n      <DialogContentText>{contentText}</DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      {actions.map((action, index) => (\n        <Button\n          key={index}\n          onClick={() => {\n            if (action.callback) action.callback();\n            if (action.closeModal) props.onClose();\n          }}\n          variant={action.variant === \"primary\" ? \"contained\" : action.variant === \"secondary\" ? \"outlined\" : \"contained\"}\n          autoFocus={props}\n          style={{textTransform: \"none\"}} // do not uppercase button text\n        >\n          {action.text}\n        </Button>\n      ))}\n    </DialogActions>\n  </Dialog>\n);\n\nFlexibleDialog.propTypes = {\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      closeModal: PropTypes.bool,\n      callback: PropTypes.func,\n      variant: PropTypes.oneOf([\n        \"primary\", \"secondary\",\n      ]),\n      autoFocus: PropTypes.bool,\n    })\n  ),\n};\n\nFlexibleDialog.defaultProps = {\n  title: \"\",\n  contentText: \"\",\n  actions: [\n    {\n      text: \"Ok\",\n      closeModal: true,\n      callback: () => {},\n      variant: \"primary\",\n      autoFocus: false,\n    }\n  ],\n};\n\nexport default React.memo(FlexibleDialog);","/**\n * Shade a color by an amount [-100 - 100] (negative is darker, positive is ligher).\n */\nexport const shadeColor = (color, amount) => {\n  return \"#\" + color.replace(/^#/, \"\").replace(/../g, color => (\"0\" + Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)).substr(-2));\n}\n","import React/*, { useState }*/ from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\n//import Tooltip, { TooltipProps } from '@mui/material/Tooltip';\nimport Typography from \"@mui/material/Typography\";\nimport { makeStyles } from \"@mui/styles\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { shadeColor } from \"../libs/Styling\";\nimport { capitalize, isEmptyObject } from \"../libs/Misc\";\n\n\n\nconst FormInput = React.memo((props) => {\n  const styles = theme => ({\n    startAdornment: {\n      backgroundColor: \"#efefff\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: -15,\n      marginRight: 5,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRight: \"1px solid #c5c5c5\",\n    },\n    endAdornment: {\n      backgroundColor: \"#efefff\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: 5,\n      marginRight: -15,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderLeft: \"1px solid #c5c5c5\",\n    },\n    textField: {\n      backgroundColor: \"#efefff\",\n    }\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <TextField\n      id={props.id}\n      type={props.type}\n      value={props.value}\n      required={props.required}\n      autoFocus={props.autoFocus}\n      autoComplete={props.autoComplete.toString()}\n      variant={props.variant}\n      fullWidth={props.fullWidth}\n      label={props.label}\n      size={props.size}\n      margin={props.margin}\n      className={props.className ? props.className : classes.textField}\n      placeholder={props.placeholder}\n      onChange={e => props.onChange(e.target.value)}\n      disabled={props.disabled}\n      error={!isEmptyObject(props.error)}\n      InputProps={{\n        startAdornment: props.startAdornmentIcon ? (\n          <InputAdornment\n            className={props.startAdornmentClass ? props.startAdornmentClass : classes.startAdornment}\n            position=\"start\"\n          >\n            {props.startAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        endAdornment: props.endAdornmentIcon ? (\n          <InputAdornment\n            className={props.endAdornmentClass ? props.endAdornmentClass : classes.endAdornment}\n            position=\"end\"\n          >\n            {props.endAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        className: classes.input,\n      }}\n    />\n  );\n});\n\nFormInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  startAdornmentClass: PropTypes.string,\n  startAdornmentIcon: PropTypes.object,\n  endAdornmentClass: PropTypes.string,\n  endAdornmentIcon: PropTypes.object,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n};\n\nFormInput.defaultProps = {\n  type: \"text\",\n  required: false,\n  autoFocus: false,\n  autoComplete: false,\n  variant: \"outlined\",\n  fullWidth: true,\n  label: \"\",\n  size: \"small\",\n  margin: \"dense\",\n  className: null,\n  placeholder: \"\",\n  startAdornmentClass: null,\n  endAdornmentClass: null,\n  disabled: false,\n  error: \"\",\n};\n\n\n\nconst FormButton = React.memo((props) => {\n  const styles = theme => ({\n    button: {\n      margin: theme.spacing(1, 0, 0, 0),\n      textTransform: \"none\",\n      fontSize: \"1.3em\",\n      color: \"white\",\n      backgroundColor: theme.palette.success.main,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.success.main, -25),\n      },\n    },\n    buttonSecondary: {\n      margin: theme.spacing(1, 0, 0, 0),\n      textTransform: \"none\",\n      fontSize: \"1em !important\",\n      color: \"white\",\n      backgroundColor: theme.palette.secondary.dark + \" !important\",\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.secondary.dark, -25)  + \" !important\",\n      },\n    },\n    buttonFederated: {\n      margin: theme.spacing(1, 0, 0, 0),\n      justifyContent: \"flex-start\",\n      paddingLeft: theme.spacing(5),\n      fontSize: \"1.3em\",\n    },  \n    buttonFederatedFacebook: {\n      backgroundColor: theme.palette.socialButtons.facebook.backgroundColor,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.socialButtons.facebook.backgroundColor, -25),\n      },\n    },\n    buttonFederatedGoogle: {\n      backgroundColor: theme.palette.socialButtons.google.backgroundColor,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.socialButtons.google.backgroundColor, -25),\n      },\n    },\n  \n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <Button\n      fullWidth={props.fullWidth}\n      variant={props.variant}\n      color={props.color}\n      size={props.size}\n      className={`${classes.button} ${props.social ? classes.buttonFederated : \"\"} ${props.social ? classes[\"buttonFederated\" + capitalize(props.social)] : \"\"} ${classes[props.className]}`}\n      startIcon={props.startIcon}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </Button>\n  );\n});\n\nFormButton.propTypes = {\n  social: PropTypes.oneOf([\n    \"Facebook\",\n    \"Google\",\n  ]),\n}\n\nFormButton.defaultProps = {\n  fullWidth: true,\n  variant: \"contained\",\n  color: \"primary\",\n  social: null,\n};\n\n\n\nconst FormCheckbox = React.memo((props) => {\n  const styles = theme => ({\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const classNameDisabled = props.disabled ? classes.disabled : \"\";\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={props.checked}\n          onChange={(e) => props.onChange(e.target.checked)}\n          className={`${props.className} ${classNameDisabled}`}\n          color={props.color}\n          size={props.size}\n          disabled={props.disabled}\n        />\n      }\n      label={\n        <FormText\n          className={`${props.className} ${classNameDisabled}`}\n        >\n          {props.children}\n        </FormText>\n      }\n    />\n  );\n});\n\nFormCheckbox.propTypes = {\n};\n\nFormCheckbox.defaultProps = {\n  checked: false,\n  color: \"primary\",\n  size: \"small\",\n};\n\n\n\nconst FormText = React.memo((props) => {\n  return (\n    <Typography\n      component={props.component}\n      variant={props.variant}\n      color={props.color}\n      align={props.align}\n      {...props}\n    >\n      {props.children}\n    </Typography>\n  );\n});\n\nFormText.propTypes = {\n};\n\nFormText.defaultProps = {\n  component: \"h1\",\n  variant: \"body2\",\n  color: \"textPrimary\",\n};\n\n\n\nconst FormLink = React.memo((props) => {\n  const styles = theme => ({\n    normal: {\n      cursor: \"pointer\",\n      textDecoration: props.decoration ? props.decoration : \"none\",\n    },\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n        color: \"grey\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const className = props.disabled ? classes.disabled : classes.normal;\n\n  return (\n    <Link\n      href={props.href}\n      className={`${props.className} ${className}`}\n      color={props.color}\n      {...props}\n    >\n      {props.children}\n    </Link>\n  );\n});\n\nFormLink.propTypes = {\n};\n\nFormLink.defaultProps = {\n  color: \"textPrimary\",\n};\n\n\n\nconst FormDividerWithText = React.memo((props) => {\n  const styles = theme => ({\n    container: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginTop: theme.spacing(props.marginVertical),\n      marginBottom: theme.spacing(props.marginVertical),\n    },\n    divider: {\n      width: \"100%\",\n      borderBottom: \"1px solid \" + (props.color ? props.color : theme.palette.primary.dark),\n      paddingLeft: theme.spacing(1),\n    },\n    text: {\n      paddingLeft: theme.spacing(props.paddingHorizontal),\n      paddingRight: theme.spacing(props.paddingHorizontal),\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.divider} />\n      {props.children && <span className={classes.text}>\n        {props.children}\n      </span>}\n      <div className={classes.divider} />\n    </div>\n  );\n});\n\nFormDividerWithText.propTypes = {\n  color: PropTypes.string,\n  marginVertical: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n  paddingHorizontal: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n};\n\nFormDividerWithText.defaultProps = {\n  marginVertical: 1,\n  paddingHorizontal: 1,\n};\n\n/*\nconst FormTooltip = ({ children, ...rest }: TooltipProps) => {\n  const [renderTooltip, setRenderTooltip] = useState(false);\n\n  return (\n    <div\n      onMouseEnter={() => !renderTooltip && setRenderTooltip(true)}\n      className=\"display-contents\"\n    >\n      {!renderTooltip && children}\n      {renderTooltip && (\n        <Tooltip {...rest}>\n          <span>\n            {children}\n          </span>\n        </Tooltip>\n      )}\n    </div>\n  );\n}\n\nconst _FormTooltip = React.memo((props) => {\n  const styles = theme => ({\n    normal: {\n      cursor: \"pointer\",\n      textDecoration: props.decoration ? props.decoration : \"none\",\n    },\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n        color: \"grey\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const className = props.disabled ? classes.disabled : classes.normal;\n\n  return (\n    <Tooltip\n      placement={props.placement}\n      enterDelay={props.enterDelay}\n      leaveDelay={props.leaveDelay}\n      {...props}\n    >\n      {props.children}\n    </Tooltip>\n  );\n});\n\nFormTooltip.propTypes = {\n  placement: PropTypes.string,\n  enterDelay: PropTypes.number,\n  leaveDelay: PropTypes.number,\n};\n\nFormTooltip.defaultProps = {\n  placement: \"left\",\n  enterDelay: 500,\n  leaveDelay: 200,\n};\n*/\n\nexport {FormInput, FormButton, FormCheckbox, FormText, FormLink, FormDividerWithText/*, FormTooltip*/};\n","import api from \"./API\";\n\nconst getProfile = () => {\n  return api.get(\"/user/getProfile\").then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst updateProfile = ({/*username, */email, password, firstName, lastName, address, fiscalCode, businessName}) => {\n  return api.post(\"/user/updateProfile\", {\n    //username,\n    email,\n    password,\n    firstName,\n    lastName,\n    address,\n    fiscalCode,\n    businessName,\n  }).then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst updateUserProperty = ({userId, propertyName, propertyValue}) => {\n  return api.post(\"/user/updateUserProperty\", {\n    userId,\n    propertyName,\n    propertyValue,\n  }).then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst getAllPlans = plans => {\n  return api.get(\"/user/getAllPlans\").then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst updatePlan = plan => {\n  console.log(\"updatePlan - plan:\", plan);\n  return api.post(\"/user/updatePlan\",\n    plan,\n  ).then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst getAllRoles = roles => {\n  return api.get(\"/user/getAllRoles\").then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst updateRoles = roles => {\n  return api.post(\"/user/updateRoles\",\n    roles,\n  ).then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst getPublicContent = () => {\n  return api.get(\"/test/all\");\n};\n\nconst getUserBoard = () => {\n  return api.get(\"/test/user\");\n};\n\nconst getModeratorBoard = () => {\n  return api.get(\"/test/mod\");\n};\n\nconst getAdminBoard = () => {\n  return api.get(\"/test/admin\");\n};\n\nconst getAllUsersWithFullInfo = () => {\n  return api.get(\"/user/getAllUsersWithFullInfo\"\n  ).then(\n    (response) => {\n      return response.data;\n    },\n    (error) => {\n      return error;\n    }\n  );\n};\n\nconst UserService = {\n  getProfile,\n  updateProfile,\n  updateUserProperty,\n  getAllPlans,\n  updatePlan,\n  getAllRoles,\n  updateRoles,\n  getPublicContent,\n  getUserBoard,\n  getModeratorBoard,\n  getAdminBoard,\n  getAllUsersWithFullInfo,\n};\n\nexport default UserService;\n","export default __webpack_public_path__ + \"static/media/SelectedPlan-en.85b85fc0.png\";","export default __webpack_public_path__ + \"static/media/SelectedPlan-it.a09948bf.png\";","export default __webpack_public_path__ + \"static/media/SelectedPlan-fr.749a5b1e.png\";","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { useModal } from \"mui-modal-provider\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport Switch from \"@mui/material/Switch\";\nimport FlexibleDialog from \"./FlexibleDialog\";\nimport i18n from \"i18next\";\nimport { toast } from \"./Toast\";\nimport SelectedPlanImage_en from \"../assets/images/SelectedPlan-en.png\";\nimport SelectedPlanImage_it from \"../assets/images/SelectedPlan-it.png\";\nimport SelectedPlanImage_fr from \"../assets/images/SelectedPlan-fr.png\";\nimport UserService from \"../services/UserService\";\nimport { getCurrentLanguage } from \"../libs/I18n\";\nimport { capitalize, currencyISO4217ToSymbol, errorMessage } from \"../libs/Misc\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  section: {\n  },\n  cardHeader: {\n    paddingTop: theme.spacing(3),\n  },\n  cardHeaderActive: {\n    //fontWeight: \"bold\",\n  },\n  cardHeaderTest: {\n    paddingBottom: 0,\n  },\n  cardTest: { // a style similar to Stripe's test tag\n    color: \"#bb571f\",\n    backgroundColor: \"#ffde92\",\n    borderRadius: 5,\n    fontSize: 14,\n    fontWeight: \"bold\",\n    padding: 2,\n    paddingLeft: 7,\n    paddingRight: 7,\n  },\n  card: {\n    transition: \"box-shadow .3s\",\n    borderRadius: 10,\n    border: \"1px solid #ccc\",\n    \"&:hover\": {\n      boxShadow: \"10px 10px 30px rgba(32, 32, 132, .5)\",\n    },\n  },\n  cardActive: {\n    backgroundColor: \"#e0e8ff\",\n  },\n  cardActiveImage: {\n    position: \"absolute\",\n    marginLeft: 50,\n    marginTop: -20,\n    maxWidth: 80,\n    transform: \"rotate(15deg)\",\n    opacity: 0.6,\n    zIndex: 999,\n  },\n  cardHr: {\n    border: \"1px solid #eee\",\n  },\n}));\n\n\n\nconst Pricing = props => {\nconsole.log(\"Pricing - props:\", props);\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { showModal } = useModal();\n  const openDialog = (props) => showModal(FlexibleDialog, props);\n  const [perMonth, setPerMonth] = React.useState(false);\n  const [plans, setPlans] = useState([]);\n\n  const handleChangePerMonth = (event) => {\n    setPerMonth(event.target.checked);\n  };\n\n  // get user plans on load\n  useEffect(() => {\n    UserService.getAllPlans().then(\n      result => {\n        setPlans(result.data);\n      },\n      error => {\n        toast.error(errorMessage(error));\n      }\n    );\n  }, [setPlans]);\n\n  const isActivePlan = (p) => {\n    return props.currentPlan.name === p.name;\n  };\n  \n  const [language] = useState(getCurrentLanguage(i18n));\n  let selectedPlanImage = null;\n  switch (language) {\n    case \"en\": selectedPlanImage = SelectedPlanImage_en; break;\n    case \"it\": selectedPlanImage = SelectedPlanImage_it; break;\n    case \"fr\": selectedPlanImage = SelectedPlanImage_fr; break;\n    default: selectedPlanImage = SelectedPlanImage_en; break;\n  }\n\n  return (\n    <section className={classes.section}>\n      <Container>\n        <Box py={0} textAlign=\"center\">\n          <Box mb={0}>\n            <Container maxWidth=\"lg\">\n              <Typography variant=\"h3\" component=\"h2\" gutterBottom={true}>\n                <Typography variant=\"h6\" component=\"span\" color=\"primary\">{t(\"Choose the plan which best suits your needs\")}</Typography>\n              </Typography>\n              {(\n                (typeof plans[0]?.pricePerMonth !== \"undefined\") &&\n                (typeof plans[0]?.pricePerYear !== \"undefined\")\n              ) && (\n                <div>\n                  <Typography variant=\"subtitle1\" component=\"span\">{t(\"per year\")}</Typography>\n                    <span>\n                      &nbsp;\n                      <Switch name=\"checkbox\" color=\"primary\" checked={perMonth} onChange={handleChangePerMonth} />\n                      &nbsp;\n                    </span>\n                  <Typography variant=\"subtitle1\" component=\"span\">{t(\"per month\")}</Typography>\n                </div>\n              )}\n            </Container>\n          </Box>\n          <Grid container spacing={3}>\n            {plans.map((p, index) => {\nconsole.log(\"P:\", p);\n              return (\n              <Grid key={index} item xs={12} md={parseInt(plans.length ? 12 / plans.length : 12)}>\n                {isActivePlan(p) && (\n                  <img className={classes.cardActiveImage} src={selectedPlanImage} alt={t(\"Selected plan stamp\")} />\n                )}\n                <Card\n                  variant=\"outlined\"\n                  className={[classes.card, isActivePlan(p) ? classes.cardActive : null, /*props.paymentMode !== \"live\" ? classes.cardRibbonTest : null*/].join(\" \")}\n                >\n                  <CardHeader\n                    title={capitalize(t(p.name))}\n                    className={[classes.cardHeader, isActivePlan(p) ? classes.cardHeaderActive : null].join(\" \")}\n                    titleTypographyProps={isActivePlan(p) ? { /*fontWeight: \"bold\"*/ } : {}}\n                  >\n                  </CardHeader>\n                  {props.paymentMode !== \"live\" ? <span className={classes.cardTest}> TEST </span> : <></>}\n                  <hr className={classes.cardHr} />\n                  <CardContent>\n                    <Box px={1}>\n                      <Typography variant=\"h4\" component=\"h2\" gutterBottom={true} style={{fontWeight: \"bold\"}}>\n                        {currencyISO4217ToSymbol(p.priceCurrency)}\n                        {perMonth ? p.pricePerMonth : p.pricePerYear}\n                        {<Typography variant=\"h6\" color=\"textSecondary\" component=\"span\"> / {perMonth ? t(\"month\") : t(\"year\")}</Typography>}\n                      </Typography>\n                      <Typography color=\"textSecondary\" variant=\"subtitle1\" component=\"p\">{\n                        (p.cigNumberAllowed === Number.MAX_SAFE_INTEGER) ?\n                          t(\"Unlimited CIG's\")\n                        :\n                          t(\"Up to {{cigs}} CIG's\", {cigs: p.cigNumberAllowed})\n                      }</Typography>\n                      <Typography color=\"textSecondary\" variant=\"subtitle1\" component=\"div\">{\n                        p.supportTypes.map((supportType, index) => (\n                          <div key={index}>{t(\"Support\") + \" \" + t(\"by\") + \" \" + t(supportType)}</div>\n                        ))\n                      }</Typography>\n                      <br />\n                    </Box>\n                    <Button variant=\"contained\" color=\"secondary\"\n                      onClick={(e) => {\n                        openDialog({\n                          title: t(\"Sure to buy this plan?\"),\n                          contentText: t(\"It allows processing of\") + \" \" +\n                            ((p.cigNumberAllowed === Number.MAX_SAFE_INTEGER) ?\n                              t(\"unlimited CIG's\")\n                                :\n                              t(\"up to {{cigs}} CIG's\", {cigs: p.cigNumberAllowed})\n                            ),\n                          actions: [\n                            {\n                              callback: () => {\n                                console.log(\"Clicked first action button\");\n                                props.onPlanSelected(e, p);\n                              },\n                              text: t(\"Ok\"),\n                              closeModal: true,\n                              // autoFocus: true,\n                            },\n                            {\n                              callback: () => {console.log(\"Clicked second action button\")},\n                              text: t(\"Cancel\"),\n                              closeModal: true,\n                            }\n                          ],\n                        });\n                      }}\n                      disabled={isActivePlan(p)}\n                    >{\n                      isActivePlan(p) ?\n                        t(\"Active plan\")\n                      :\n                        t(\"Select plan\")\n                    }\n                    </Button>\n                    {props.canForcePlan && (\n                      <>\n                        <Box mt={1} />\n                        <Button variant=\"contained\" color=\"tertiary\"\n                          onClick={(e) => {\n                            //props.currentPlan = plan;\n                            //setPlan(p)\n                            props.onPlanForced(e, p.name);\n                          }}\n                          disabled={isActivePlan(p)}\n                        >{\n                          t(\"Force plan\")\n                        }\n                        </Button>\n                      </>\n                    )}\n                    <Box mt={2}>\n                      <Link href=\"#\" color=\"primary\">{/* TODO: create a link (or popup) to give more details about selecting this plan... */}\n                        <small>{t(\"Learn more\")}</small>\n                      </Link>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n            )})}\n          </Grid>\n        </Box>\n      </Container>\n    </section>\n  );\n}\n\nPricing.propTypes = {\n  currentPlan: PropTypes.object,\n  onPlanSelected: PropTypes.func,\n  canForcePlan: PropTypes.bool,\n  onPlanForced: PropTypes.func,\n};\n\nPricing.defaultProps = {\n  currentPlan: {},\n  onPlanSelected: (e) => console.log(\"Selected plan:\", e),\n  canForcePlan: false,\n  onPlanForced: (e) => console.log(\"Forced plan:\", e),\n};\n\nexport default React.memo(Pricing);\n","import api from \"./API\";\n\nconst mode = async() => {\n  return await api.get(\"/payment/mode\",\n  ).then(\n    response => {\n      return response.data;\n    },\n    error => {\n      return error;\n    }\n  );\n};\n\nconst createCheckoutSession = async({product}) => {\n  return await api.post(\"/payment/createCheckoutSession\", {\n    product\n  }).then(\n    response => {\nconsole.log(\"CCS - res:\", response);\n      return response.data;\n    },\n    error => {\nconsole.log(\"CCS - err:\", error);\n      return error;\n    }\n  );\n};\n\nconst PaymentService = {\n  mode,\n  createCheckoutSession\n};\n\nexport default PaymentService;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory/*, useLocation*/} from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useBeforeunload } from \"react-beforeunload\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport AppBar from \"@mui/material/AppBar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Grid from \"@mui/material/Grid\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\n//import Tooltip from \"@mui/material/Tooltip\";\nimport IconAvatar from \"@mui/icons-material/AccountBoxOutlined\";\nimport IconPerson from \"@mui/icons-material/Person\";\nimport IconEmail from \"@mui/icons-material/Email\";\nimport IconFiscalCode from \"@mui/icons-material/AssignmentInd\";\nimport IconBusinessName from \"@mui/icons-material/Business\";\nimport IconAddressStreet from \"@mui/icons-material/House\";\nimport IconAddressStreetNo from \"@mui/icons-material/LooksOne\";\nimport IconAddressCity from \"@mui/icons-material/LocationCity\";\nimport IconAddressProvince from \"@mui/icons-material/Room\";\nimport IconAddressZip from \"@mui/icons-material/Code\";\nimport IconAddressCountry from \"@mui/icons-material/Language\";\nimport Pricing from \"../../components/Pricing\";\nimport { errorMessage/*, capitalize*/ } from \"../../libs/Misc\";\nimport UserService from \"../../services/UserService\";\nimport TokenService from \"../../services/TokenService\";\n//import JobService from \"../../services/JobService\";\nimport PaymentService from \"../../services/PaymentService\";\nimport EventBus from \"../../libs/EventBus\";\nimport { toast } from \"../Toast\";\nimport { FormInput, FormButton } from \"../FormElements\";\nimport config from \"../../config\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    //backgroundColor: theme.palette.background.paper,\n  },\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n  },\n  columnLeft: {\n    marginLeft: theme.spacing(0.2),\n  },\n  columnRight: {\n    marginLeft: \"auto\",\n    marginRight: theme.spacing(0.2),\n  },\n  form: {\n  },\n  fieldset: {\n    border: 0,\n  },\n  fieldsetPersonalData: {\n    color: \"#758c75\",\n    fontSize: 13,\n    border: 1,\n    borderStyle: \"solid\",\n    borderColor: \"#758c75\",\n    borderRadius: 5,\n  },\n  fieldsetCompanyData: {\n    color: \"#7a7aa5\",\n    fontSize: 13,\n    border: 1,\n    borderStyle: \"solid\",\n    borderColor: \"#7a7aa5\",\n    borderRadius: 5,\n  },\n  fieldsetAddress: {\n    color: \"#aaa\",\n    fontSize: 13,\n    border: 1,\n    borderStyle: \"solid\",\n    borderColor: \"#aaa\",\n    borderRadius: 5,\n  },\n  // title: {\n  //   width: \"100%\",\n  //   color: theme.palette.title.color,\n  //   //backgroundColor: '#ccc', //theme.palette.title.backgroundColor,\n  //   //borderRadius: 3,\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  //   paddingTop: 3,\n  //   paddingBottom: 50,\n  //   paddingLeft: 10,\n  //   paddingRight: 10,\n  // },\n  formControlSelectPlan: {\n    minWidth: 200,\n  },\n  formControlSelectRole: {\n    minWidth: 200,\n  },\n  tab: {\n    backgroundColor: theme.palette.secondary.light,\n  },\n  tabIndicator: {\n    backgroundColor: theme.palette.secondary.dark,\n    height: 1,\n  },\n});\n\nconst useStyles = makeStyles((theme) => (styles(theme)));\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst PROFILE_PERSONAL = 0;\nconst PROFILE_PLAN = 1;\nconst PROFILE_ROLES = 2;\n\n\n\nfunction ProfileTabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>\n        {children}\n      </Box>\n    </Typography>\n  );\n}\n\nProfileTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction Profile(props) {\n//console.log(\"PROFILE - props:\", props);\n  const classes = useStyles();\n  const history = useHistory();\n  //const location = useLocation();\n//console.log(\"PROFILE - location.state:\", location.state);\n  const [user, setUser] = useState(TokenService.getUser());\n  const [profile, setProfile] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [fiscalCode, setFiscalCode] = useState(\"\");\n  const [businessName, setBusinessName] = useState(\"\");\n  const [address, setAddress] = useState({});\n  const [addressStreet, setAddressStreet] = useState(\"\");\n  const [addressStreetNo, setAddressStreetNo] = useState(\"\");\n  const [addressCity, setAddressCity] = useState(\"\");\n  const [addressProvince, setAddressProvince] = useState(\"\");\n  const [addressZip, setAddressZip] = useState(\"\");\n  const [addressCountry, setAddressCountry] = useState(\"\");\n  const [paymentMode, setPaymentMode] = useState(\"\");\n  const [plan, setPlan] = useState({});\n  const [plans, setPlans] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [rolesNames, setRolesNames] = useState([]);\n  const [error, setError] = useState({});\n  const { t } = useTranslation();\n  const [tabValue, setTabValue] = React.useState(props?.location?.state?.tabValue ? props?.location?.state?.tabValue : 0);\n  const [anyProfileChanges, setAnyProfileChanges] = React.useState(false);\n  const [anyRolesChanges, setAnyRolesChanges] = React.useState(false);\n  const [anyPlanChanges, setAnyPlanChanges] = React.useState(false);\n\n  const handleChangeTabValue = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  \n  // avoid page unload when unsaved changes present\n  useBeforeunload((event) => {\n    if (anyProfileChanges || anyRolesChanges || anyPlanChanges) {\n      event.preventDefault();\n    }\n  });\n  \n  // avoid history route change when unsaved changes present\n  useEffect(() => {\nconsole.log(\"useeffect block\");\n    const unblock = history.block((location, action) => {\n      if (anyProfileChanges || anyRolesChanges || anyPlanChanges) {\n        return window.confirm(t(\"Are you sure to ignore unsaved data?\"));\n      }\n      return true;\n    });\n  \n    return () => {\n      unblock();\n    };\n  }, [anyProfileChanges, anyRolesChanges, anyPlanChanges, history, t]);\n  \n  useEffect(() => {\nconsole.log(\"useeffect profile:\", profile);\n    if (profile) {\n      setEmail(profile.email ?? \"\");\n      setFirstName(profile.firstName ?? \"\");\n      setLastName(profile.lastName ?? \"\");\n      setFiscalCode(profile.fiscalCode ?? \"\");\n      setBusinessName(profile.businessName ?? \"\");\n      setAddressStreet(profile.address?.street ?? \"\");\n      setAddressStreetNo(profile.address?.streetNo ?? \"\");\n      setAddressCity(profile.address?.city ?? \"\");\n      setAddressProvince(profile.address?.province ?? \"\");\n      setAddressZip(profile.address?.zip ?? \"\");\n      setAddressCountry(profile.address?.country ?? \"\");\n      setPlan(profile.plan ?? {name: \"free\"});\n      setRoles(profile.roles ? profile.roles.map(role => role.name) : []);\n      setAnyProfileChanges(false);\n      setAnyRolesChanges(false);\n      setAnyPlanChanges(false);\n    }\n  }, [profile]);\n\n  useEffect(() => {\nconsole.log(\"useeffect user.id\");\n    if (!user?.id) {\n      toast.error(t(\"User must be authenticated\"));\n      history.goBack();\n    }\n  }, [user?.id, history, t]);\n\n  // get user profile on load\n  useEffect(() => {\nconsole.log(\"useeffect getProfile\");\n    UserService.getProfile().then(\n      result => {\n        if (result instanceof Error) {\n          console.error(\"getProfile error:\", result);\n          return setError({ code: result.message });\n        }\n        //console.log(`profile got successfully:`, result);\n        setProfile(result.user); // we have to update local state outside this useEffect, otherwise there is a really long delay in each set function...\n      }\n    );\n    UserService.getAllPlans().then(\n      result => {\n        if (result instanceof Error) {\n          console.error(\"getAllPlans error:\", result);\n          return setError({ code: result.message });\n        }\n    console.log(`plans got successfully:`, result);\n        setPlans(result.data);\n      }\n    );\n    UserService.getAllRoles().then(\n      result => {\n        if (result instanceof Error) {\n          console.error(\"getAllRoles error:\", result);\n          return setError({ code: result.message });\n        }\nconsole.log(`roles got successfully:`, result);\n        setRolesNames(result.map(role => role.name));\n      }\n    );\n    PaymentService.mode().then(\n      result => {\n        if (result instanceof Error) {\n          console.error(\"mode error:\", result);\n          return setError({ code: result.message });\n        }\n        console.log(\"mode:\", result);\n        setPaymentMode(result.mode);\n      }\n    );\n  }, [user?.id]);\n  \n  useEffect(() => {\n    setAddress({\n      street: addressStreet,\n      streetNo: addressStreetNo,\n      city: addressCity,\n      province: addressProvince,\n      zip: addressZip,\n      country: addressCountry,\n    });\n  }, [addressStreet, addressStreetNo, addressCity, addressProvince, addressZip, addressCountry]);\n\n  const createCheckoutSession = (product) => {\n    PaymentService.createCheckoutSession({product: product.name}).then(\n      result => {\nconsole.log(`createCheckoutSession got successfully:`, result);\n        if (!result?.session?.url) {\n          return toast.error(t(\"Sorry, could not get the payment page\"));\n        }\n        window.location = result.session.url; // redirect to payment session success_url\n      },\n      error => {\n        console.error(\"createCheckoutSession error:\", error);\n        toast.error(errorMessage(error));\n      },\n    );\n  };\n\n  const formProfileUpdate = (e) => {\n    e.preventDefault();\n    setError({});\n\n    UserService.updateProfile({\n      email,\n      firstName,\n      lastName,\n      fiscalCode,\n      businessName,\n      address,\n      roles,\n    }).then(\n      result => {\n        if (result instanceof Error) {\n          console.error(\"profileUpdate error:\", result);\n          toast.warn(errorMessage(result));\n          return setError({ code: result.message });\n        }\n        setAnyProfileChanges(false);\n        toast.success(t(\"Profile updated successfully\"));\n      }\n    );\n  };\n\n  const formRolesUpdate = (e) => {\n    // refresh user roles in local state and in token service (local storage) too\n    user.roles = ((String)(roles)).split(\",\");\nconsole.log(\"USER.ROLES:\", user.roles, typeof user.roles);\n    if (!user.roles || !user.roles.length || user.roles.every(role => role === \"\")) {\n      user.roles = config.api.rolesNamesDefault; // if empty roles, use rolesNamesDefault\n      setRoles(user.roles);\nconsole.log(\"USER.ROLES DEFAULTS TO:\", user.roles, typeof user.roles);\n    }\nconsole.log(\"*** USER:\", user);\n    setUser(user);\n    TokenService.setUser(user);\n    UserService.updateRoles({\n      roles: user.roles,\n    }).then(\n      result => {\n        if (result instanceof Error) {\n          console.error(\"profileUpdate error:\", result);\n          toast.error(errorMessage(result));\n          return setError({ code: result.message });\n        }\n        setRoles(user.roles);\n        setAnyRolesChanges(false);\n        EventBus.dispatch(\"roles-change\");\n        toast.success(t(\"Roles updated successfully\"));\n      }\n    );\n  };\n\n  const formPlanSelect = (e, plan) => {\n    // TODO: what to do with free plan selected?\n    // TODO: what to do with plan downgrade?\n    createCheckoutSession(plan);\n  }\n\n  const formPlanForce = (e, planName) => {\n//console.log(\"formPlanForce:\", e);\n    if (userCanForcePlan()) {\n      const p = plans.find(plan => plan.name === planName);\n      //setPlan(p);\n      user.plan = p;\n      setUser(user);\n      TokenService.setUser(user);\n      UserService.updatePlan({\n        plan: p.name,\n      }).then(\n        result => {\n          UserService.getAllPlans().then(\n            result => {\n              console.log(\"*** forcePlan result OK (user?):\", result);\n              EventBus.dispatch(\"plan-change\");\n              toast.success(t(\"Plan forced successfully\"));\n              console.log(\"useeffect getAllPlans\");\n              console.log(`plans got successfully:`, result);\n              setPlans(result.data);\n              const p = result.data.find(plan => plan.name === planName);\n              //setPlan(p);\n              user.plan = p;\n              setUser(user);\n              TokenService.setUser(user);\n              window.location.reload();\n            },\n            error => {\n              console.error(\"getAllPlans error:\", error);\n            }\n          );\n          /*\n          if (result instanceof Error) {\n            console.error(\"profileUpdate error:\", result);\n            toast.error(errorMessage(result));\n            return setError({ code: result.message });\n          }\n          setPlan(plan);\n          user.plan = plan;\n          setAnyPlanChanges(false);\n          EventBus.dispatch(\"plan-change\");\n          toast.success(t(\"Plan forced successfully\"));\n          */\n        },\n        // error => {\n        //   console.error(\"profileUpdate error:\", result);\n        //   toast.error(errorMessage(result));\n        //   return setError({ code: result.message });\n        // }\n      );\n    }\n  };\n\n  const userCanUpdateRoles = ()  => {\n    return user?.roles?.includes(\"admin\");\n  };\n\n  const userCanForcePlan = ()  => {\n    return user?.roles?.includes(\"admin\");\n  };\n  \n  return (\n    <div className={classes.root}>\n\n      <Container maxWidth={\"sm\"}>\n        <Box m={1} />\n\n        <Grid container justifyContent=\"center\">\n          <Avatar className={classes.avatar}>\n            <IconAvatar />\n          </Avatar>\n        </Grid>\n\n        <Box m={3} />\n\n        <AppBar position=\"static\">\n          <Tabs\n            value={tabValue}\n            onChange={handleChangeTabValue}\n            variant=\"standard\"\n            aria-label=\"tabs for user's personal profile\"\n            classes={{\n              indicator: classes.tabIndicator\n            }}\n            className={classes.tab}\n          >\n            <Tab label={t(\"Your profile\")} {...a11yProps(0)} />\n            <Tab label={t(\"Your plan\")} {...a11yProps(1)} />\n            <Tab label={t(\"Your role(s)\")} {...a11yProps(2)} />\n          </Tabs>\n        </AppBar>\n      </Container>\n\n      <Container maxWidth={(tabValue === PROFILE_PLAN) ? \"md\" : \"sm\"}>\n        {(tabValue === PROFILE_PERSONAL) &&\n        <ProfileTabPanel value={tabValue} index={PROFILE_PERSONAL}>\n      \n          <form name=\"form\" className={classes.form} noValidate autoComplete=\"off\">\n            <fieldset className={classes.fieldset}>\n\n              <Box m={3} />\n\n              <fieldset className={classes.fieldsetPersonalData}>\n                <legend>{t(\"Personal data\")}</legend>\n\n                {/* <Tooltip\n                  title={t(\"Email\")}\n                  placement={\"left\"}\n                > */}\n                  <Grid item xs={12}>\n                    <FormInput\n                      id={\"email\"}\n                      value={email}\n                      onChange={v => { setAnyProfileChanges(true); setEmail(v); }}\n                      placeholder={t(\"Email\")}\n                      startAdornmentIcon={<IconEmail />}\n                      error={error.email}\n                      autoFocus\n                    />\n                  </Grid>\n                {/* </Tooltip> */}\n\n                <Grid container direction={\"row\"} columnSpacing={{xs: 1, sm: 2, md: 3, lg: 4}} rowSpacing={0}>\n                  {/* <Tooltip\n                    title={t(\"First name\")}\n                    placement={\"left\"}\n                  > */}\n                    <Grid item xs={12} sm={6}>\n                      <FormInput\n                        id={\"firstName\"}\n                        value={firstName}\n                        onChange={v => { setAnyProfileChanges(true); setFirstName(v); }}\n                        placeholder={t(\"First Name\")}\n                        startAdornmentIcon={<IconPerson />}\n                        error={error.firstName}\n                      />\n                    </Grid>\n                  {/* </Tooltip> */}\n\n                  {/* <Tooltip\n                      title={t(\"Last name\")}\n                      placement={\"left\"}\n                    > */}\n                    <Grid item xs={12} sm={6}>\n                      <FormInput\n                        id={\"lastName\"}\n                        value={lastName}\n                        onChange={v => { setAnyProfileChanges(true); setLastName(v); }}\n                        placeholder={t(\"Last Name\")}\n                        startAdornmentIcon={<IconPerson />}\n                        error={error.lastName}\n                      />\n                    </Grid>\n                  {/* </Tooltip> */}\n                </Grid>\n              </fieldset>\n\n              <Box m={1} />\n\n              <fieldset className={classes.fieldsetCompanyData}>\n                <legend>{t(\"Company data\")}</legend>\n\n                <Grid container direction={\"row\"} columnSpacing={{xs: 1, sm: 2, md: 3, lg: 4}} rowSpacing={0}>\n                  {/* <Tooltip\n                    title={t(\"Company fiscal code\")}\n                    placement={\"left\"}\n                  > */}\n                    <Grid item xs={12}>\n                      <FormInput\n                        id={\"fiscalCode\"}\n                        value={fiscalCode}\n                        onChange={v => { setAnyProfileChanges(true); setFiscalCode(v); }}\n                        placeholder={t(\"Company fiscal code\")}\n                        startAdornmentIcon={<IconFiscalCode />}\n                        error={error.fiscalCode}\n                      />\n                    </Grid>\n                  {/* </Tooltip> */}\n\n                  {/* <Tooltip\n                    title={t(\"Company business name\")}\n                    placement={\"left\"}\n                  > */}\n                    <Grid item xs={12}>\n                      <FormInput\n                        id={\"businessName\"}\n                        value={businessName}\n                        onChange={v => { setAnyProfileChanges(true); setBusinessName(v); }}\n                        placeholder={t(\"Company business name\")}\n                        startAdornmentIcon={<IconBusinessName />}\n                        error={error.businessName}\n                      />\n                    </Grid>\n                  {/* </Tooltip> */}\n                </Grid>\n                  \n                <Box m={1} />\n\n                <fieldset className={classes.fieldsetAddress}>\n                  <legend>{t(\"Address\")}</legend>\n\n                  <Grid container direction={\"row\"} columnSpacing={{xs: 1, sm: 2, md: 3, lg: 4}} rowSpacing={0}>\n                    {/* <Tooltip\n                      title={t(\"Address street\")}\n                      placement={\"left\"}\n                    > */}\n                      <Grid item xs={12} sm={8}>\n                        <FormInput\n                          id={\"addressStreet\"}\n                          value={addressStreet}\n                          onChange={v => { setAnyProfileChanges(true); setAddressStreet(v); }}\n                          placeholder={t(\"Street\")}\n                          startAdornmentIcon={<IconAddressStreet />}\n                          error={error.addressStreet}\n                        />\n                      </Grid>\n                    {/* </Tooltip> */}\n\n                    {/* <Tooltip\n                      title={t(\"Address street number\")}\n                      placement={\"left\"}\n                    > */}\n                      <Grid item xs={12} sm={4}>\n                        <FormInput\n                          id={\"addressStreetNo\"}\n                          value={addressStreetNo}\n                          onChange={v => { setAnyProfileChanges(true); setAddressStreetNo(v); }}\n                          placeholder={t(\"N°\")}\n                          startAdornmentIcon={<IconAddressStreetNo />}\n                          error={error.addressStreetNo}\n                        />\n                      </Grid>\n                    {/* </Tooltip> */}\n\n                    {/* <Tooltip\n                      title={t(\"Address city\")}\n                      placement={\"left\"}\n                    > */}\n                      <Grid item xs={12}>\n                        <FormInput\n                          id={\"addressCity\"}\n                          value={addressCity}\n                          onChange={v => { setAnyProfileChanges(true); setAddressCity(v); }}\n                          placeholder={t(\"City\")}\n                          startAdornmentIcon={<IconAddressCity />}\n                          error={error.addressCity}\n                        />\n                      </Grid>\n                    {/* </Tooltip> */}\n        \n                    {/* <Tooltip\n                      title={t(\"Address province\")}\n                      placement={\"left\"}\n                    > */}\n                      <Grid item xs={12} sm={7}>\n                        <FormInput\n                          id={\"addressProvince\"}\n                          value={addressProvince}\n                          onChange={v => { setAnyProfileChanges(true); setAddressProvince(v); }}\n                          placeholder={t(\"Province\")}\n                          startAdornmentIcon={<IconAddressProvince />}\n                          error={error.addressProvince}\n                        />\n                      </Grid>\n                    {/* </Tooltip> */}\n        \n                    {/* <Tooltip\n                      title={t(\"Address ZIP code\")}\n                      placement={\"left\"}\n                    > */}\n                      <Grid item xs={12} sm={5}>\n                        <FormInput\n                          id={\"addressZip\"}\n                          value={addressZip}\n                          onChange={v => { setAnyProfileChanges(true); setAddressZip(v); }}\n                          placeholder={t(\"ZIP\")}\n                          startAdornmentIcon={<IconAddressZip />}\n                          error={error.addressZip}\n                        />\n                      </Grid>\n                    {/* </Tooltip> */}\n\n                    {/* <Tooltip\n                      title={t(\"Address country\")}\n                      placement={\"left\"}\n                    > */}\n                      <Grid item xs={12}>\n                        <FormInput\n                          id={\"addressCountry\"}\n                          value={addressCountry}\n                          onChange={v => { setAnyProfileChanges(true); setAddressCountry(v); }}\n                          placeholder={t(\"Country\")}\n                          startAdornmentIcon={<IconAddressCountry />}\n                          error={error.addressCountry}\n                        />\n                      </Grid>\n                    {/* </Tooltip> */}\n                  </Grid>\n\n                </fieldset>\n              </fieldset>\n            </fieldset>\n          </form>\n        </ProfileTabPanel>\n        }\n\n        {(tabValue === PROFILE_PLAN) &&\n        <ProfileTabPanel value={tabValue} index={PROFILE_PLAN}>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <fieldset className={classes.fieldset}>\n              <Pricing\n                currentPlan={plan}\n                onPlanSelected={formPlanSelect}\n                canForcePlan={userCanForcePlan()}\n                onPlanForced={formPlanForce}\n                paymentMode={paymentMode}\n              />\n            </fieldset>\n          </form>\n        </ProfileTabPanel>\n        }\n\n        {(tabValue === PROFILE_ROLES) &&\n        <ProfileTabPanel value={tabValue} index={PROFILE_ROLES}>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <fieldset className={classes.fieldset}>\n\n              <Box m={3} />\n\n                {/* <Tooltip\n                  title={\n                    userCanUpdateRoles() ?\n                      t(\"Role(s)\") + \" (\" + t(\"select one or more role\") + \")\"\n                    :\n                      t(\"Your role(s)\")\n                  }\n                  placement={\"left\"}\n                > */}\n                  <Grid item xs={12}>\n                    <FormControl variant=\"outlined\" className={classes.formControlSelectRole}>\n                      <InputLabel id=\"roles-label\">{t(\"Role(s)\")}</InputLabel>\n                      <Select\n                        labelId=\"roles-label\"\n                        id=\"roles\"\n                        multiple\n                        value={roles}\n                        onChange={e => { setAnyRolesChanges(true); setRoles(e.target.value); }}\n                        label={t(\"Role(s)\")}\n                        disabled={!userCanUpdateRoles()}\n                      >\n                        {rolesNames.map((role, index) => (\n                          <MenuItem key={index} value={role}>{role}</MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                {/* </Tooltip> */}\n            </fieldset>\n          </form>\n        </ProfileTabPanel>\n        }\n      </Container>\n\n      {(tabValue === PROFILE_PERSONAL) && (\n        <Grid container justifyContent=\"center\">\n          <FormButton\n            fullWidth={false}\n            className={\"buttonSecondary\"}\n            autoFocus={true}\n            onClick={formProfileUpdate}\n          >\n            {t(\"Update\")}\n          </FormButton>\n        </Grid>\n      )}\n\n      {(tabValue === PROFILE_ROLES) && userCanUpdateRoles() && (\n        <Grid container justifyContent=\"center\">\n          <FormButton\n            fullWidth={false}\n            className={\"buttonSecondary\"}\n            autoFocus={true}\n            onClick={formRolesUpdate}\n            //disabled={!userCanUpdateRoles()}\n          >\n            {t(\"Update\")}\n          </FormButton>\n        </Grid>\n      )}\n      <Box m={1} />\n\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  tabValue: PropTypes.number,\n};\n\nProfile.defaultProps = {\n  tabValue: PROFILE_PERSONAL,\n};\n\n\n\nexport default React.memo(Profile);\n"],"sourceRoot":""}